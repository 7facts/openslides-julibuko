{"version":3,"file":"dialog.js","sources":["../../../../../../src/cdk-experimental/dialog/dialog-config.ts","../../../../../../src/cdk-experimental/dialog/dialog-container.ts","../../../../../../src/cdk-experimental/dialog/dialog-ref.ts","../../../../../../src/cdk-experimental/dialog/dialog-injectors.ts","../../../../../../src/cdk-experimental/dialog/dialog.ts","../../../../../../src/cdk-experimental/dialog/dialog-module.ts","../../../../../../src/cdk-experimental/dialog/index.ts"],"names":["observableOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,6BAKC;AACD;AACY;AACN,IAPJ,6BAAa;AACf;AACY,IADV,gCAAgB;AAClB;AACc,IADZ,8BAAc;AAChB;AAGU,IAHR,+BAAe;AACjB;AACA;AACG;AAAe;AAAlB,MAAa,YAAY;AAAG,IAA5B;AAAgB;AAAY;AACG;AAAY,QAezC,SAAI,GAAgB,QAAQ,CAAC;AAC/B;AACW;AACE;AAAY,QAAvB,eAAU,GAAuB,EAAE,CAAC;AACtC;AACW;AACE;AAAY,QAAvB,gBAAW,GAAa,IAAI,CAAC;AAC/B;AACW;AACE;AAAY,QAAvB,kBAAa,GAAwB,EAAE,CAAC;AAC1C;AACW;AACE;AAAY,QAAvB,iBAAY,GAAa,KAAK,CAAC;AACjC;AACW;AACE;AAEZ,QAFC,UAAK,GAAY,EAAE,CAAC;AACtB;AACW;AACE;AAEb,QAFE,WAAM,GAAY,EAAE,CAAC;AACvB;AACW;AACE;AAAY,QAAvB,aAAQ,GAAqB,EAAE,CAAC;AAClC;AACW;AACE;AAAY,QAAvB,cAAS,GAAqB,EAAE,CAAC;AACnC;AACW;AACE;AAAY,QAAvB,aAAQ,GAAqB,MAAM,CAAC;AACtC;AACW;AACE;AAAY,QAAvB,cAAS,GAAqB,EAAE,CAAC;AACnC;AACW;AAGX;AAAY,QACV,SAAI,GAAc,IAAI,CAAC;AACzB;AACW;AACE;AACb,QAEE,oBAAe,GAAmB,IAAI,CAAC;AACzC;AACW;AACE;AAAY,QAAvB,cAAS,GAAmB,IAAI,CAAC;AACnC;AACW;AACE;AAAY,QAAvB,cAAS,GAAa,IAAI,CAAC;AAC7B;AACW;AACE;AAAY,QAAvB,2BAAsB,GAAY,OAAO,CAAC;AAC5C;AACW;AACE;AAAY,QAAvB,0BAAqB,GAAY,OAAO,CAAC;AAC3C,KAAC;AACD,CADC;AACD;AAAa;AAAQ;AAAyD;AAAiB;AAAQ,IAtErG,0CAAuD;AACzD;AAEC;AACE;AACE;AACE;AAEJ;AAAiB;AAAQ,IAA1B,wCAAoC;AACtC;AACO;AACF;AAEC;AAAQ,IAFZ,0BAAY;AACd;AACO;AACF;AAAiB;AAAQ,IAA5B,4BAA6B;AAC/B;AACO;AACF;AAAiB;AAAQ,IAA5B,kCAAoC;AACtC;AACO;AACF;AAAiB;AAAQ,IAA5B,mCAA6B;AAC/B;AACO;AACF;AAAiB;AAAQ,IAA5B,qCAAwC;AAC1C;AACO;AACF;AAAiB;AAAQ,IAA5B,oCAA+B;AACjC;AACO;AACF;AAAiB;AAEhB,IAFJ,6BAAoB;AACtB;AACO;AACF;AAAiB;AAEjB,IAFH,8BAAqB;AACvB;AACO;AACF;AAAiB;AAAQ,IAA5B,gCAAgC;AAClC;AACO;AACF;AAAiB;AAAQ,IAA5B,iCAAiC;AACnC;AACO;AACF;AAAiB;AAAQ,IAA5B,gCAAoC;AACtC;AACO;AACF;AAAiB;AAAQ,IAA5B,iCAAiC;AACnC;AACO;AACF;AAAiB;AAEtB,IAFE,gCAA0B;AAC5B;AACO;AACF;AAAiB;AAEnB,IAFD,4BAAuB;AACzB;AACO;AACF;AAAiB;AAElB,IAFF,iCAAsB;AACxB;AACO;AACF;AAAiB;AAAQ,IAA5B,uCAAuC;AACzC;AACO;AACF;AAAiB;AAAQ,IAA5B,iCAAiC;AACnC;AACO;AACF;AAAiB;AACtB,IADE,iCAA2B;AAC7B;AACO;AACF;AAAiB;AAAQ,IAA5B,8CAA0C;AAC5C;AACO;AACF;AAAiB;AAAQ,IAA5B,6CAAyC;AAC3C;AACA;AAAC;AAAI;AAAkC;AAAmE;AAAsI;AAAI;AAAI;AAAe;AC1DvQ,SAAgB,sCAAsC;AACtD,IAAE,MAAM,KAAK,CAAC,uEAAuE,CAAC,CAAC;AACvF,CAAC;AACD;AAEE;AAC2D;AAC7C;AA8BhB,MAAa,kBAAmB,SAAQ,gBAAgB;AAAG;AAAQ;AAClD;AAEL;AACH;AAA4B;AAEtB;AAAQ,IAwCrB,YACU,WAAoC,EACpC,iBAAmC,EACnC,kBAAqC,EACf,SAAc,EAErC,OAAqB;AAChC,QAAI,KAAK,EAAE,CAAC;AACZ,QAPY,gBAAW,GAAX,WAAW,CAAyB;AAAC,QACrC,sBAAiB,GAAjB,iBAAiB,CAAkB;AAAC,QACpC,uBAAkB,GAAlB,kBAAkB,CAAmB;AAAC,QAGvC,YAAO,GAAP,OAAO,CAAc;AAAC;AACxB;AAIL;AAAY,QArDd,WAAM,GAA8B,OAAO,CAAC;AAC9C;AACW;AACE;AAAY,QAAf,yCAAoC,GAAuB,IAAI,CAAC;AAC1E;AACW;AACC;AAAY,QAAd,eAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;AACrF,QAYkC,eAAU,GAAY,IAAI,CAAC;AAC7D;AACW;AACE;AAAY,QAMvB,iBAAY,GAAkB,IAAI,OAAO,EAAE,CAAC;AAC9C;AACW;AACE;AAAY,QAAvB,gBAAW,GAAkB,IAAI,OAAO,EAAE,CAAC;AAC7C;AACW;AACE;AAAY,QAAvB,gBAAW,GAAkB,IAAI,OAAO,EAAE,CAAC;AAC7C;AACW;AACE;AAAY,QAAvB,eAAU,GAAkB,IAAI,OAAO,EAAE,CAAC;AAC5C;AACW;AACE;AAAY,QAAvB,mBAAc,GAAG,IAAI,OAAO,EAAkB,CAAC;AACjD;AACW;AAEP;AACD;AACA;AAAoC;AACtC,QAiEC,oBAAe;AAAQ;AAChB;AAAuB;AAC9B,QAFkB,CAAC,MAAiB;AACtC,YAAI,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE;AACxC,gBAAM,sCAAsC,EAAE,CAAC;AAC/C,aAAK;AACL,YACI,IAAI,CAAC,6BAA6B,EAAE,CAAC;AACzC,YAAI,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AACpD,SAAG,EAAA;AACH,QArEI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC/B;AAEG;AACI;AACI,QAAP,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB;AAAM;AACtC;AAAwB;AAAuB;AACzD,QAF2C,CAAC,CAAC,EAAE,CAAC;AACvD,YAAM,OAAO,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC;AACpE,SAAK,EAAC,CAAC,CAAC,SAAS;AAAM;AACD;AAAuB;AAAY,QADvC,KAAK;AACvB;AACM,YAAA,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE;AACrC,gBAAQ,IAAI,CAAC,8BAA8B,EAAE,CAAC;AAC9C,gBAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AAChC,gBAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;AACpC,aAAO;AACP,YACM,IAAI,KAAK,CAAC,SAAS,KAAK,OAAO,KAAK,KAAK,CAAC,OAAO,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,EAAE;AACjG,gBAAQ,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACvC,gBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC/B,gBAAQ,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AACnC,aAAO;AACP,SAAK,EAAC,CAAC;AACP,KAAG;AACH;AAEI;AAMK;AAA8B;AACf;AAAQ;AAAmB;AAAQ,IAtEzD,IAAoC,UAAU,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,EAAE;AAC7F;AACO;AAAmB;AAAQ,IAAhC,IACI,gBAAgB,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;AACjE;AACO;AAAmB;AAAQ,IAAhC,IAA8B,KAAK,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACrE;AACO;AAAmB;AAAQ,IAEhC,IAAkC,SAAS,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE;AAC9D;AAAQ;AAE4C;AAAmB;AAAQ,IAmD7E,WAAW;AACb,QAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AAC9B,QAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;AACnC,KAAG;AACH;AAEC;AACE;AAAmB;AAEA;AAAmB;AAAQ,IAA/C,qBAAqB,CAAI,MAA0B;AAAI,QACrD,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE;AACxC,YAAM,sCAAsC,EAAE,CAAC;AAC/C,SAAK;AACL,QACI,IAAI,CAAC,6BAA6B,EAAE,CAAC;AACzC,QAAI,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AAC1D,KAAG;AACH;AAEC;AACE;AAAmB;AAEA;AAAmB;AAAQ,IAA/C,oBAAoB,CAAI,MAAyB;AAAI,QACnD,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE;AACxC,YAAM,sCAAsC,EAAE,CAAC;AAC/C,SAAK;AACL,QACI,IAAI,CAAC,6BAA6B,EAAE,CAAC;AACzC,QAAI,OAAO,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACzD,KAAG;AACH;AAEC;AACc;AAAwB;AACvB;AAAQ,IAatB,iBAAiB,CAAC,KAAqB;AACzC,QAAI,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,EAAE;AACnC,YAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC/B,YAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;AACnC,SAAK;AACL,QAAI,IAAI,KAAK,CAAC,SAAS,KAAK,OAAO,KAAK,KAAK,CAAC,OAAO,KAAK,MAAM,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,EAAE;AAC/F,YAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AAC9B,YAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;AAClC,SAAK;AACL,KAAG;AACH;AACO;AACF;AAAmB;AAClB,IADJ,aAAa;AAAK,QAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACzB;AAEG;AACI,QAAH,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC3C,KAAG;AACH;AACO;AACF;AAAgB;AAAmB;AACpC,IADM,6BAA6B;AACvC,QAAI,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,YAAM,IAAI,CAAC,oCAAoC,sBAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAe,CAAC;AAC9F;AAEK;AACM;AACM,YAAX,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;AAAM;AAA2B;AAC5D,YAD4B,MAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,EAAC,CAAC;AAC3E,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACE;AACU;AAAmB;AAAQ,IAAhC,8BAA8B;AACxC;AAAyB,cAAf,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa;AAClD;AAEG;AACI;AACI,QAAP,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AAChC,YAAM,IAAI,CAAC,UAAU,CAAC,4BAA4B,EAAE,CAAC,IAAI;AAAM;AACrC;AAA2B;AAAgB,YADX,aAAa;AACvE;AACQ;AACQ,gBAAR,IAAI,CAAC,aAAa,EAAE;AAC5B,oBAAU,OAAO,CAAC,KAAK,EAAE,CAAC;AAC1B,iBAAS;AACT,aAAO,EAAC,CAAC;AACT,SAAK;AAAC,aAAK;AACX;AAA6B,kBAAjB,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa;AACxD;AAEK;AACM;AACM;AACM;AACM,YAAvB,IAAI,aAAa,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACzE,gBAAQ,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AACF;AAAgB;AACnB;AAAQ,IADA,uBAAuB;AACjC;AAAyB,cAAf,OAAO,GAAG,IAAI,CAAC,oCAAoC;AAC7D;AACI,QAAA,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;AACxD;AAA6B,kBAAjB,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa;AACxD;AAA6B,kBAAjB,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa;AACpD;AAEK;AACM;AACM;AACM,YAAjB,IAAI,CAAC,aAAa,IAAI,aAAa,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,aAAa,KAAK,OAAO;AAC9F,gBAAQ,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACzC,gBAAQ,OAAO,CAAC,KAAK,EAAE,CAAC;AACxB,aAAO;AACP,SAAK;AACL,KAAG;AACH;8CA5OC,SAAS,SAAC,kBACT,QAAQ,EAAE,sBAAsB,kBAChC,yDAAsC,kBAEtC,aAAa,EAAE,iBAAiB,CAAC,IAAI;sGAGrC,eAAe,EAAE,uBAAuB,CAAC,OAAO,kBAChD,UAAU,EAAE;cACV,OAAO,CAAC,QAAQ,EAAE;CAChB,KAAK,CAAC,OAAO,EAAE;CAAK,CAAC,EAAC,OAAO,EAAE,CAAC;AAAC,CAAC,CAAC,0BACnC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;MACxC,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC,4BAA4B,CAAC,CAAC,0BAC/D;EAAU,CAAC,sBAAsB,EAAE,OAAO,CAAC,2BAA2B,CAAC,CAAC,uBACzE,CAAC,kBACH,kBACD,IAAI,EAAE,sBACJ,WAAW,EAAE;mBAMX;qBACF,iBAAiB,EAAE,2BAA2B,sBAC9C,gBAAgB,EAAE,6BAA6B,mBAChD;2GACF;;;;;;;;;;eACG;AAAC;AAAmB;AAA4C,YAnDlE,UAAU;AACV,YAfM,gBAAgB;AAAI,YAW1B,iBAAiB;AACjB,4CAuGG,QAAQ,YAAI,MAAM,SAAC,QAAQ;AAAS,YA1FjC,YAAY;AAAG;AAAG;AAGV,yBAqDb,WAAW,SAAC,iBAAiB;AAAO,+BAEpC,WAAW,SAAC,uBAAuB;AACjC,oBAEF,WAAW,SAAC,WAAW;AAAO,yBAE9B,WAAW,SAAC,iBAAiB;AAAO,wBAEpC,WAAW,SAAC,eAAe;AAAO,0BAIlC,SAAS,SAAC,eAAe,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAa;AAAQ;AAE5D;AAAgB;AAAQ,IA9BpC,uCAAqC;AACvC;AACO;AACF;AAAiB;AAAQ,IAA5B,oCAA4C;AAC9C;AACO;AACF;AAAiB;AAAgB;AAAQ,IAA5C,kEAAwE;AAC1E;AACO;AACH;AAAiB;AAAgB;AAAQ,IAA3C,wCAAmF;AACrF;AACoB,IAWlB,wCAA2D;AAC7D;AACO;AAC+B;AAElC;AAAQ,IACV,yCAAyE;AAC3E;AACO;AACF;AAAiB;AAAQ,IAA5B,0CAA4C;AAC9C;AACO;AACF;AAAiB;AAAQ,IAA5B,yCAA2C;AAC7C;AACO;AACF;AAAiB;AAAQ,IAA5B,yCAA2C;AAC7C;AACO;AACF;AAAiB;AAAQ,IAA5B,wCAA0C;AAC5C;AACO;AACF;AAAiB;AAAQ,IAA5B,4CAA+C;AACjD;AACO;AACuC;AACL;AACF;AACnB;AAAiB;AAAQ,IAkE3C,6CAOC;AACH;AACO;AAAiB;AAAgB;AAAQ,IA9E5C,yCAA4C;AAAC;AAC1C;AAAiB;AAAgB;AAAQ,IAA5C,+CAA2C;AAAC;AACzC;AAAiB;AAAgB;AAAQ,IAA5C,gDAA6C;AAAC;AAC3C;AAAiC;AACjC;AAAQ,IACX,qCAA4B;AAAC;AAAE;AACnC;AAAI;AAEoB;AAE4B;AACuC;AAAI;AAC/F;AAAqC;AAAa;AAAI,ICpHlD,QAAQ,GAAG,CAAC;AAChB;AACG;AACoD;AAE1C;AAAb,MAAa,SAAS;AAAG;AAAQ;AACP;AACjB;AAEH;AAAQ,IAMZ,YACS,WAAuB,EACpB,kBAAsC,EACvC,KAAa,UAAU,QAAQ,EAAE,EAAE;AAChD,QAHW,gBAAW,GAAX,WAAW,CAAY;AAAC,QACrB,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC,QACxC,OAAE,GAAF,EAAE,CAAiC;AAAC;AAGjD,QAAI,IAAI,kBAAkB,CAAC,OAAO,CAAC,WAAW,EAAE;AAChD,YAAM,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS;AAAM;AACzB;AAClB,YAFsC;AAC5C,gBAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAChC,oBAAU,IAAI,CAAC,KAAK,EAAE,CAAC;AACvB,iBAAS;AACT,aAAO,EAAC,CAAC;AACT,SAAK;AACL,QACI,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS;AAAM;AACnB;AAAY,QADE;AAClC,YAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;AACxC,SAAK,EAAC,CAAC;AACP,QACI,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS;AAAM;AAClB;AAAY,QADC;AACjC,YAAM,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAChC,YAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;AACjC,YAAM,IAAI,CAAC,iBAAiB,sBAAG,IAAI,EAAC,CAAC;AACrC,SAAK,EAAC,CAAC;AACP;AAEG,QAAC,WAAW,CAAC,aAAa,EAAE;AAC/B,aAAO,IAAI,CAAC,MAAM;AAAM;AACF;AAAuB;AAAY,QADtC,KAAK;AACxB,YAAQ,OAAO,KAAK,CAAC,OAAO,KAAK,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACxF,SAAO,EAAC,CAAC;AACT,aAAO,SAAS;AAAM;AACA;AACT;AACV,QAHc,KAAK;AACtB,YAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B,YAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB,SAAO,EAAC,CAAC;AACT,KAAG;AACH;AACO;AACF;AAAmB;AAAQ,IAA9B,aAAa;AAAK,QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AAEC;AAAmB;AAAQ,IAA7B,KAAK,CAAC,YAAgB;AAAI,QACxB,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;AAChC,QAAI,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AAAsB;AACtB;AAC2C;AAC9B;AAAQ,IADtB,cAAc,CAAC,QAAyB;AAAI;AAC3B,YAAX,QAAQ,GAAG,mBAAA,IAAI,GAAC,oBAAoB,EAAE;AAC9C,QACI,IAAI,QAAQ,KAAK,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AACvD,YAAM,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpF,SAAK;AAAC,aAAK;AACX,YAAM,QAAQ,CAAC,kBAAkB,EAAE,CAAC;AACpC,SAAK;AACL,QACI,IAAI,QAAQ,KAAK,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;AACvD,YAAM,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnF,SAAK;AAAC,aAAK;AACX,YAAM,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AAClC,SAAK;AACL,QACI,mBAAA,IAAI,GAAC,WAAW,CAAC,cAAc,EAAE,CAAC;AACtC,QACI,0BAAO,IAAI,GAAC;AAChB,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,aAAa;AAAK,QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;AAC5C,KAAG;AACH;AAEC;AACE;AAAsB;AACvB;AAC2C;AACxB;AACd,IAFL,UAAU,CAAC,IAAuB;AAAI,QACpC,IAAI,IAAI,CAAC,KAAK,EAAE;AACpB,YAAM,mBAAA,IAAI,GAAC,oBAAoB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/D,SAAK;AACL,QAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,mBAAA,IAAI,GAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjE,SAAK;AACL,QAAI,mBAAA,IAAI,GAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACtC,QAAI,mBAAA,IAAI,GAAC,WAAW,CAAC,cAAc,EAAE,CAAC;AACtC,QAAI,0BAAO,IAAI,GAAC;AAChB,KAAG;AACH;AACO;AACF;AAAgB;AAAmB;AAAQ,IAAtC,oBAAoB;AAAK,QAC/B,0BAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,gBAAgB,GAA2B;AACnF,KAAG;AACH;AACO;AACF;AAAmB;AAAQ,IAA9B,YAAY;AAAK,QACf,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;AAC/D,KAAG;AACH;AACO;AACF;AAAmB;AAAQ,IAA9B,WAAW;AAAK,QACd,OAAO,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;AAC9D,KAAG;AACH;AACO;AACF;AAAmB;AAAQ,IAA9B,YAAY;AAAK,QACf,OAAO,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG;AAAM;AAG5D;AAAY,QAH2C,MAAM,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;AAC7E,KAAG;AACH;AACO;AACF;AAAmB;AAAQ,IAA9B,WAAW;AAAK,QACd,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG;AAAM;AAG5D;AAAY,QAH2C,MAAM,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;AAC5E,KAAG;AACH,CAAC;AACD;AAAa;AAAQ;AAAoD;AAAiB;AAAQ,IAjIhG,sCAAqB;AACvB;AACO;AACF;AAAiB;AAAQ,IAA5B,iCAAkC;AACpC;AACO;AACF;AAAiB;AAEnB;AAAQ,IAFT,4BAA+B;AACjC;AAEK,IAAD,gCAA8B;AAAC;AAC5B;AAAiB;AAAkB;AAAQ,IAA9C,uCAAgD;AAAC;AACjC,IAAhB,uBAA4C;AAAC;AAAE;AACnD;AACG;AAAkC;AACH;AAI1B;AACN;AAAI;AAGmC;AAC7B;AC5BZ,MAAa,sBAAsB,GAC/B,IAAI,cAAc,CAAuB,sBAAsB,CAAC;AACpE;AACG;AAA0C;AACjC;AAAZ,MAAa,WAAW,GAAG,IAAI,cAAc,CAAM,YAAY,CAAC;AAChE;AACG;AAAkD;AACzC;AAAZ,MAAa,UAAU,GAAG,IAAI,cAAc,CAAiB,WAAW,CAAC;AACzE;AACG;AAAyC;AAChC;AAAZ,MAAa,aAAa,GAAG,IAAI,cAAc,CAAe,cAAc,CAAC;AAC7E;AACG;AAA+D;AACtD;AAAZ,MAAa,gBAAgB,GACzB,IAAI,cAAc,CAAoC,iBAAiB,CAAC;AAC5E;AACG;AACH;AAAsB;AAAe;AAArC,SAAgB,2CAA2C,CAAC,OAAgB;AAC3E,IACC;AAAY;AAAmB;AAAQ,IAAhC,MAAM,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAC;AAChD,CAAC;AACD;AACG;AACH;AAAa;AAAb,MAAa,mCAAmC,GAAG;AACnD,IAAE,OAAO,EAAE,sBAAsB;AACjC,IAAE,IAAI,EAAE,CAAC,OAAO,CAAC;AACjB,IAAE,UAAU,EAAE,2CAA2C;AACzD,CAAC;AACD;AAAC;AAAI;AAAkC;AAAyD;AAAsI;AAAI;AAAI;AAAkC;ACChR,MAAa,MAAM;AAAG;AAAQ;AAChB;AAA4B;AAEV;AACvB;AAAgC;AACjB;AAAQ,IAoB9B,YACY,QAAiB,EACjB,SAAmB,EACC,qBAA2C;AAC5E;AAAsD;AACH,IACd,cAAmB,EACnB,aAAqB,EACzC,QAAkB;AACpC,QARc,aAAQ,GAAR,QAAQ,CAAS;AAAC,QAClB,cAAS,GAAT,SAAS,CAAU;AAAC,QACA,0BAAqB,GAArB,qBAAqB,CAAsB;AAAC,QAIxC,kBAAa,GAAb,aAAa,CAAQ;AAAC,QAzB1D,wBAAmB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC5C;AAEK,QAAH,mBAAc,GAAqB,KAAK;AAAM;AAAuB;AAC/D,QADmC,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM;AACxE,YAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC;AAC9E,QAKE,iBAAY,GAA4B,IAAI,OAAO,EAAE,CAAC;AACxD,QAKE,iBAAY,GAAqB,EAAE,CAAC;AACtC;AAIa;AACoB;AACE,QAQ/B,IAAI,CAAC,aAAa,IAAI,QAAQ,EAAE;AACpC,YAAM,QAAQ,CAAC,SAAS;AAAM;AAG7B;AAAgB,YAHQ,MAAM,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC;AAChD,SAAK;AACL,QACI,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;AAC1C,KAAG;AACH;AACO;AACkB;AAAmB;AAC5C,IA3CE,IAAI,eAAe;AAAK,QACtB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC;AAC7F,KAAG;AACH;AAAQ;AAEI;AAAmB;AAAQ,IAKrC,IAAI,WAAW;AAAK,QAClB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;AACnF,KAAG;AACH;AAAQ;AAER;AAAmB;AAAQ,IACzB,IAAI,WAAW;AAAK,QAClB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;AACnF,KAAG;AACH;AAAQ;AAEN;AACM;AAAmB;AACzB,IAmBA,OAAO,CAAC,EAAU;AAAI,QACpB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI;AAAM;AAGrC;AAAuB;AACtB,QAJ+B,GAAG,IAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAC,CAAC;AACzD,KAAG;AACH;AACO;AACF;AACF;AAAQ,IADT,QAAQ;AAAK,QACX,IAAI,CAAC,WAAW,CAAC,OAAO;AAAM;AAG7B;AAAuB;AAAY,QAHX,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE,EAAC,CAAC;AACjD,KAAG;AACH;AACO;AACF;AAAmB;AAA4B;AAA0B;AAC1E;AAAQ,IADV,iBAAiB,CAAI,SAA2B,EAAE,MAAqB;AAAI,QACzE,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAC/C,QACI,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;AAC9C,YAAM,MAAM,KAAK,CAAC,mBAAmB,MAAM,CAAC,EAAE,iDAAiD,CAAC,CAAC;AACjG,SAAK;AACL;AACwB,cAAd,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;AAClD;AAAyB,cAAf,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,MAAM,CAAC;AAC3E;AAAyB,cAAf,SAAS,GAAG,IAAI,CAAC,gCAAgC,CAAC,SAAS,EAAE,eAAe,EAChF,UAAU,EAAE,MAAM,CAAC;AACzB,QACI,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AACvC,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH;AACO;AACF;AAAmB;AAA2B;AAA0B;AACtE;AAAQ,IADb,gBAAgB,CAAI,QAAwB,EAAE,MAAqB;AAAI,QACrE,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAC/C,QACI,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;AAC9C,YAAM,MAAM,KAAK,CAAC,mBAAmB,MAAM,CAAC,EAAE,iDAAiD,CAAC,CAAC;AACjG,SAAK;AACL;AACwB,cAAd,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;AAClD;AAAyB,cAAf,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,MAAM,CAAC;AAC3E;AAAyB,cAAf,SAAS,GAAG,IAAI,CAAC,+BAA+B,CAAC,QAAQ,EAAE,eAAe,EAC9E,UAAU,EAAE,MAAM,CAAC;AACzB,QACI,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AACvC,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH;AACO;AACC;AAAQ,IADd,WAAW;AACb;AACI,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO;AAAM;AAG9B;AACiB;AAAY,QAJJ,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE,EAAC,CAAC;AAClD,KAAG;AACH;AAEC;AACE;AACU;AAA4B;AAAmB;AACxD,IADM,kBAAkB,CAAC,SAAyB;AAAI,QACtD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC;AACwB,cAAd,aAAa,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS;AAAM;AAC7C;AAAY,QAD4B;AAC5D,YAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACvC,YAAM,aAAa,CAAC,WAAW,EAAE,CAAC;AAClC,SAAK,EAAC;AACN;AACwB,cAAd,cAAc,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS;AAAM;AAC9C;AAAY,QAD6B;AAC7D;AAA6B,gBAAnB,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC;AAC5D,YACM,IAAI,WAAW,GAAG,CAAC,CAAC,EAAE;AAC5B,gBAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AACjD,aAAO;AACP,YACM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AACrC,gBAAQ,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AACxC,gBAAQ,cAAc,CAAC,WAAW,EAAE,CAAC;AACrC,aAAO;AACP,SAAK,EAAC;AACN,KAAG;AACH;AAEC;AACE;AAAkB;AACM;AAED;AAAQ,IAAtB,cAAc,CAAC,MAAoB;AAAI;AACtC,cAAH,aAAa,GAAG,IAAI,aAAa,CAAC;AAC5C,YAAM,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;AACzD,YAAM,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE;AAC5C,YAAM,UAAU,EAAE,MAAM,CAAC,UAAU;AACnC,YAAM,WAAW,EAAE,MAAM,CAAC,WAAW;AACrC,YAAM,SAAS,EAAE,MAAM,CAAC,SAAS;AACjC,YAAM,QAAQ,EAAE,MAAM,CAAC,QAAQ;AAC/B,YAAM,SAAS,EAAE,MAAM,CAAC,SAAS;AACjC,YAAM,QAAQ,EAAE,MAAM,CAAC,QAAQ;AAC/B,YAAM,SAAS,EAAE,MAAM,CAAC,SAAS;AACjC,SAAK,CAAC;AACN,QACI,IAAI,MAAM,CAAC,aAAa,EAAE;AAC9B,YAAM,aAAa,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;AACzD,SAAK;AACL,QAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAC/C,KAAG;AACH;AAEC;AACE;AAAkB;AACM;AACM;AAED;AAAQ,IAA5B,sBAAsB,CAAC,OAAmB,EAAE,MAAoB;AAAI;AAC3E,cAAK,SAAS,GAAG,MAAM,CAAC,kBAAkB,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC;AACvF;AAAyB,cAAf,YAAY,GAAG,MAAM,IAAI,MAAM,CAAC,gBAAgB,IAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ;AAC9F;AAAyB,cAAf,QAAQ,GAAG,IAAI,cAAc,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,OAAO,CAAC;AACpF,YAAM,CAAC,YAAY,EAAE,MAAM,CAAC;AAC5B,SAAK,CAAC,CAAC;AACP;AAAyB,cAAf,eAAe,GAAG,IAAI,eAAe,CAAC,SAAS,EAAE,MAAM,CAAC,gBAAgB,EAAE,QAAQ,CAAC;AAC7F;AAAyB,cAAf,YAAY,GAAqC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC;AAC1F,QAAI,YAAY,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC;AAC3C,QACI,OAAO,YAAY,CAAC,QAAQ,CAAC;AACjC,KAAG;AACH;AAGA;AACE;AAAkB;AAAmB;AACM;AACE;AACM;AAEvC;AAAmD;AAGlD;AAAQ,IADX,gCAAgC,CACtC,sBAAwC,EACxC,eAAmC,EACnC,UAAsB,EACtB,MAAoB;AAAI;AAE+C;AACvD;AACN,cAAN,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC;AAChF;AAAyB,cAAf,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAI,MAAM,EAAE,SAAS,EAAE,eAAe,CAAC;AAChF;AAAyB,cAAf,UAAU,GAAG,eAAe,CAAC,qBAAqB,CACpD,IAAI,eAAe,CAAC,sBAAsB,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AACzE,QAAI,SAAS,CAAC,iBAAiB,GAAG,UAAU,CAAC,QAAQ,CAAC;AACtD,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH;AAEC;AACE;AAAkB;AAAmB;AACM;AACE;AACM;AAEvC;AAAmD;AAGjD;AAAQ,IADb,+BAA+B,CACrC,sBAAsC,EACtC,eAAmC,EACnC,UAAsB,EACtB,MAAoB;AAAI;AAE+C;AACvD;AACN,cAAN,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC;AAChF,QAAI,eAAe,CAAC,oBAAoB,CAClC,IAAI,cAAc,CAAI,sBAAsB,qBAAE,IAAI,uBAC3C,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS,EAAC,GAAC,CAAC,CAAC;AACnD,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH;AAGA;AACE;AACE;AAAgB;AAAmB;AACM;AACM;AAC7C;AAED;AAAQ,IAAH,eAAe,CACnB,MAAoB,EACpB,SAAuB,EACvB,eAAmC;AAAI;AAErC,cAAE,YAAY,GAAG,MAAM,IAAI,MAAM,CAAC,gBAAgB,IAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ;AAC9F;AAAyB,cAAf,eAAe,GAAG,IAAI,OAAO,CAAW;AAClD,YAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC;AACjD,YAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE,eAAe,CAAC;AAC7D,YAAM,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC;AAChC,SAAK,CAAC;AACN,QACI,IAAI,MAAM,CAAC,SAAS;AACxB,aAAS,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,GAAG,CAAwB,cAAc,EAAE,IAAI,CAAC,CAAC,EAAE;AAC3F,YAAM,eAAe,CAAC,GAAG,CAAC,cAAc,EAAE;AAC1C,gBAAQ,KAAK,EAAE,MAAM,CAAC,SAAS;AAC/B,gBAAQ,MAAM,EAAEA,EAAY,EAAE;AAC9B,aAAO,CAAC,CAAC;AACT,SAAK;AACL,QACI,OAAO,IAAI,cAAc,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC/E,KAAG;AACH;AACO;AACF;AAAgB;AAA6B;AACjB;AAAyB;AAC7C;AAAQ,IAFX,gBAAgB,CAAC,UAAsB,EACtB,eAAmC,EACnC,MAAoB;AAC/C;AAAyB,cAAf,SAAS,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,eAAe,EAAE,MAAM,CAAC,EAAE,CAAC;AAC5F,QAAI,SAAS,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AACjD,QAAI,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjE,QAAI,OAAO,SAAS,CAAC;AACrB,KAAG;AACH;AAEC;AACE;AACE;AACU;AAA0B;AAAmB;AAAQ,IAA1D,oBAAoB,CAAC,MAAqB;AAAI;AAC7C,cAAD,YAAY,sBAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,EAAuB;AACjF,QAAI,uCAAW,IAAI,YAAY,EAAE,GAAK,MAAM,EAAE;AAC9C,KAAG;AACH;kCAvQC,UAAU;kFACT;AAAC;AAAmB;AACX,YArBT,OAAO;AACP,YAhBA,QAAQ;AACR,YAGA,IAAI,uBA2DC,MAAM,SAAC,UAAU;AAAS,4CAG1B,MAAM,SAAC,sBAAsB;AAAS,YACQ,MAAM,uBAApD,QAAQ,YAAI,QAAQ;AAAO,YA1D1B,QAAQ,uBA2DT,QAAQ;AAAM;;;;;;;;;;;;;;;kCAAE;AAAC;AAAa;AAEjC;AAAiB;AAAgB;AAAQ,IAlC3C,iCAA8C;AAChD;AACoB,IAIlB,qCAA0C;AAC5C;AACoB,IAClB,gCAC4E;AAC9E;AACoB,IAIlB,8BAAsD;AACxD;AACoB,IAIlB,8BAAoC;AACtC;AACO;AACE;AAAgB;AACzB,IADM,0BAAyB;AAAC;AACzB;AAAiB;AACnB;AAAQ,IADP,2BAA2B;AAAC;AAC3B;AAAiB;AAAgB;AAAQ,IAA1C,uCAAuE;AAAC;AACvE;AAAiB;AAAgB;AAAQ,IAG1C,+BAAqD;AAAC;AAC3D;AAAC;AAAI;AACN;AAC+D;AAEtD;AAAI,WC3CuB,SAAS,OACH,kBAAkB,OACrB,YAAY;AAInD,MAAa,YAAY;AAAG;wCAxB3B,QAAQ,SAAC;MACR,OAAO,EAAE,sBACP,aAAa,sBACb,YAAY,sBACZ,UAAU,mBACX;aACD;IAAO,EAAE;;;;;UAGP,YAAY;iBACZ;SAAkB;IACnB;WACD,YAAY,EAAE,sBACZ,kBAAkB,mBACnB;cACD,SAAS,EAAE,sBACT,MAAM,sBACN;;AAAmC,sBACnC,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,IAAW,EAAC,sBAC1C,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,IAAoB,EAAC,sBACzD,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,IAAc,EAAC,mBACjD;SACD;EAAe,EAAE,CAAC,kBAAkB,CAAC,eACtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACK;AAA6D;AAAsI;AAAI;ACjDvN;AACA;AACA,GAAG;AACH;AACA;AAC4P","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ViewContainerRef} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ComponentType} from '@angular/cdk/overlay';\nimport {CdkDialogContainer} from './dialog-container';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  top?: string;\n  bottom?: string;\n  left?: string;\n  right?: string;\n}\n\nexport class DialogConfig<D = any> {\n  /** Component to use as the container for the dialog. */\n  containerComponent?: ComponentType<CdkDialogContainer>;\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** The id of the dialog. */\n  id?: string;\n\n  /** The ARIA role of the dialog. */\n  role?: DialogRole = 'dialog';\n\n  /** Custom class(es) for the overlay panel. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the dialog has a background. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class(es) for the backdrop. */\n  backdropClass?: string | undefined = '';\n\n  /** Whether the dialog can be closed by user interaction. */\n  disableClose?: boolean = false;\n\n  /** The width of the dialog. */\n  width?: string = '';\n\n  /** The height of the dialog. */\n  height?: string = '';\n\n  /** The minimum width of the dialog. */\n  minWidth?: string | number = '';\n\n  /** The minimum height of the dialog. */\n  minHeight?: string | number = '';\n\n  /** The maximum width of the dialog. */\n  maxWidth?: string | number = '80vw';\n\n  /** The maximum height of the dialog. */\n  maxHeight?: string | number = '';\n\n  /** The position of the dialog. */\n  position?: DialogPosition;\n\n  /** Data to be injected into the dialog content. */\n  data?: D | null = null;\n\n  /** The layout direction for the dialog content. */\n  direction?: Direction;\n\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy?: string | null = null;\n\n  /** Aria label to assign to the dialog element */\n  ariaLabel?: string | null = null;\n\n  /** Whether the dialog should focus the first focusable element on open. */\n  autoFocus?: boolean = true;\n\n  /** Duration of the enter animation. Has to be a valid CSS value (e.g. 100ms). */\n  enterAnimationDuration?: string = '225ms';\n\n  /** Duration of the exit animation. Has to be a valid CSS value (e.g. 50ms). */\n  exitAnimationDuration?: string = '225ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {FocusTrapFactory} from '@angular/cdk/a11y';\nimport {\n  BasePortalOutlet,\n  ComponentPortal,\n  CdkPortalOutlet,\n  TemplatePortal,\n  DomPortal,\n} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Inject,\n  OnDestroy,\n  Optional,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {distinctUntilChanged} from 'rxjs/operators';\nimport {DialogConfig} from './dialog-config';\n\n\nexport function throwDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n\n\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\n@Component({\n  selector: 'cdk-dialog-container',\n  templateUrl: './dialog-container.html',\n  styleUrls: ['dialog-container.css'],\n  encapsulation: ViewEncapsulation.None,\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [\n    trigger('dialog', [\n      state('enter', style({opacity: 1})),\n      state('exit, void', style({opacity: 0})),\n      transition('* => enter', animate('{{enterAnimationDuration}}')),\n      transition('* => exit, * => void', animate('{{exitAnimationDuration}}')),\n    ])\n  ],\n  host: {\n    '[@dialog]': `{\n      value: _state,\n      params: {\n        enterAnimationDuration: _config.enterAnimationDuration,\n        exitAnimationDuration: _config.exitAnimationDuration\n      }\n    }`,\n    '(@dialog.start)': '_onAnimationStart($event)',\n    '(@dialog.done)': '_animationDone.next($event)',\n  },\n})\nexport class CdkDialogContainer extends BasePortalOutlet implements OnDestroy {\n  private readonly _document: Document;\n\n  /** State of the dialog animation. */\n  _state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n   /** The class that traps and manages focus within the dialog. */\n  private _focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n\n  // @HostBinding is used in the class as it is expected to be extended. Since @Component decorator\n  // metadata is not inherited by child classes, instead the host binding data is defined in a way\n  // that can be inherited.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostBinding('attr.aria-label') get _ariaLabel() { return this._config.ariaLabel || null; }\n\n  @HostBinding('attr.aria-describedby')\n  get _ariaDescribedBy() { return this._config.ariaDescribedBy; }\n\n  @HostBinding('attr.role') get _role() { return this._config.role; }\n\n  @HostBinding('attr.aria-modal') _ariaModal: boolean = true;\n\n  @HostBinding('attr.tabindex') get _tabindex() { return -1; }\n  // tslint:disable:no-host-decorator-in-concrete\n\n  /** The portal host inside of this container into which the dialog content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalHost: CdkPortalOutlet;\n\n  /** A subject emitting before the dialog enters the view. */\n  _beforeEnter: Subject<void> = new Subject();\n\n  /** A subject emitting after the dialog enters the view. */\n  _afterEnter: Subject<void> = new Subject();\n\n  /** A subject emitting before the dialog exits the view. */\n  _beforeExit: Subject<void> = new Subject();\n\n  /** A subject emitting after the dialog exits the view. */\n  _afterExit: Subject<void> = new Subject();\n\n  /** Stream of animation `done` events. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _focusTrapFactory: FocusTrapFactory,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(DOCUMENT) _document: any,\n    /** The dialog configuration. */\n    public _config: DialogConfig) {\n    super();\n\n    this._document = _document;\n\n    // We use a Subject with a distinctUntilChanged, rather than a callback attached to .done,\n    // because some browsers fire the done event twice and we don't want to emit duplicate events.\n    // See: https://github.com/angular/angular/issues/24084\n    this._animationDone.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // Emit lifecycle events based on animation `done` callback.\n      if (event.toState === 'enter') {\n        this._autoFocusFirstTabbableElement();\n        this._afterEnter.next();\n        this._afterEnter.complete();\n      }\n\n      if (event.fromState === 'enter' && (event.toState === 'void' || event.toState === 'exit')) {\n        this._returnFocusAfterDialog();\n        this._afterExit.next();\n        this._afterExit.complete();\n      }\n    });\n  }\n\n  /** Destroy focus trap to place focus back to the element focused before the dialog opened. */\n  ngOnDestroy() {\n    this._focusTrap.destroy();\n    this._animationDone.complete();\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalHost.hasAttached()) {\n      throwDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalHost.hasAttached()) {\n      throwDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachTemplatePortal(portal);\n  }\n\n  /**\n   * Attaches a DOM portal to the dialog container.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    if (this._portalHost.hasAttached()) {\n      throwDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachDomPortal(portal);\n  }\n\n  /** Emit lifecycle events based on animation `start` callback. */\n  _onAnimationStart(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._beforeEnter.next();\n      this._beforeEnter.complete();\n    }\n    if (event.fromState === 'enter' && (event.toState === 'void' || event.toState === 'exit')) {\n      this._beforeExit.next();\n      this._beforeExit.complete();\n    }\n  }\n\n  /** Starts the dialog exit animation. */\n  _startExiting(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Saves a reference to the element that was focused before the dialog was opened. */\n  private _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n\n      // Move focus onto the dialog immediately in order to prevent the user from accidentally\n      // opening multiple dialogs at the same time. Needs to be async, because the element\n      // may not be focusable immediately.\n      Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n    }\n  }\n\n  /**\n   * Autofocus the first tabbable element inside of the dialog, if there is not a tabbable element,\n   * focus the dialog instead.\n   */\n  private _autoFocusFirstTabbableElement() {\n    const element = this._elementRef.nativeElement;\n\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    if (this._config.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n        // If we didn't find any focusable elements inside the dialog, focus the\n        // container so the user can't tab into other elements behind it.\n        if (!hasMovedFocus) {\n          element.focus();\n        }\n      });\n    } else {\n      const activeElement = this._document.activeElement;\n\n      // Otherwise ensure that focus is on the dialog container. It's possible that a different\n      // component tried to move focus while the open animation was running. See:\n      // https://github.com/angular/components/issues/16215. Note that we only want to do this\n      // if the focus isn't inside the dialog already, because it's possible that the consumer\n      // turned off `autoFocus` in order to move focus themselves.\n      if (activeElement !== element && !element.contains(activeElement)) {\n        element.focus();\n      }\n    }\n  }\n\n  /** Returns the focus to the element focused before the dialog was open. */\n  private _returnFocusAfterDialog() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      const activeElement = this._document.activeElement;\n      const element = this._elementRef.nativeElement;\n\n      // Make sure that focus is still inside the dialog or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element ||\n        element.contains(activeElement)) {\n        toFocus.focus();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OverlayRef, GlobalPositionStrategy, OverlaySizeConfig} from '@angular/cdk/overlay';\nimport {ESCAPE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {Observable} from 'rxjs';\nimport {map, filter} from 'rxjs/operators';\nimport {DialogPosition} from './dialog-config';\nimport {CdkDialogContainer} from './dialog-container';\n\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\n\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nexport class DialogRef<T, R = any> {\n  /** The instance of the component in the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined;\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  constructor(\n    public _overlayRef: OverlayRef,\n    protected _containerInstance: CdkDialogContainer,\n    readonly id: string = `dialog-${uniqueId++}`) {\n\n    // If the dialog has a backdrop, handle clicks from the backdrop.\n    if (_containerInstance._config.hasBackdrop) {\n      _overlayRef.backdropClick().subscribe(() => {\n        if (!this.disableClose) {\n          this.close();\n        }\n      });\n    }\n\n    this.beforeClosed().subscribe(() => {\n      this._overlayRef.detachBackdrop();\n    });\n\n    this.afterClosed().subscribe(() => {\n      this._overlayRef.detach();\n      this._overlayRef.dispose();\n      this.componentInstance = null!;\n    });\n\n    // Close when escape keydown event occurs\n    _overlayRef.keydownEvents()\n      .pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }))\n      .subscribe(event => {\n        event.preventDefault();\n        this.close();\n      });\n  }\n\n  /** Gets an observable that emits when the overlay's backdrop has been clicked. */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n    this._containerInstance._startExiting();\n  }\n\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    let strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the dialog's width and height, defined, min and max.\n   * @param size New size for the overlay.\n   */\n  updateSize(size: OverlaySizeConfig): this {\n    if (size.width) {\n      this._getPositionStrategy().width(size.width.toString());\n    }\n    if (size.height) {\n      this._getPositionStrategy().height(size.height.toString());\n    }\n    this._overlayRef.updateSize(size);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private _getPositionStrategy(): GlobalPositionStrategy {\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n\n  /** Gets an observable that emits when dialog begins opening. */\n  beforeOpened(): Observable<void> {\n    return this._containerInstance._beforeEnter.asObservable();\n  }\n\n  /** Gets an observable that emits when dialog is finished opening. */\n  afterOpened(): Observable<void> {\n    return this._containerInstance._afterEnter.asObservable();\n  }\n\n  /** Gets an observable that emits when dialog begins closing. */\n  beforeClosed(): Observable<R | undefined> {\n    return this._containerInstance._beforeExit.pipe(map(() => this._result));\n  }\n\n  /** Gets an observable that emits when dialog is finished closing. */\n  afterClosed(): Observable<R | undefined> {\n    return this._containerInstance._afterExit.pipe(map(() => this._result));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {\n  ComponentType,\n  Overlay,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {DialogRef} from './dialog-ref';\nimport {CdkDialogContainer} from './dialog-container';\nimport {DialogConfig} from './dialog-config';\n\n/** Injection token for the Dialog's ScrollStrategy. */\nexport const DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('DialogScrollStrategy');\n\n/** Injection token for the Dialog's Data. */\nexport const DIALOG_DATA = new InjectionToken<any>('DialogData');\n\n/** Injection token for the DialogRef constructor. */\nexport const DIALOG_REF = new InjectionToken<DialogRef<any>>('DialogRef');\n\n/** Injection token for the DialogConfig. */\nexport const DIALOG_CONFIG = new InjectionToken<DialogConfig>('DialogConfig');\n\n/** Injection token for the Dialog's DialogContainer component. */\nexport const DIALOG_CONTAINER =\n    new InjectionToken<ComponentType<CdkDialogContainer>>('DialogContainer');\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  TemplateRef,\n  SkipSelf,\n  Optional,\n  Injectable,\n  Injector,\n  Inject,\n  ComponentRef,\n  OnDestroy,\n  Type\n} from '@angular/core';\nimport {ComponentPortal, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\nimport {of as observableOf, Observable, Subject, defer} from 'rxjs';\nimport {DialogRef} from './dialog-ref';\nimport {Location} from '@angular/common';\nimport {DialogConfig} from './dialog-config';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {CdkDialogContainer} from './dialog-container';\nimport {\n  ComponentType,\n  Overlay,\n  OverlayRef,\n  OverlayConfig,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {startWith} from 'rxjs/operators';\n\nimport {\n  DIALOG_SCROLL_STRATEGY,\n  DIALOG_DATA,\n  DIALOG_REF,\n  DIALOG_CONTAINER,\n  DIALOG_CONFIG,\n} from './dialog-injectors';\n\n\n/**\n * Service to open modal dialogs.\n */\n@Injectable()\nexport class Dialog implements OnDestroy {\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Stream that emits when all dialogs are closed. */\n  get _afterAllClosed(): Observable<void> {\n    return this._parentDialog ? this._parentDialog.afterAllClosed : this._afterAllClosedBase;\n  }\n  _afterAllClosedBase = new Subject<void>();\n\n  // TODO(jelbourn): tighten the type on the right-hand side of this expression.\n  afterAllClosed: Observable<void> = defer(() => this.openDialogs.length ?\n      this._afterAllClosed : this._afterAllClosed.pipe(startWith(undefined)));\n\n  /** Stream that emits when a dialog is opened. */\n  get afterOpened(): Subject<DialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpened;\n  }\n  _afterOpened: Subject<DialogRef<any>> = new Subject();\n\n  /** Stream that emits when a dialog is opened. */\n  get openDialogs(): DialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogs;\n  }\n  _openDialogs: DialogRef<any>[] = [];\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      @Inject(DIALOG_REF) private _dialogRefConstructor: Type<DialogRef<any>>,\n      // TODO(crisbeto): the `any` here can be replaced\n      // with the proper type once we start using Ivy.\n      @Inject(DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n      @Optional() @SkipSelf() private _parentDialog: Dialog,\n      @Optional() location: Location) {\n\n    // Close all of the dialogs when the user goes forwards/backwards in history or when the\n    // location hash changes. Note that this usually doesn't include clicking on links (unless\n    // the user is using the `HashLocationStrategy`).\n    if (!_parentDialog && location) {\n      location.subscribe(() => this.closeAll());\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  /** Gets an open dialog by id. */\n  getById(id: string): DialogRef<any> | undefined {\n    return this._openDialogs.find(ref  => ref.id === id);\n  }\n\n  /** Closes all open dialogs. */\n  closeAll(): void {\n    this.openDialogs.forEach(ref => ref.close());\n  }\n\n  /** Opens a dialog from a component. */\n  openFromComponent<T>(component: ComponentType<T>, config?: DialogConfig): DialogRef<any> {\n    config = this._applyConfigDefaults(config);\n\n    if (config.id && this.getById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this._createOverlay(config);\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const dialogRef = this._attachDialogContentForComponent(component, dialogContainer,\n      overlayRef, config);\n\n    this._registerDialogRef(dialogRef);\n    return dialogRef;\n  }\n\n  /** Opens a dialog from a template. */\n  openFromTemplate<T>(template: TemplateRef<T>, config?: DialogConfig): DialogRef<any> {\n    config = this._applyConfigDefaults(config);\n\n    if (config.id && this.getById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this._createOverlay(config);\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const dialogRef = this._attachDialogContentForTemplate(template, dialogContainer,\n      overlayRef, config);\n\n    this._registerDialogRef(dialogRef);\n    return dialogRef;\n  }\n\n  ngOnDestroy() {\n    // Only close all the dialogs at this level.\n    this._openDialogs.forEach(ref => ref.close());\n  }\n\n  /**\n   * Forwards emitting events for when dialogs are opened and all dialogs are closed.\n   */\n  private _registerDialogRef(dialogRef: DialogRef<any>): void {\n    this.openDialogs.push(dialogRef);\n\n    const dialogOpenSub = dialogRef.afterOpened().subscribe(() => {\n      this.afterOpened.next(dialogRef);\n      dialogOpenSub.unsubscribe();\n    });\n\n    const dialogCloseSub = dialogRef.afterClosed().subscribe(() => {\n      let dialogIndex = this._openDialogs.indexOf(dialogRef);\n\n      if (dialogIndex > -1) {\n        this._openDialogs.splice(dialogIndex, 1);\n      }\n\n      if (!this._openDialogs.length) {\n        this._afterAllClosedBase.next();\n        dialogCloseSub.unsubscribe();\n      }\n    });\n  }\n\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param config The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  protected _createOverlay(config: DialogConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: config.panelClass,\n      hasBackdrop: config.hasBackdrop,\n      direction: config.direction,\n      minWidth: config.minWidth,\n      minHeight: config.minHeight,\n      maxWidth: config.maxWidth,\n      maxHeight: config.maxHeight\n    });\n\n    if (config.backdropClass) {\n      overlayConfig.backdropClass = config.backdropClass;\n    }\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Attaches an MatDialogContainer to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  protected _attachDialogContainer(overlay: OverlayRef, config: DialogConfig): CdkDialogContainer {\n    const container = config.containerComponent || this._injector.get(DIALOG_CONTAINER);\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n      [DialogConfig, config]\n    ]));\n    const containerPortal = new ComponentPortal(container, config.viewContainerRef, injector);\n    const containerRef: ComponentRef<CdkDialogContainer> = overlay.attach(containerPortal);\n    containerRef.instance._config = config;\n\n    return containerRef.instance;\n  }\n\n\n  /**\n   * Attaches the user-provided component to the already-created MatDialogContainer.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  protected _attachDialogContentForComponent<T>(\n      componentOrTemplateRef: ComponentType<T>,\n      dialogContainer: CdkDialogContainer,\n      overlayRef: OverlayRef,\n      config: DialogConfig): DialogRef<any> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const dialogRef = this._createDialogRef(overlayRef, dialogContainer, config);\n    const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n    const contentRef = dialogContainer.attachComponentPortal(\n        new ComponentPortal(componentOrTemplateRef, undefined, injector));\n    dialogRef.componentInstance = contentRef.instance;\n    return dialogRef;\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created MatDialogContainer.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  protected _attachDialogContentForTemplate<T>(\n      componentOrTemplateRef: TemplateRef<T>,\n      dialogContainer: CdkDialogContainer,\n      overlayRef: OverlayRef,\n      config: DialogConfig): DialogRef<any> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const dialogRef = this._createDialogRef(overlayRef, dialogContainer, config);\n    dialogContainer.attachTemplatePortal(\n      new TemplatePortal<T>(componentOrTemplateRef, null!,\n        <any>{$implicit: config.data, dialogRef}));\n    return dialogRef;\n  }\n\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param container Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(\n      config: DialogConfig,\n      dialogRef: DialogRef<T>,\n      dialogContainer: CdkDialogContainer): PortalInjector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injectionTokens = new WeakMap<any, any>([\n      [this._injector.get(DIALOG_REF), dialogRef],\n      [this._injector.get(DIALOG_CONTAINER), dialogContainer],\n      [DIALOG_DATA, config.data]\n    ]);\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      injectionTokens.set(Directionality, {\n        value: config.direction,\n        change: observableOf()\n      });\n    }\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n\n  /** Creates a new dialog ref. */\n  private _createDialogRef(overlayRef: OverlayRef,\n                           dialogContainer: CdkDialogContainer,\n                           config: DialogConfig) {\n    const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n    dialogRef.disableClose = config.disableClose;\n    dialogRef.updateSize(config).updatePosition(config.position);\n    return dialogRef;\n  }\n\n  /**\n   * Expands the provided configuration object to include the default values for properties which\n   * are undefined.\n   */\n  private _applyConfigDefaults(config?: DialogConfig): DialogConfig {\n    const dialogConfig = this._injector.get(DIALOG_CONFIG) as typeof DialogConfig;\n    return {...new dialogConfig(), ...config};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {Dialog} from './dialog';\nimport {CdkDialogContainer} from './dialog-container';\nimport {DialogConfig} from './dialog-config';\nimport {DialogRef} from './dialog-ref';\nimport {\n  DIALOG_CONFIG,\n  DIALOG_CONTAINER,\n  DIALOG_REF,\n  MAT_DIALOG_SCROLL_STRATEGY_PROVIDER\n} from './dialog-injectors';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    A11yModule,\n  ],\n  exports: [\n    // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n    // don't have to remember to import it or be faced with an unhelpful error.\n    PortalModule,\n    CdkDialogContainer,\n  ],\n  declarations: [\n    CdkDialogContainer,\n  ],\n  providers: [\n    Dialog,\n    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    {provide: DIALOG_REF, useValue: DialogRef},\n    {provide: DIALOG_CONTAINER, useValue: CdkDialogContainer},\n    {provide: DIALOG_CONFIG, useValue: DialogConfig},\n  ],\n  entryComponents: [CdkDialogContainer],\n})\nexport class DialogModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}
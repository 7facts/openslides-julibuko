{"version":3,"file":"popover-edit.js","sources":["../../../../../../src/cdk-experimental/popover-edit/constants.ts","../../../../../../src/cdk-experimental/popover-edit/polyfill.ts","../../../../../../src/cdk-experimental/popover-edit/edit-event-dispatcher.ts","../../../../../../src/cdk-experimental/popover-edit/edit-ref.ts","../../../../../../src/cdk-experimental/popover-edit/focus-dispatcher.ts","../../../../../../src/cdk-experimental/popover-edit/form-value-container.ts","../../../../../../src/cdk-experimental/popover-edit/lens-directives.ts","../../../../../../src/cdk-experimental/popover-edit/popover-edit-position-strategy-factory.ts","../../../../../../src/cdk-experimental/popover-edit/edit-services.ts","../../../../../../src/cdk-experimental/popover-edit/focus-escape-notifier.ts","../../../../../../src/cdk-experimental/popover-edit/table-directives.ts","../../../../../../src/cdk-experimental/popover-edit/popover-edit-module.ts","../../../../../../src/cdk-experimental/popover-edit/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Selector for finding table cells. */\nexport const CELL_SELECTOR = '.cdk-cell, .mat-cell, td';\n\n/** Selector for finding editable table cells. */\nexport const EDITABLE_CELL_SELECTOR = '.cdk-popover-edit-cell, .mat-popover-edit-cell';\n\n/** Selector for finding table rows. */\nexport const ROW_SELECTOR = '.cdk-row, .mat-row, tr';\n\n/** Selector for finding the table element. */\nexport const TABLE_SELECTOR = 'table, cdk-table, mat-table';\n\n/** CSS class added to the edit lens pane. */\nexport const EDIT_PANE_CLASS = 'cdk-edit-pane';\n\n/** Selector for finding the edit lens pane. */\nexport const EDIT_PANE_SELECTOR = `.${EDIT_PANE_CLASS}, .mat-edit-pane`;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IE 11 compatible matches implementation. */\nexport function matches(element: Element, selector: string): boolean {\n  return element.matches ?\n      element.matches(selector) :\n      (element as any)['msMatchesSelector'](selector);\n}\n\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nexport function closest(element: EventTarget|Element|null|undefined, selector: string):\n    Element|null {\n  if (!(element instanceof Node)) { return null; }\n\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element)) {\n    curr = curr.parentNode;\n  }\n\n  return curr && (hasNativeClosest ?\n      curr.closest(selector) : polyfillClosest(curr, selector)) as Element|null;\n}\n\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element: Element, selector: string): Element|null {\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n    curr = curr.parentNode;\n  }\n\n  return (curr || null) as Element|null;\n}\n\nconst hasNativeClosest = !!Element.prototype.closest;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {combineLatest, MonoTypeOperatorFunction, Observable, pipe, Subject} from 'rxjs';\nimport {\n  audit,\n  auditTime,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  skip,\n  startWith,\n  shareReplay,\n} from 'rxjs/operators';\n\nimport {CELL_SELECTOR, ROW_SELECTOR} from './constants';\nimport {closest} from './polyfill';\nimport {EditRef} from './edit-ref';\n\n/** The delay applied to mouse events before hiding or showing hover content. */\nconst MOUSE_EVENT_DELAY_MS = 40;\n\n/** The delay for reacting to focus/blur changes. */\nconst FOCUS_DELAY = 0;\n\n/**\n * The possible states for hover content:\n * OFF - Not rendered.\n * FOCUSABLE - Rendered in the dom and styled for its contents to be focusable but invisible.\n * ON - Rendered and fully visible.\n */\nexport const enum HoverContentState {\n  OFF = 0,\n  FOCUSABLE,\n  ON,\n}\n\n/**\n * Service for sharing delegated events and state for triggering table edits.\n */\n@Injectable()\nexport class EditEventDispatcher {\n  /** A subject that indicates which table cell is currently editing (unless it is disabled). */\n  readonly editing = new Subject<Element|null>();\n\n  /** A subject that indicates which table row is currently hovered. */\n  readonly hovering = new Subject<Element|null>();\n\n  /** A subject that indicates which table row currently contains focus. */\n  readonly focused = new Subject<Element|null>();\n\n  /** A subject that indicates all elements in the table matching ROW_SELECTOR. */\n  readonly allRows = new Subject<NodeList>();\n\n  /** A subject that emits mouse move events from the table indicating the targeted row. */\n  readonly mouseMove = new Subject<Element|null>();\n\n  // TODO: Use WeakSet once IE11 support is dropped.\n  /**\n   * Tracks the currently disabled editable cells - edit calls will be ignored\n   * for these cells.\n   */\n  readonly disabledCells = new WeakMap<Element, boolean>();\n\n  /** The EditRef for the currently active edit lens (if any). */\n  get editRef(): EditRef<any>|null {\n    return this._editRef;\n  }\n  private _editRef: EditRef<any>|null = null;\n\n  // Optimization: Precompute common pipeable operators used per row/cell.\n  private readonly _distinctUntilChanged =\n      distinctUntilChanged<Element|HoverContentState|boolean|null>();\n  private readonly _startWithNull = startWith<Element|null>(null);\n  private readonly _distinctShare = pipe(\n    this._distinctUntilChanged as MonoTypeOperatorFunction<HoverContentState>,\n    shareReplay(1),\n  );\n  private readonly _startWithNullDistinct = pipe(\n    this._startWithNull,\n    this._distinctUntilChanged as MonoTypeOperatorFunction<Element|null>,\n  );\n\n  readonly editingAndEnabled = this.editing.pipe(\n      filter(cell => cell == null || !this.disabledCells.has(cell)),\n      shareReplay(1),\n  );\n\n  /** An observable that emits the row containing focus or an active edit. */\n  readonly editingOrFocused = combineLatest([\n      this.editingAndEnabled.pipe(\n          map(cell => closest(cell, ROW_SELECTOR)),\n          this._startWithNull,\n      ),\n      this.focused.pipe(this._startWithNull),\n  ]).pipe(\n      map(([editingRow, focusedRow]) => focusedRow || editingRow),\n      this._distinctUntilChanged as MonoTypeOperatorFunction<Element|null>,\n      auditTime(FOCUS_DELAY), // Use audit to skip over blur events to the next focused element.\n      this._distinctUntilChanged as MonoTypeOperatorFunction<Element|null>,\n      shareReplay(1),\n  );\n\n  /** Tracks rows that contain hover content with a reference count. */\n  private _rowsWithHoverContent = new WeakMap<Element, number>();\n\n  /** The table cell that has an active edit lens (or null). */\n  private _currentlyEditing: Element|null = null;\n\n  /** The combined set of row hover content states organized by row. */\n  private readonly _hoveredContentStateDistinct = combineLatest([\n      this._getFirstRowWithHoverContent(),\n      this._getLastRowWithHoverContent(),\n      this.editingOrFocused,\n      this.hovering.pipe(\n          distinctUntilChanged(),\n          audit(row => this.mouseMove.pipe(\n              filter(mouseMoveRow => row === mouseMoveRow),\n              this._startWithNull,\n              debounceTime(MOUSE_EVENT_DELAY_MS)),\n          ),\n          this._startWithNullDistinct,\n      ),\n  ]).pipe(\n      skip(1), // Skip the initial emission of [null, null, null, null].\n      map(computeHoverContentState),\n      distinctUntilChanged(areMapEntriesEqual),\n      // Optimization: Enter the zone before shareReplay so that we trigger a single\n      // ApplicationRef.tick for all row updates.\n      this._enterZone(),\n      shareReplay(1),\n  );\n\n  private readonly _editingAndEnabledDistinct = this.editingAndEnabled.pipe(\n      distinctUntilChanged(),\n      this._enterZone(),\n      shareReplay(1),\n  );\n\n  // Optimization: Share row events observable with subsequent callers.\n  // At startup, calls will be sequential by row.\n  private _lastSeenRow: Element|null = null;\n  private _lastSeenRowHoverOrFocus: Observable<HoverContentState>|null = null;\n\n  constructor(private readonly _ngZone: NgZone) {\n    this._editingAndEnabledDistinct.subscribe(cell => {\n      this._currentlyEditing = cell;\n    });\n  }\n\n  /**\n   * Gets an Observable that emits true when the specified element's cell\n   * is editing and false when not.\n   */\n  editingCell(element: Element|EventTarget): Observable<boolean> {\n    let cell: Element|null = null;\n\n    return this._editingAndEnabledDistinct.pipe(\n        map(editCell => editCell === (cell || (cell = closest(element, CELL_SELECTOR)))),\n        this._distinctUntilChanged as MonoTypeOperatorFunction<boolean>,\n    );\n  }\n\n  /**\n   * Stops editing for the specified cell. If the specified cell is not the current\n   * edit cell, does nothing.\n   */\n  doneEditingCell(element: Element|EventTarget): void {\n    const cell = closest(element, CELL_SELECTOR);\n\n    if (this._currentlyEditing === cell) {\n      this.editing.next(null);\n    }\n  }\n\n  /** Sets the currently active EditRef. */\n  setActiveEditRef(ref: EditRef<any>) {\n    this._editRef = ref;\n  }\n\n  /** Unsets the currently active EditRef, if the specified editRef is active. */\n  unsetActiveEditRef(ref: EditRef<any>) {\n    if (this._editRef !== ref) {\n      return;\n    }\n\n    this._editRef = null;\n  }\n\n  /** Adds the specified table row to be tracked for first/last row comparisons. */\n  registerRowWithHoverContent(row: Element): void {\n    this._rowsWithHoverContent.set(row, (this._rowsWithHoverContent.get(row) || 0) + 1);\n  }\n\n  /**\n   * Reference decrements and ultimately removes the specified table row from first/last row\n   * comparisons.\n   */\n  deregisterRowWithHoverContent(row: Element): void {\n    const refCount = this._rowsWithHoverContent.get(row) || 0;\n\n    if (refCount <= 1) {\n      this._rowsWithHoverContent.delete(row);\n    } else {\n      this._rowsWithHoverContent.set(row, refCount - 1);\n    }\n  }\n\n  /**\n   * Gets an Observable that emits true when the specified element's row\n   * contains the focused element or is being hovered over and false when not.\n   * Hovering is defined as when the mouse has momentarily stopped moving over the cell.\n   */\n  hoverOrFocusOnRow(row: Element): Observable<HoverContentState> {\n    if (row !== this._lastSeenRow) {\n      this._lastSeenRow = row;\n      this._lastSeenRowHoverOrFocus = this._hoveredContentStateDistinct.pipe(\n        map(state => state.get(row) || HoverContentState.OFF),\n        this._distinctShare,\n      );\n    }\n\n    return this._lastSeenRowHoverOrFocus!;\n  }\n\n  /**\n   * RxJS operator that enters the Angular zone, used to reduce boilerplate in\n   * re-entering the zone for stream pipelines.\n   */\n  private _enterZone<T>(): MonoTypeOperatorFunction<T> {\n    return (source: Observable<T>) =>\n        new Observable<T>((observer) => source.subscribe({\n             next: (value) => this._ngZone.run(() => observer.next(value)),\n             error: (err) => observer.error(err),\n             complete: () => observer.complete()\n           }));\n  }\n\n  private _getFirstRowWithHoverContent(): Observable<Element|null> {\n    return this._mapAllRowsToSingleRow(rows => {\n      for (let i = 0, row; row = rows[i]; i++) {\n        if (this._rowsWithHoverContent.has(row as Element)) {\n          return row as Element;\n        }\n      }\n      return null;\n    });\n  }\n\n  private _getLastRowWithHoverContent(): Observable<Element|null> {\n    return this._mapAllRowsToSingleRow(rows => {\n      for (let i = rows.length - 1, row; row = rows[i]; i--) {\n        if (this._rowsWithHoverContent.has(row as Element)) {\n          return row as Element;\n        }\n      }\n      return null;\n    });\n  }\n\n  private _mapAllRowsToSingleRow(mapper: (rows: NodeList) => Element|null):\n      Observable<Element|null> {\n    return this.allRows.pipe(\n        map(mapper),\n        this._startWithNullDistinct,\n    );\n  }\n}\n\nfunction computeHoverContentState([firstRow, lastRow, activeRow, hoverRow]: Array<Element|null>):\n     Map<Element, HoverContentState> {\n  const hoverContentState = new Map<Element, HoverContentState>();\n\n  // Add focusable rows.\n  for (const focussableRow of [\n    firstRow,\n    lastRow,\n    activeRow && activeRow.previousElementSibling,\n    activeRow && activeRow.nextElementSibling,\n  ]) {\n    if (focussableRow) {\n      hoverContentState.set(focussableRow as Element, HoverContentState.FOCUSABLE);\n    }\n  }\n\n  // Add/overwrite with fully visible rows.\n  for (const onRow of [activeRow, hoverRow]) {\n    if (onRow) {\n      hoverContentState.set(onRow, HoverContentState.ON);\n    }\n  }\n\n  return hoverContentState;\n}\n\nfunction areMapEntriesEqual<K, V>(a: Map<K, V>, b: Map<K, V>): boolean {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  // TODO: use Map.prototype.entries once we're off IE11.\n  for (const aKey of Array.from(a.keys())) {\n    if (b.get(aKey) !== a.get(aKey)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, OnDestroy, Self, NgZone} from '@angular/core';\nimport {ControlContainer} from '@angular/forms';\nimport {Observable, Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {EditEventDispatcher} from './edit-event-dispatcher';\n\n/**\n * Used for communication between the form within the edit lens and the\n * table that launched it. Provided by CdkEditControl within the lens.\n */\n@Injectable()\nexport class EditRef<FormValue> implements OnDestroy {\n  /** Emits the final value of this edit instance before closing. */\n  private readonly _finalValueSubject = new Subject<FormValue>();\n  readonly finalValue: Observable<FormValue> = this._finalValueSubject.asObservable();\n\n  /** Emits when the user tabs out of this edit lens before closing. */\n  private readonly _blurredSubject = new Subject<void>();\n  readonly blurred: Observable<void> = this._blurredSubject.asObservable();\n\n  /** The value to set the form back to on revert. */\n  private _revertFormValue: FormValue;\n\n  constructor(\n      @Self() private readonly _form: ControlContainer,\n      private readonly _editEventDispatcher: EditEventDispatcher,\n      private readonly _ngZone: NgZone) {\n    this._editEventDispatcher.setActiveEditRef(this);\n  }\n\n  /**\n   * Called by the host directive's OnInit hook. Reads the initial state of the\n   * form and overrides it with persisted state from previous openings, if\n   * applicable.\n   */\n  init(previousFormValue: FormValue|undefined): void {\n    // Wait for the zone to stabilize before caching the initial value.\n    // This ensures that all form controls have been initialized.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.updateRevertValue();\n      if (previousFormValue) {\n        this.reset(previousFormValue);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._editEventDispatcher.unsetActiveEditRef(this);\n    this._finalValueSubject.next(this._form.value);\n    this._finalValueSubject.complete();\n  }\n\n  /** Whether the attached form is in a valid state. */\n  isValid(): boolean|null {\n    return this._form.valid;\n  }\n\n  /** Set the form's current value as what it will be set to on revert/reset. */\n  updateRevertValue(): void {\n    this._revertFormValue = this._form.value;\n  }\n\n  /** Tells the table to close the edit popup. */\n  close(): void {\n    this._editEventDispatcher.editing.next(null);\n  }\n\n  /** Notifies the active edit that the user has moved focus out of the lens. */\n  blur(): void {\n    this._blurredSubject.next();\n  }\n\n  /**\n   * Resets the form value to the specified value or the previously set\n   * revert value.\n   */\n  reset(value?: FormValue): void {\n    this._form.reset(value || this._revertFormValue);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, UP_ARROW, RIGHT_ARROW, DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {Injectable} from '@angular/core';\nimport {PartialObserver} from 'rxjs';\n\nimport {EDITABLE_CELL_SELECTOR, ROW_SELECTOR, TABLE_SELECTOR} from './constants';\nimport {closest} from './polyfill';\n\n/**\n * Service responsible for moving cell focus around in response to keyboard events.\n * May be overridden to customize the keyboard behavior of popover edit.\n */\n@Injectable({providedIn: 'root'})\nexport class FocusDispatcher {\n  /** Observes keydown events triggered from the table. */\n  readonly keyObserver: PartialObserver<KeyboardEvent>;\n\n  constructor(protected readonly directionality: Directionality) {\n    this.keyObserver = {next: (event) => this.handleKeyboardEvent(event)};\n  }\n\n  /**\n   * Moves focus to earlier or later cells (in dom order) by offset cells relative to\n   * currentCell.\n   */\n  moveFocusHorizontally(currentCell: HTMLElement, offset: number): void {\n    const cells = Array.from(closest(currentCell, TABLE_SELECTOR)!.querySelectorAll(\n                      EDITABLE_CELL_SELECTOR)) as HTMLElement[];\n    const currentIndex = cells.indexOf(currentCell);\n    const newIndex = currentIndex + offset;\n\n    if (cells[newIndex]) {\n      cells[newIndex].focus();\n    }\n  }\n\n  /** Moves focus to up or down by row by offset cells relative to currentCell. */\n  moveFocusVertically(currentCell: HTMLElement, offset: number): void {\n    const currentRow = closest(currentCell, ROW_SELECTOR)!;\n    const rows = Array.from(closest(currentRow, TABLE_SELECTOR)!.querySelectorAll(ROW_SELECTOR));\n    const currentRowIndex = rows.indexOf(currentRow);\n    const currentIndexWithinRow =\n        Array.from(currentRow.querySelectorAll(EDITABLE_CELL_SELECTOR)).indexOf(currentCell);\n    const newRowIndex = currentRowIndex + offset;\n\n    if (rows[newRowIndex]) {\n      const rowToFocus =\n          Array.from(rows[newRowIndex].querySelectorAll(EDITABLE_CELL_SELECTOR)) as HTMLElement[];\n\n      if (rowToFocus[currentIndexWithinRow]) {\n        rowToFocus[currentIndexWithinRow].focus();\n      }\n    }\n  }\n\n  /** Translates arrow keydown events into focus move operations. */\n  protected handleKeyboardEvent(event: KeyboardEvent): void {\n    const cell = closest(event.target, EDITABLE_CELL_SELECTOR) as HTMLElement | null;\n\n    if (!cell) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case UP_ARROW:\n        this.moveFocusVertically(cell, -1);\n        break;\n      case DOWN_ARROW:\n        this.moveFocusVertically(cell, 1);\n        break;\n      case LEFT_ARROW:\n        this.moveFocusHorizontally(cell, this.directionality.value === 'ltr' ? -1 : 1);\n        break;\n      case RIGHT_ARROW:\n        this.moveFocusHorizontally(cell, this.directionality.value === 'ltr' ? 1 : -1);\n        break;\n      default:\n        // If the keyboard event is not handled, return now so that we don't `preventDefault`.\n        return;\n    }\n\n    event.preventDefault();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface Entry<FormValue> {\n  value?: FormValue;\n}\n\n/**\n * A convenience class for preserving unsaved form state while an edit lens is closed.\n *\n * Example usage:\n * class MyComponent {\n *   readonly nameEditValues = new FormValueContainer&lt;Item, {name: string}&gt;();\n * }\n *\n * &lt;form cdkEditControl [(cdkEditControlPreservedFormValue)]=\"nameEditValues.for(item).value\"&gt;\n */\nexport class FormValueContainer<Key extends object, FormValue> {\n  private _formValues = new WeakMap<Key, Entry<FormValue>>();\n\n  for(key: Key): Entry<FormValue> {\n    const _formValues = this._formValues;\n\n    let entry = _formValues.get(key);\n    if (!entry) {\n      // Expose entry as an object so that we can [(two-way)] bind to its value member\n      entry = {};\n      _formValues.set(key, entry);\n    }\n\n    return entry;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject} from 'rxjs';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Input,\n  HostListener,\n} from '@angular/core';\nimport {hasModifierKey} from '@angular/cdk/keycodes';\nimport {EDIT_PANE_SELECTOR} from './constants';\nimport {closest} from './polyfill';\nimport {EditRef} from './edit-ref';\n\n/** Options for what do to when the user clicks outside of an edit lens. */\nexport type PopoverEditClickOutBehavior = 'close' | 'submit' | 'noop';\n\n/**\n * A directive that attaches to a form within the edit lens.\n * It coordinates the form state with the table-wide edit system and handles\n * closing the edit lens when the form is submitted or the user clicks\n * out.\n */\n@Directive({\n  selector: 'form[cdkEditControl]',\n  inputs: [\n    'clickOutBehavior: cdkEditControlClickOutBehavior',\n    'preservedFormValue: cdkEditControlPreservedFormValue',\n    'ignoreSubmitUnlessValid: cdkEditControlIgnoreSubmitUnlessValid',\n  ],\n  outputs: ['preservedFormValueChange: cdkEditControlPreservedFormValueChange'],\n  providers: [EditRef],\n})\nexport class CdkEditControl<FormValue> implements OnDestroy, OnInit {\n  protected readonly destroyed = new Subject<void>();\n\n  /**\n   * Specifies what should happen when the user clicks outside of the edit lens.\n   * The default behavior is to close the lens without submitting the form.\n   */\n  clickOutBehavior: PopoverEditClickOutBehavior = 'close';\n\n  /**\n   * A two-way binding for storing unsubmitted form state. If not provided\n   * then form state will be discarded on close. The PeristBy directive is offered\n   * as a convenient shortcut for these bindings.\n   */\n  preservedFormValue?: FormValue;\n  readonly preservedFormValueChange = new EventEmitter<FormValue>();\n\n  /**\n   * Determines whether the lens will close on form submit if the form is not in a valid\n   * state. By default the lens will remain open.\n   */\n  ignoreSubmitUnlessValid = true;\n\n  constructor(protected readonly elementRef: ElementRef, readonly editRef: EditRef<FormValue>) {}\n\n  ngOnInit(): void {\n    this.editRef.init(this.preservedFormValue);\n    this.editRef.finalValue.subscribe(this.preservedFormValueChange);\n    this.editRef.blurred.subscribe(() => this._handleBlur());\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  /**\n   * Called when the form submits. If ignoreSubmitUnlessValid is true, checks\n   * the form for validity before proceeding.\n   * Updates the revert state with the latest submitted value then closes the edit.\n   */\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('ngSubmit')\n  handleFormSubmit(): void {\n    if (this.ignoreSubmitUnlessValid && !this.editRef.isValid()) { return; }\n\n    this.editRef.updateRevertValue();\n    this.editRef.close();\n  }\n\n  /** Called on Escape keyup. Closes the edit. */\n  close(): void {\n    // todo - allow this behavior to be customized as well, such as calling\n    // reset before close\n    this.editRef.close();\n  }\n\n  /**\n   * Called on click anywhere in the document.\n   * If the click was outside of the lens, trigger the specified click out behavior.\n   */\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('document:click', ['$event'])\n  handlePossibleClickOut(evt: Event): void {\n    if (closest(evt.target, EDIT_PANE_SELECTOR)) { return; }\n    switch (this.clickOutBehavior) {\n      case 'submit':\n        // Manually cause the form to submit before closing.\n        this._triggerFormSubmit();\n        this.editRef.close();\n        break;\n      case 'close':\n        this.editRef.close();\n        break;\n      default:\n        break;\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  _handleKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape' && !hasModifierKey(event)) {\n      this.close();\n      event.preventDefault();\n    }\n  }\n\n  /** Triggers submit on tab out if clickOutBehavior is 'submit'. */\n  private _handleBlur(): void {\n    if (this.clickOutBehavior === 'submit') {\n      // Manually cause the form to submit before closing.\n      this._triggerFormSubmit();\n    }\n  }\n\n  private _triggerFormSubmit() {\n    this.elementRef.nativeElement!.dispatchEvent(new Event('submit'));\n  }\n}\n\n/** Reverts the form to its initial or previously submitted state on click. */\n@Directive({\n  selector: 'button[cdkEditRevert]',\n  host: {\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class CdkEditRevert<FormValue> {\n  /** Type of the button. Defaults to `button` to avoid accident form submits. */\n  @Input() type: string = 'button';\n\n  constructor(\n      protected readonly editRef: EditRef<FormValue>) {}\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click')\n  revertEdit(): void {\n    this.editRef.reset();\n  }\n}\n\n/** Closes the lens on click. */\n@Directive({selector: '[cdkEditClose]'})\nexport class CdkEditClose<FormValue> {\n  constructor(\n      protected readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly editRef: EditRef<FormValue>) {\n\n    const nativeElement = elementRef.nativeElement;\n\n    // Prevent accidental form submits.\n    if (nativeElement.nodeName === 'BUTTON' && !nativeElement.getAttribute('type')) {\n      nativeElement.setAttribute('type', 'button');\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click')\n  @HostListener('keyup.enter')\n  @HostListener('keyup.space')\n  closeEdit(): void {\n    // Note that we use `click` here, rather than a keyboard event, because some screen readers\n    // will emit a fake click event instead of an enter keyboard event on buttons.\n    this.editRef.close();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay, OverlaySizeConfig, PositionStrategy} from '@angular/cdk/overlay';\nimport {Injectable} from '@angular/core';\n\n/**\n * Overridable factory responsible for configuring how cdkPopoverEdit popovers are positioned\n * and sized.\n */\n@Injectable()\nexport abstract class PopoverEditPositionStrategyFactory {\n  /**\n   * Creates a PositionStrategy based on the specified table cells.\n   * The cells will be provided in DOM order.\n   */\n  abstract positionStrategyForCells(cells: HTMLElement[]): PositionStrategy;\n\n  /**\n   * Creates an OverlaySizeConfig based on the specified table cells.\n   * The cells will be provided in DOM order.\n   */\n  abstract sizeConfigForCells(cells: HTMLElement[]): OverlaySizeConfig;\n}\n\n/**\n * Default implementation of PopoverEditPositionStrategyFactory.\n * Uses a FlexibleConnectedPositionStrategy anchored to the start + top of the cell.\n * Note: This will change to CoverPositionStrategy once it implemented.\n */\n@Injectable()\nexport class DefaultPopoverEditPositionStrategyFactory extends PopoverEditPositionStrategyFactory {\n  constructor(protected readonly direction: Directionality, protected readonly overlay: Overlay) {\n    super();\n  }\n\n  positionStrategyForCells(cells: HTMLElement[]): PositionStrategy {\n    return this.overlay.position()\n        .flexibleConnectedTo(cells[0])\n        .withGrowAfterOpen()\n        .withPush()\n        .withViewportMargin(16)\n        .withPositions([{\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'top',\n        }]);\n  }\n\n  sizeConfigForCells(cells: HTMLElement[]): OverlaySizeConfig {\n    if (cells.length === 0) {\n      return {};\n    }\n\n    if (cells.length === 1) {\n      return {width: cells[0].getBoundingClientRect().width};\n    }\n\n    let firstCell, lastCell;\n    if (this.direction.value === 'ltr') {\n      firstCell = cells[0];\n      lastCell = cells[cells.length - 1];\n    } else {\n      lastCell = cells[0];\n      firstCell = cells[cells.length - 1];\n    }\n\n    return {width: lastCell.getBoundingClientRect().right - firstCell.getBoundingClientRect().left};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone} from '@angular/core';\nimport {FocusTrapFactory} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Overlay} from '@angular/cdk/overlay';\nimport {ScrollDispatcher, ViewportRuler} from '@angular/cdk/scrolling';\n\nimport {EditEventDispatcher} from './edit-event-dispatcher';\nimport {FocusDispatcher} from './focus-dispatcher';\nimport {PopoverEditPositionStrategyFactory} from './popover-edit-position-strategy-factory';\n\n/**\n * Optimization\n * Collects multiple Injectables into a singleton shared across the table. By reducing the\n * number of services injected into each CdkPopoverEdit, this saves about 0.023ms of cpu time\n * and 56 bytes of memory per instance.\n */\n@Injectable()\nexport class EditServices {\n  constructor(\n      readonly directionality: Directionality,\n      readonly editEventDispatcher: EditEventDispatcher, readonly focusDispatcher: FocusDispatcher,\n      readonly focusTrapFactory: FocusTrapFactory, readonly ngZone: NgZone,\n      readonly overlay: Overlay, readonly positionFactory: PopoverEditPositionStrategyFactory,\n      readonly scrollDispatcher: ScrollDispatcher, readonly viewportRuler: ViewportRuler) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {FocusTrap, InteractivityChecker} from '@angular/cdk/a11y';\nimport {Observable, Subject} from 'rxjs';\n\n/** Value indicating whether focus left the target area before or after the enclosed elements. */\nexport const enum FocusEscapeNotifierDirection {\n  START,\n  END,\n}\n\n/**\n * Like FocusTrap, but rather than trapping focus within a dom region, notifies subscribers when\n * focus leaves the region.\n */\nexport class FocusEscapeNotifier extends FocusTrap {\n  private _escapeSubject = new Subject<FocusEscapeNotifierDirection>();\n\n  constructor(\n      element: HTMLElement,\n      checker: InteractivityChecker,\n      ngZone: NgZone,\n      document: Document) {\n    super(element, checker, ngZone, document, true /* deferAnchors */);\n\n    // The focus trap adds \"anchors\" at the beginning and end of a trapped region that redirect\n    // focus. We override that redirect behavior here with simply emitting on a stream.\n    this.startAnchorListener = () => {\n      this._escapeSubject.next(FocusEscapeNotifierDirection.START);\n      return true;\n    };\n    this.endAnchorListener = () => {\n      this._escapeSubject.next(FocusEscapeNotifierDirection.END);\n      return true;\n    };\n\n    this.attachAnchors();\n  }\n\n  escapes(): Observable<FocusEscapeNotifierDirection> {\n    return this._escapeSubject.asObservable();\n  }\n}\n\n/** Factory that allows easy instantiation of focus escape notifiers. */\n@Injectable({providedIn: 'root'})\nexport class FocusEscapeNotifierFactory {\n  private _document: Document;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n  }\n\n  /**\n   * Creates a focus escape notifier region around the given element.\n   * @param element The element around which focus will be monitored.\n   * @returns The created focus escape notifier instance.\n   */\n  create(element: HTMLElement): FocusEscapeNotifier {\n    return new FocusEscapeNotifier(element, this._checker, this._ngZone, this._document);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {FocusTrap} from '@angular/cdk/a11y';\nimport {OverlayRef, PositionStrategy} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  NgZone,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n  HostListener,\n} from '@angular/core';\nimport {fromEvent, fromEventPattern, merge, Subject} from 'rxjs';\nimport {\n  filter,\n  map,\n  mapTo,\n  share,\n  startWith,\n  takeUntil,\n  throttleTime,\n  withLatestFrom,\n} from 'rxjs/operators';\n\nimport {CELL_SELECTOR, EDIT_PANE_CLASS, EDIT_PANE_SELECTOR, ROW_SELECTOR} from './constants';\nimport {EditEventDispatcher, HoverContentState} from './edit-event-dispatcher';\nimport {EditServices} from './edit-services';\nimport {FocusDispatcher} from './focus-dispatcher';\nimport {\n  FocusEscapeNotifier,\n  FocusEscapeNotifierDirection,\n  FocusEscapeNotifierFactory\n} from './focus-escape-notifier';\nimport {closest} from './polyfill';\n\n/**\n * Describes the number of columns before and after the originating cell that the\n * edit popup should span. In left to right locales, before means left and after means\n * right. In right to left locales before means right and after means left.\n */\nexport interface CdkPopoverEditColspan {\n  before?: number;\n  after?: number;\n}\n\n/** Used for rate-limiting mousemove events. */\nconst MOUSE_MOVE_THROTTLE_TIME_MS = 10;\n\n/**\n * A directive that must be attached to enable editability on a table.\n * It is responsible for setting up delegated event handlers and providing the\n * EditEventDispatcher service for use by the other edit directives.\n */\n@Directive({\n  selector: 'table[editable], cdk-table[editable], mat-table[editable]',\n  providers: [EditEventDispatcher, EditServices],\n})\nexport class CdkEditable implements AfterViewInit, OnDestroy {\n  protected readonly destroyed = new Subject<void>();\n\n  constructor(\n      protected readonly elementRef: ElementRef,\n      protected readonly editEventDispatcher: EditEventDispatcher,\n      protected readonly focusDispatcher: FocusDispatcher, protected readonly ngZone: NgZone) {}\n\n  ngAfterViewInit(): void {\n    this._listenForTableEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  private _listenForTableEvents(): void {\n    const element = this.elementRef.nativeElement;\n    const toClosest = (selector: string) =>\n        map((event: UIEvent) => closest(event.target, selector));\n\n    this.ngZone.runOutsideAngular(() => {\n      // Track mouse movement over the table to hide/show hover content.\n      fromEvent<MouseEvent>(element, 'mouseover').pipe(\n          toClosest(ROW_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.hovering);\n      fromEvent<MouseEvent>(element, 'mouseleave').pipe(\n          mapTo(null),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.hovering);\n      fromEvent<MouseEvent>(element, 'mousemove').pipe(\n          throttleTime(MOUSE_MOVE_THROTTLE_TIME_MS),\n          toClosest(ROW_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.mouseMove);\n\n      // Track focus within the table to hide/show/make focusable hover content.\n      fromEventPattern<FocusEvent>(\n          handler => element.addEventListener('focus', handler, true),\n          handler => element.removeEventListener('focus', handler, true)\n          ).pipe(\n              takeUntil(this.destroyed),\n              toClosest(ROW_SELECTOR),\n              share(),\n              ).subscribe(this.editEventDispatcher.focused);\n\n      merge(\n        fromEventPattern<FocusEvent>(\n          handler => element.addEventListener('blur', handler, true),\n          handler => element.removeEventListener('blur', handler, true)\n        ),\n        fromEvent<KeyboardEvent>(element, 'keydown').pipe(filter(event => event.key === 'Escape'))\n      ).pipe(\n        takeUntil(this.destroyed),\n        mapTo(null),\n        share(),\n      ).subscribe(this.editEventDispatcher.focused);\n\n      // Keep track of rows within the table. This is used to know which rows with hover content\n      // are first or last in the table. They are kept focusable in case focus enters from above\n      // or below the table.\n      this.ngZone.onStable.pipe(\n          takeUntil(this.destroyed),\n          // Optimization: ignore dom changes while focus is within the table as we already\n          // ensure that rows above and below the focused/active row are tabbable.\n          withLatestFrom(this.editEventDispatcher.editingOrFocused),\n          filter(([_, activeRow]) => activeRow == null),\n          map(() => element.querySelectorAll(ROW_SELECTOR)),\n          share(),\n          ).subscribe(this.editEventDispatcher.allRows);\n\n      fromEvent<KeyboardEvent>(element, 'keydown').pipe(\n          filter(event => event.key === 'Enter'),\n          toClosest(CELL_SELECTOR),\n          takeUntil(this.destroyed),\n          ).subscribe(this.editEventDispatcher.editing);\n\n      // Keydown must be used here or else key autorepeat does not work properly on some platforms.\n      fromEvent<KeyboardEvent>(element, 'keydown')\n          .pipe(takeUntil(this.destroyed))\n          .subscribe(this.focusDispatcher.keyObserver);\n    });\n  }\n}\n\nconst POPOVER_EDIT_HOST_BINDINGS = {\n  '[attr.tabindex]': 'disabled ? null : 0',\n  'class': 'cdk-popover-edit-cell',\n  '[attr.aria-haspopup]': '!disabled',\n};\n\nconst POPOVER_EDIT_INPUTS = [\n  'template: cdkPopoverEdit',\n  'context: cdkPopoverEditContext',\n  'colspan: cdkPopoverEditColspan',\n  'disabled: cdkPopoverEditDisabled',\n];\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[cdkPopoverEdit]:not([cdkPopoverEditTabOut])',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class CdkPopoverEdit<C> implements AfterViewInit, OnDestroy {\n  /** The edit lens template shown over the cell on edit. */\n  template: TemplateRef<any>|null = null;\n\n  /**\n   * Implicit context to pass along to the template. Can be omitted if the template\n   * is defined within the cell.\n   */\n  context?: C;\n\n  /**\n   * Specifies that the popup should cover additional table cells before and/or after\n   * this one.\n   */\n  get colspan(): CdkPopoverEditColspan {\n    return this._colspan;\n  }\n  set colspan(value: CdkPopoverEditColspan) {\n    this._colspan = value;\n\n    // Recompute positioning when the colspan changes.\n    if (this.overlayRef) {\n      this.overlayRef.updatePositionStrategy(this._getPositionStrategy());\n\n      if (this.overlayRef.hasAttached()) {\n        this._updateOverlaySize();\n      }\n    }\n  }\n  private _colspan: CdkPopoverEditColspan = {};\n\n  /** Whether popover edit is disabled for this cell. */\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = value;\n\n    if (value) {\n      this.services.editEventDispatcher.doneEditingCell(this.elementRef.nativeElement!);\n      this.services.editEventDispatcher.disabledCells.set(this.elementRef.nativeElement!, true);\n    } else {\n      this.services.editEventDispatcher.disabledCells.delete(this.elementRef.nativeElement!);\n    }\n  }\n  private _disabled = false;\n\n  protected focusTrap?: FocusTrap;\n  protected overlayRef?: OverlayRef;\n  protected readonly destroyed = new Subject<void>();\n\n  constructor(\n      protected readonly services: EditServices, protected readonly elementRef: ElementRef,\n      protected readonly viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit(): void {\n    this._startListeningToEditEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n      this.focusTrap = undefined;\n    }\n\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n    }\n  }\n\n  protected initFocusTrap(): void {\n    this.focusTrap = this.services.focusTrapFactory.create(this.overlayRef!.overlayElement);\n  }\n\n  protected closeEditOverlay(): void {\n    this.services.editEventDispatcher.doneEditingCell(this.elementRef.nativeElement!);\n  }\n\n  protected panelClass(): string {\n    return EDIT_PANE_CLASS;\n  }\n\n  private _startListeningToEditEvents(): void {\n    this.services.editEventDispatcher.editingCell(this.elementRef.nativeElement!)\n        .pipe(takeUntil(this.destroyed))\n        .subscribe((open) => {\n          if (open && this.template) {\n            if (!this.overlayRef) {\n              this._createEditOverlay();\n            }\n\n            this._showEditOverlay();\n          } else if (this.overlayRef) {\n            this._maybeReturnFocusToCell();\n\n            this.overlayRef.detach();\n          }\n        });\n  }\n\n  private _createEditOverlay(): void {\n    this.overlayRef = this.services.overlay.create({\n      disposeOnNavigation: true,\n      panelClass: this.panelClass(),\n      positionStrategy: this._getPositionStrategy(),\n      scrollStrategy: this.services.overlay.scrollStrategies.reposition(),\n      direction: this.services.directionality,\n    });\n\n    this.initFocusTrap();\n    this.overlayRef.overlayElement.setAttribute('aria-role', 'dialog');\n\n    this.overlayRef.detachments().subscribe(() => this.closeEditOverlay());\n  }\n\n  private _showEditOverlay(): void {\n    this.overlayRef!.attach(new TemplatePortal(\n        this.template!,\n        this.viewContainerRef,\n        {$implicit: this.context}));\n\n    // We have to defer trapping focus, because doing so too early can cause the form inside\n    // the overlay to be submitted immediately if it was opened on an Enter keydown event.\n    this.services.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.focusTrap!.focusInitialElement();\n      });\n    });\n\n    // Update the size of the popup initially and on subsequent changes to\n    // scroll position and viewport size.\n    merge(this.services.scrollDispatcher.scrolled(), this.services.viewportRuler.change())\n        .pipe(\n            startWith(null),\n            takeUntil(this.overlayRef!.detachments()),\n            takeUntil(this.destroyed),\n            )\n        .subscribe(() => {\n          this._updateOverlaySize();\n        });\n  }\n\n  private _getOverlayCells(): HTMLElement[] {\n    const cell = closest(this.elementRef.nativeElement!, CELL_SELECTOR) as HTMLElement;\n\n    if (!this._colspan.before && !this._colspan.after) {\n      return [cell];\n    }\n\n    const row = closest(this.elementRef.nativeElement!, ROW_SELECTOR)!;\n    const rowCells = Array.from(row.querySelectorAll(CELL_SELECTOR)) as HTMLElement[];\n    const ownIndex = rowCells.indexOf(cell);\n\n    return rowCells.slice(\n        ownIndex - (this._colspan.before || 0), ownIndex + (this._colspan.after || 0) + 1);\n  }\n\n  private _getPositionStrategy(): PositionStrategy {\n    return this.services.positionFactory.positionStrategyForCells(this._getOverlayCells());\n  }\n\n  private _updateOverlaySize(): void {\n    this.overlayRef!.updateSize(\n        this.services.positionFactory.sizeConfigForCells(this._getOverlayCells()));\n  }\n\n  private _maybeReturnFocusToCell(): void {\n    if (closest(document.activeElement, EDIT_PANE_SELECTOR) ===\n        this.overlayRef!.overlayElement) {\n      this.elementRef.nativeElement!.focus();\n    }\n  }\n}\n\n/**\n * Attaches an ng-template to a cell and shows it when instructed to by the\n * EditEventDispatcher service.\n * Makes the cell focusable.\n */\n@Directive({\n  selector: '[cdkPopoverEdit][cdkPopoverEditTabOut]',\n  host: POPOVER_EDIT_HOST_BINDINGS,\n  inputs: POPOVER_EDIT_INPUTS,\n})\nexport class CdkPopoverEditTabOut<C> extends CdkPopoverEdit<C> {\n  protected focusTrap?: FocusEscapeNotifier;\n\n  constructor(\n      elementRef: ElementRef, viewContainerRef: ViewContainerRef, services: EditServices,\n      protected readonly focusEscapeNotifierFactory: FocusEscapeNotifierFactory) {\n    super(services, elementRef, viewContainerRef);\n  }\n\n  protected initFocusTrap(): void {\n    this.focusTrap = this.focusEscapeNotifierFactory.create(this.overlayRef!.overlayElement);\n\n    this.focusTrap.escapes().pipe(takeUntil(this.destroyed)).subscribe(direction => {\n      if (this.services.editEventDispatcher.editRef) {\n        this.services.editEventDispatcher.editRef.blur();\n      }\n\n      this.services.focusDispatcher.moveFocusHorizontally(\n          closest(this.elementRef.nativeElement!, CELL_SELECTOR) as HTMLElement,\n          direction === FocusEscapeNotifierDirection.START ? -1 : 1);\n\n      this.closeEditOverlay();\n    });\n  }\n}\n\n/**\n * A structural directive that shows its contents when the table row containing\n * it is hovered or when an element in the row has focus.\n */\n@Directive({\n  selector: '[cdkRowHoverContent]',\n})\nexport class CdkRowHoverContent implements AfterViewInit, OnDestroy {\n  protected readonly destroyed = new Subject<void>();\n  protected viewRef: EmbeddedViewRef<any>|null = null;\n\n  private _row?: Element;\n\n  constructor(\n      protected readonly services: EditServices, protected readonly elementRef: ElementRef,\n      protected readonly templateRef: TemplateRef<any>,\n      protected readonly viewContainerRef: ViewContainerRef) {}\n\n  ngAfterViewInit(): void {\n    this._row = closest(this.elementRef.nativeElement!, ROW_SELECTOR)!;\n\n    this.services.editEventDispatcher.registerRowWithHoverContent(this._row);\n    this._listenForHoverAndFocusEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    if (this.viewRef) {\n      this.viewRef.destroy();\n    }\n\n    if (this._row) {\n      this.services.editEventDispatcher.deregisterRowWithHoverContent(this._row);\n    }\n  }\n\n  /**\n   * Called immediately after the hover content is created and added to the dom.\n   * In the CDK version, this is a noop but subclasses such as MatRowHoverContent use this\n   * to prepare/style the inserted element.\n   */\n  protected initElement(_: HTMLElement): void {\n  }\n\n  /**\n   * Called when the hover content needs to be focusable to preserve a reasonable tab ordering\n   * but should not yet be shown.\n   */\n  protected makeElementHiddenButFocusable(element: HTMLElement): void {\n    element.style.opacity = '0';\n  }\n\n  /**\n   * Called when the hover content needs to be focusable to preserve a reasonable tab ordering\n   * but should not yet be shown.\n   */\n  protected makeElementVisible(element: HTMLElement): void {\n    element.style.opacity = '';\n  }\n\n  private _listenForHoverAndFocusEvents(): void {\n    this.services.editEventDispatcher.hoverOrFocusOnRow(this._row!)\n        .pipe(takeUntil(this.destroyed))\n        .subscribe(eventState => {\n          // When in FOCUSABLE state, add the hover content to the dom but make it transparent so\n          // that it is in the tab order relative to the currently focused row.\n\n          if (eventState === HoverContentState.ON || eventState === HoverContentState.FOCUSABLE) {\n            if (!this.viewRef) {\n              this.viewRef = this.viewContainerRef.createEmbeddedView(this.templateRef, {});\n              this.initElement(this.viewRef.rootNodes[0] as HTMLElement);\n              this.viewRef.markForCheck();\n            } else if (this.viewContainerRef.indexOf(this.viewRef) === -1) {\n              this.viewContainerRef.insert(this.viewRef!);\n              this.viewRef.markForCheck();\n            }\n\n            if (eventState === HoverContentState.ON) {\n              this.makeElementVisible(this.viewRef.rootNodes[0] as HTMLElement);\n            } else {\n              this.makeElementHiddenButFocusable(this.viewRef.rootNodes[0] as HTMLElement);\n            }\n          } else if (this.viewRef) {\n            this.viewContainerRef.detach(this.viewContainerRef.indexOf(this.viewRef));\n          }\n        });\n  }\n}\n\n/**\n * Opens the closest edit popover to this element, whether it's associated with this exact\n * element or an ancestor element.\n */\n@Directive({\n  selector: '[cdkEditOpen]',\n})\nexport class CdkEditOpen {\n  constructor(\n      protected readonly elementRef: ElementRef<HTMLElement>,\n      protected readonly editEventDispatcher: EditEventDispatcher) {\n\n    const nativeElement = elementRef.nativeElement;\n\n    // Prevent accidental form submits.\n    if (nativeElement.nodeName === 'BUTTON' && !nativeElement.getAttribute('type')) {\n      nativeElement.setAttribute('type', 'button');\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click', ['$event'])\n  openEdit(evt: Event): void {\n    this.editEventDispatcher.editing.next(closest(this.elementRef.nativeElement!, CELL_SELECTOR));\n    evt.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {\n  CdkPopoverEdit,\n  CdkPopoverEditTabOut,\n  CdkRowHoverContent,\n  CdkEditable,\n  CdkEditOpen\n} from './table-directives';\nimport {CdkEditControl,\n  CdkEditRevert,\n  CdkEditClose\n} from './lens-directives';\nimport {\n  DefaultPopoverEditPositionStrategyFactory,\n  PopoverEditPositionStrategyFactory\n} from './popover-edit-position-strategy-factory';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkPopoverEdit,\n  CdkPopoverEditTabOut,\n  CdkRowHoverContent,\n  CdkEditControl,\n  CdkEditRevert,\n  CdkEditClose,\n  CdkEditable,\n  CdkEditOpen,\n];\n\n@NgModule({\n  imports: [\n    OverlayModule,\n  ],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n  providers: [{\n    provide: PopoverEditPositionStrategyFactory,\n    useClass: DefaultPopoverEditPositionStrategyFactory\n  }],\n})\nexport class CdkPopoverEditModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {EditServices as Éµangular_material_src_cdk_experimental_popover_edit_popover_edit_a} from './edit-services';\nexport {FocusEscapeNotifierFactory as Éµangular_material_src_cdk_experimental_popover_edit_popover_edit_b} from './focus-escape-notifier';"]}
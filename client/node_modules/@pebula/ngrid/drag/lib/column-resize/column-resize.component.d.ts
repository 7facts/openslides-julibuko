import { AfterViewInit, ElementRef, OnDestroy, NgZone } from '@angular/core';
import { Directionality } from '@angular/cdk/bidi';
import { ViewportRuler } from '@angular/cdk/scrolling';
import { DragRefConfig, DragDropRegistry } from '@angular/cdk/drag-drop';
import { PblNgridComponent, PblColumn, PblNgridMetaCellContext } from '@pebula/ngrid';
import * as ɵngcc0 from '@angular/core';
declare module '@pebula/ngrid/lib/ext/types' {
    interface PblNgridPluginExtension {
        columnResize?: PblNgridDragResizeComponent;
    }
}
export declare const PLUGIN_KEY: 'columnResize';
export declare class PblNgridDragResizeComponent implements AfterViewInit, OnDestroy {
    element: ElementRef<HTMLElement>;
    private _ngZone;
    private _viewportRuler;
    private _dragDropRegistry;
    private _config;
    private _dir;
    set context(value: PblNgridMetaCellContext<any>);
    /**
     * The area (in pixels) in which the handle can be grabbed and resize the cell.
     * Default: 6
     */
    grabAreaWidth: number;
    column: PblColumn;
    /** @deprecated use grid instead */
    get table(): PblNgridComponent<any>;
    grid: PblNgridComponent<any>;
    _hasStartedDragging: boolean;
    private _hasMoved;
    private _rootElement;
    private _pointerMoveSubscription;
    private _pointerUpSubscription;
    private _scrollPosition;
    private _pickupPositionOnPage;
    private _initialWidth;
    private _lastWidth;
    private _rootElementInitSubscription;
    constructor(element: ElementRef<HTMLElement>, _ngZone: NgZone, _viewportRuler: ViewportRuler, _dragDropRegistry: DragDropRegistry<PblNgridDragResizeComponent, any>, _config: DragRefConfig, _dir: Directionality);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onDoubleClick(event: MouseEvent): void;
    _pointerDown: (event: MouseEvent | TouchEvent) => void;
    /**
   * Sets up the different variables and subscriptions
   * that will be necessary for the dragging sequence.
   * @param referenceElement Element that started the drag sequence.
   * @param event Browser event object that started the sequence.
   */
    private _initializeDragSequence;
    /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */
    private _pointerMove;
    /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */
    private _pointerUp;
    private _getPointerPositionOnPage;
    private _isTouchEvent;
    _isDragging(): boolean;
    private _getRootElement;
    private _removeSubscriptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PblNgridDragResizeComponent, [null, null, null, null, null, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PblNgridDragResizeComponent, "pbl-ngrid-drag-resize", never, { "grabAreaWidth": "grabAreaWidth"; "context": "context"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLXJlc2l6ZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY29sdW1uLXJlc2l6ZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGlyZWN0aW9uYWxpdHkgfSBmcm9tICdAYW5ndWxhci9jZGsvYmlkaSc7XG5pbXBvcnQgeyBWaWV3cG9ydFJ1bGVyIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Njcm9sbGluZyc7XG5pbXBvcnQgeyBEcmFnUmVmQ29uZmlnLCBEcmFnRHJvcFJlZ2lzdHJ5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2RyYWctZHJvcCc7XG5pbXBvcnQgeyBQYmxOZ3JpZENvbXBvbmVudCwgUGJsQ29sdW1uLCBQYmxOZ3JpZE1ldGFDZWxsQ29udGV4dCB9IGZyb20gJ0BwZWJ1bGEvbmdyaWQnO1xuZGVjbGFyZSBtb2R1bGUgJ0BwZWJ1bGEvbmdyaWQvbGliL2V4dC90eXBlcycge1xuICAgIGludGVyZmFjZSBQYmxOZ3JpZFBsdWdpbkV4dGVuc2lvbiB7XG4gICAgICAgIGNvbHVtblJlc2l6ZT86IFBibE5ncmlkRHJhZ1Jlc2l6ZUNvbXBvbmVudDtcbiAgICB9XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBQTFVHSU5fS0VZOiAnY29sdW1uUmVzaXplJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBibE5ncmlkRHJhZ1Jlc2l6ZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD47XG4gICAgcHJpdmF0ZSBfbmdab25lO1xuICAgIHByaXZhdGUgX3ZpZXdwb3J0UnVsZXI7XG4gICAgcHJpdmF0ZSBfZHJhZ0Ryb3BSZWdpc3RyeTtcbiAgICBwcml2YXRlIF9jb25maWc7XG4gICAgcHJpdmF0ZSBfZGlyO1xuICAgIHNldCBjb250ZXh0KHZhbHVlOiBQYmxOZ3JpZE1ldGFDZWxsQ29udGV4dDxhbnk+KTtcbiAgICAvKipcbiAgICAgKiBUaGUgYXJlYSAoaW4gcGl4ZWxzKSBpbiB3aGljaCB0aGUgaGFuZGxlIGNhbiBiZSBncmFiYmVkIGFuZCByZXNpemUgdGhlIGNlbGwuXG4gICAgICogRGVmYXVsdDogNlxuICAgICAqL1xuICAgIGdyYWJBcmVhV2lkdGg6IG51bWJlcjtcbiAgICBjb2x1bW46IFBibENvbHVtbjtcbiAgICAvKiogQGRlcHJlY2F0ZWQgdXNlIGdyaWQgaW5zdGVhZCAqL1xuICAgIGdldCB0YWJsZSgpOiBQYmxOZ3JpZENvbXBvbmVudDxhbnk+O1xuICAgIGdyaWQ6IFBibE5ncmlkQ29tcG9uZW50PGFueT47XG4gICAgX2hhc1N0YXJ0ZWREcmFnZ2luZzogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9oYXNNb3ZlZDtcbiAgICBwcml2YXRlIF9yb290RWxlbWVudDtcbiAgICBwcml2YXRlIF9wb2ludGVyTW92ZVN1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIF9wb2ludGVyVXBTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBfc2Nyb2xsUG9zaXRpb247XG4gICAgcHJpdmF0ZSBfcGlja3VwUG9zaXRpb25PblBhZ2U7XG4gICAgcHJpdmF0ZSBfaW5pdGlhbFdpZHRoO1xuICAgIHByaXZhdGUgX2xhc3RXaWR0aDtcbiAgICBwcml2YXRlIF9yb290RWxlbWVudEluaXRTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoZWxlbWVudDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sIF9uZ1pvbmU6IE5nWm9uZSwgX3ZpZXdwb3J0UnVsZXI6IFZpZXdwb3J0UnVsZXIsIF9kcmFnRHJvcFJlZ2lzdHJ5OiBEcmFnRHJvcFJlZ2lzdHJ5PFBibE5ncmlkRHJhZ1Jlc2l6ZUNvbXBvbmVudCwgYW55PiwgX2NvbmZpZzogRHJhZ1JlZkNvbmZpZywgX2RpcjogRGlyZWN0aW9uYWxpdHkpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgb25Eb3VibGVDbGljayhldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgX3BvaW50ZXJEb3duOiAoZXZlbnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50KSA9PiB2b2lkO1xuICAgIC8qKlxuICAgKiBTZXRzIHVwIHRoZSBkaWZmZXJlbnQgdmFyaWFibGVzIGFuZCBzdWJzY3JpcHRpb25zXG4gICAqIHRoYXQgd2lsbCBiZSBuZWNlc3NhcnkgZm9yIHRoZSBkcmFnZ2luZyBzZXF1ZW5jZS5cbiAgICogQHBhcmFtIHJlZmVyZW5jZUVsZW1lbnQgRWxlbWVudCB0aGF0IHN0YXJ0ZWQgdGhlIGRyYWcgc2VxdWVuY2UuXG4gICAqIEBwYXJhbSBldmVudCBCcm93c2VyIGV2ZW50IG9iamVjdCB0aGF0IHN0YXJ0ZWQgdGhlIHNlcXVlbmNlLlxuICAgKi9cbiAgICBwcml2YXRlIF9pbml0aWFsaXplRHJhZ1NlcXVlbmNlO1xuICAgIC8qKiBIYW5kbGVyIHRoYXQgaXMgaW52b2tlZCB3aGVuIHRoZSB1c2VyIG1vdmVzIHRoZWlyIHBvaW50ZXIgYWZ0ZXIgdGhleSd2ZSBpbml0aWF0ZWQgYSBkcmFnLiAqL1xuICAgIHByaXZhdGUgX3BvaW50ZXJNb3ZlO1xuICAgIC8qKiBIYW5kbGVyIHRoYXQgaXMgaW52b2tlZCB3aGVuIHRoZSB1c2VyIGxpZnRzIHRoZWlyIHBvaW50ZXIgdXAsIGFmdGVyIGluaXRpYXRpbmcgYSBkcmFnLiAqL1xuICAgIHByaXZhdGUgX3BvaW50ZXJVcDtcbiAgICBwcml2YXRlIF9nZXRQb2ludGVyUG9zaXRpb25PblBhZ2U7XG4gICAgcHJpdmF0ZSBfaXNUb3VjaEV2ZW50O1xuICAgIF9pc0RyYWdnaW5nKCk6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfZ2V0Um9vdEVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBfcmVtb3ZlU3Vic2NyaXB0aW9ucztcbn1cbiJdfQ==
{"version":3,"file":"pebula-ngrid-detail-row.js","sources":["ng:/@pebula/ngrid/detail-row/lib/detail-row/directives.ts","ng:/@pebula/ngrid/detail-row/lib/detail-row/detail-row-plugin.ts","ng:/@pebula/ngrid/detail-row/lib/detail-row/row.ts","ng:/@pebula/ngrid/detail-row/lib/table-detail-row.module.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable:use-host-property-decorator\nimport {\n  Component,\n  Directive,\n  IterableDiffers,\n  OnInit,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { CdkRowDef } from '@angular/cdk/table';\n\nimport { PblNgridRegistryService, PblNgridSingleTemplateRegistry, PblNgridRowContext } from '@pebula/ngrid';\n\ndeclare module '@pebula/ngrid/lib/grid/services/grid-registry.service' {\n  interface PblNgridSingleRegistryMap {\n    detailRowParent?: PblNgridDetailRowParentRefDirective<any>;\n    detailRow?: PblNgridDetailRowDefDirective;\n  }\n}\n\n/**\n * Marks the element as the display element for the detail row itself.\n */\n@Directive({ selector: '[pblNgridDetailRowDef]' })\nexport class PblNgridDetailRowDefDirective extends PblNgridSingleTemplateRegistry<PblNgridRowContext<any>, 'detailRow'> {\n  readonly kind: 'detailRow' = 'detailRow';\n  constructor(tRef: TemplateRef<PblNgridRowContext<any>>, registry: PblNgridRegistryService) { super(tRef, registry); }\n}\n\n@Directive({\n  selector: '[pblNgridDetailRowParentRef]',\n  inputs: ['columns: pblNgridDetailRowParentRef', 'when: pblNgridDetailRowParentRefWhen'],\n})\nexport class PblNgridDetailRowParentRefDirective<T> extends CdkRowDef<T> implements OnInit, OnDestroy {\n\n  constructor(template: TemplateRef<PblNgridRowContext<T>>, _differs: IterableDiffers, protected registry: PblNgridRegistryService) {\n    super(template, _differs);\n  }\n\n  clone(): PblNgridDetailRowParentRefDirective<T> {\n    const clone = Object.create(this);\n    this._columnsDiffer = this.columns = undefined;\n    return clone;\n  }\n\n  ngOnInit(): void {\n    this.registry.setSingle('detailRowParent', this as any);\n  }\n\n  ngOnDestroy(): void {\n    this.registry.setSingle('detailRowParent',  undefined);\n  }\n}\n\n/**\n * Use to set the a default `pblNgridDetailRowParentRef` if the user did not set one.\n * @internal\n */\n@Component({\n  selector: 'pbl-ngrid-default-detail-row-parent',\n  template: `<pbl-ngrid-row *pblNgridDetailRowParentRef=\"let row; gridInstance as gridInstance\" [grid]=\"gridInstance\" [detailRow]=\"row\"></pbl-ngrid-row>`,\n})\nexport class PblNgridDefaultDetailRowParentComponent { }\n","import { Directive, EmbeddedViewRef, EventEmitter, Injector, Input, OnDestroy, Output, ComponentFactoryResolver, ComponentRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridComponent, PblNgridPluginController, NgridPlugin, PblNgridRowContext } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowComponent } from './row';\nimport { PblNgridDetailRowParentRefDirective, PblNgridDefaultDetailRowParentComponent } from './directives';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    detailRow?: PblNgridDetailRowPluginDirective<any>;\n  }\n}\n\nexport const PLUGIN_KEY: 'detailRow' = 'detailRow';\n\nexport const ROW_WHEN_TRUE = () => true;\nexport const ROW_WHEN_FALSE = () => false;\n\nexport function toggleDetailRow<T = any>(grid: PblNgridComponent<T>, row: T, forceState?: boolean): boolean | void {\n  const controller = PblNgridPluginController.find(grid);\n  if (controller) {\n    const plugin = controller.getPlugin(PLUGIN_KEY);\n    if (plugin) {\n      return plugin.toggleDetailRow(row, forceState);\n    }\n  }\n}\n\nexport interface PblDetailsRowToggleEvent<T = any> {\n  row: T;\n  expended: boolean;\n  toggle(): void;\n}\n\n@NgridPlugin({ id: PLUGIN_KEY })\n@Directive({ selector: 'pbl-ngrid[detailRow]', exportAs: 'pblNgridDetailRow' })\n@UnRx()\nexport class PblNgridDetailRowPluginDirective<T> implements OnDestroy {\n  /**\n   * Detail row control (none / all rows / selective rows)\n   *\n   * A detail row is an additional row added below a row rendered with the context of the row above it.\n   *\n   * You can enable/disable detail row for the entire grid by setting `detailRow` to true/false respectively.\n   * To control detail row per row, provide a predicate.\n   */\n  @Input() get detailRow(): ( (index: number, rowData: T) => boolean ) | boolean { return this._detailRow; }\n  set detailRow(value: ( (index: number, rowData: T) => boolean ) | boolean ) {\n    if (this._detailRow !== value) {\n      const grid = this.grid;\n\n      if (typeof value === 'function') {\n        this._isSimpleRow = (index: number, rowData: T) => !(value as any)(index, rowData);\n        this._isDetailRow = value;\n      } else {\n        value = coerceBooleanProperty(value);\n        this._isDetailRow = value ? ROW_WHEN_TRUE : ROW_WHEN_FALSE;\n        this._isSimpleRow = value ? ROW_WHEN_FALSE : ROW_WHEN_TRUE;\n      }\n      this._detailRow = value;\n\n      if (grid.isInit) {\n        this.updateTable();\n      }\n    }\n  }\n\n  @Input() set singleDetailRow(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._forceSingle !== value) {\n      this._forceSingle = value;\n      if (value && this._openedRow && this._openedRow.expended) {\n        this._detailRowRows.forEach( r => {\n          if (r.row !== this._openedRow.row) {\n            r.toggle(false);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * A list of columns that will not trigger a detail row toggle when clicked.\n   */\n  @Input() excludeToggleFrom: string[];\n\n  /**\n   * Set the behavior when the row's context is changed while the detail row is opened (another row is displayed in place of the current row).\n   *\n   * - ignore: don't do anything, leave as is (for manual intervention)\n   * - close: close the detail row\n   * - render: re-render the row with the new context\n   *\n   * The default behavior is `render`\n   *\n   * This scenario will pop-up when using pagination and the user move between pages or change the page size.\n   * It might also happen when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * The `ignore` phase, when used, will not trigger an update, leaving the detail row opened and showing data from the previous row.\n   * The `ignore` is intended for use with `toggledRowContextChange`, which will emit when the row context has changed, this will allow the developer to\n   * toggle the row (mimic `close`) or update the context manually. For example, if toggling open the detail row invokes a \"fetch\" operation that retrieves data for the detail row\n   * this will allow updates on context change.\n   *\n   * > Note that `toggledRowContextChange` fires regardless of the value set in `whenContextChange`\n   */\n  @Input() whenContextChange: 'ignore' | 'close' | 'render' = 'render';\n\n  /**\n   * Emits whenever a detail row instance is toggled on/off\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggleChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n  /**\n   * Emits whenever the row context has changed while the row is toggled open.\n   * This scenario is unique and will occur only when a detail row is opened AND the parent row has changed.\n   *\n   * For example, when using pagination and the user navigates to the next/previous set or when the rows per page size is changed.\n   * It might also occur when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggledRowContextChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n\n  private _openedRow?: PblDetailsRowToggleEvent<T>;\n  private _forceSingle: boolean;\n  private _isSimpleRow: (index: number, rowData: T) => boolean = ROW_WHEN_TRUE;\n  private _isDetailRow: (index: number, rowData: T) => boolean = ROW_WHEN_FALSE;\n  private _detailRowRows = new Map<any, PblNgridDetailRowComponent>();\n  private _detailRow: ( (index: number, rowData: T) => boolean ) | boolean;\n  private _detailRowDef: PblNgridDetailRowParentRefDirective<T>;\n  private _defaultParentRef: ComponentRef<PblNgridDefaultDetailRowParentComponent>;\n  private _removePlugin: (grid: PblNgridComponent<any>) => void;\n\n  constructor(private grid: PblNgridComponent<any>, pluginCtrl: PblNgridPluginController<T>, private injector: Injector) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    let subscription = pluginCtrl.events.subscribe( event => {\n      if (event.kind === 'onInit') {\n        subscription.unsubscribe();\n        subscription = undefined;\n\n        // Depends on target-events plugin\n        // if it's not set, create it.\n        if (!pluginCtrl.hasPlugin('targetEvents')) {\n          pluginCtrl.createPlugin('targetEvents');\n        }\n\n        grid.registry.changes\n          .subscribe( changes => {\n            for (const c of changes) {\n              switch (c.type) {\n                case 'detailRowParent':\n                  if (c.op === 'remove') {\n                    grid._cdkTable.removeRowDef(c.value);\n                    this._detailRowDef = undefined;\n                  }\n                  this.setupDetailRowParent();\n                  // grid._cdkTable.syncRows('data');\n                  break;\n              }\n            }\n          });\n\n        // if we start with an initial value, then update the grid cause we didn't do that\n        // when it was set (we cant cause we're not init)\n        // otherwise just setup the parent.\n        if (this._detailRow) {\n          this.updateTable();\n        } else {\n          this.setupDetailRowParent();\n        }\n      }\n    });\n  }\n\n  addDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.set(detailRow.row, detailRow);\n  }\n\n  removeDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.delete(detailRow.row);\n  }\n\n  toggleDetailRow(row: any, forceState?: boolean): boolean | void {\n    const detailRow = this._detailRowRows.get(row);\n    if (detailRow) {\n      detailRow.toggle(forceState);\n      return detailRow.expended;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._defaultParentRef) {\n      this._defaultParentRef.destroy();\n    }\n    this._removePlugin(this.grid);\n  }\n\n  /** @internal */\n  detailRowToggled(event: PblDetailsRowToggleEvent<T>): void {\n    // logic for closing previous row\n    const isSelf = this._openedRow && this._openedRow.row === event.row;\n    if (event.expended) {\n      if (this._forceSingle && this._openedRow && this._openedRow.expended && !isSelf) {\n        this._openedRow.toggle();\n      }\n      this._openedRow = event;\n    } else if (isSelf) {\n      this._openedRow = undefined;\n    }\n    this.toggleChange.emit(event);\n  }\n\n  private setupDetailRowParent(): void {\n    const grid = this.grid;\n    const cdkTable = grid._cdkTable;\n    if (this._detailRowDef) {\n      cdkTable.removeRowDef(this._detailRowDef);\n      this._detailRowDef = undefined;\n    }\n    if (this.detailRow) {\n      let detailRow = grid.registry.getSingle('detailRowParent');\n      if (detailRow) {\n        this._detailRowDef = detailRow = detailRow.clone();\n        Object.defineProperty(detailRow, 'columns', { enumerable: true,  get: () => grid.columnApi.visibleColumnIds });\n        Object.defineProperty(detailRow, 'when', { enumerable: true,  get: () => this._isDetailRow });\n        detailRow.ngOnChanges({ columns: { isFirstChange: () => true, firstChange: true, currentValue: detailRow.columns, previousValue: null }});\n      } else if (!this._defaultParentRef) {\n        // TODO: move to module? set in root registry? put elsewhere to avoid grid sync (see event of registry change)...\n        this._defaultParentRef = this.injector.get(ComponentFactoryResolver)\n          .resolveComponentFactory(PblNgridDefaultDetailRowParentComponent)\n          .create(this.injector);\n        this._defaultParentRef.changeDetectorRef.detectChanges();\n        return;\n      }\n    }\n    this.resetTableRowDefs();\n  }\n\n  private resetTableRowDefs(): void {\n    const grid = this.grid;\n    if (this._detailRowDef) {\n      this._detailRow === false\n        ? grid._cdkTable.removeRowDef(this._detailRowDef)\n        : grid._cdkTable.addRowDef(this._detailRowDef)\n      ;\n    }\n  }\n\n  /**\n   * Update the grid with detail row infor.\n   * Instead of calling for a change detection cycle we can assign the new predicates directly to the cdkRowDef instances.\n   */\n  private updateTable(): void {\n    this.grid._tableRowDef.when = this._isSimpleRow;\n    this.setupDetailRowParent();\n    // Once we changed the `when` predicate on the `CdkRowDef` we must:\n    //   1. Update the row cache (property `rowDefs`) to reflect the new change\n    this.grid._cdkTable.updateRowDefCache();\n\n    //   2. re-render all rows.\n    // The logic for re-rendering all rows is handled in `CdkTable._forceRenderDataRows()` which is a private method.\n    // This is a workaround, assigning to `multiTemplateDataRows` will invoke the setter which\n    // also calls `CdkTable._forceRenderDataRows()`\n    // TODO: This is risky, the setter logic might change.\n    // for example, if material will chack for change in `multiTemplateDataRows` setter from previous value...\n    this.grid._cdkTable.multiTemplateDataRows = !!this._detailRow;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Inject,\n  ElementRef,\n  OnInit,\n  OnDestroy, Optional,\n  ViewEncapsulation,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CDK_ROW_TEMPLATE, CdkRow } from '@angular/cdk/table';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridPluginController, PblNgridRowComponent, PblNgridExtensionApi, EXT_API_TOKEN } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowPluginDirective, PblDetailsRowToggleEvent, PLUGIN_KEY } from './detail-row-plugin';\n\n@Component({\n  selector: 'pbl-ngrid-row[detailRow]',\n  exportAs: 'pblNgridDetailRow',\n  host: { // tslint:disable-line:use-host-property-decorator\n    class: 'pbl-ngrid-row pbl-row-detail-parent',\n    role: 'row',\n    '[attr.tabindex]': 'grid?.rowFocus',\n    '(keydown)': 'handleKeydown($event)'\n  },\n  template: CDK_ROW_TEMPLATE,\n  styles: [ `.pbl-row-detail-parent { position: relative; cursor: pointer; }` ],\n  providers: [\n    { provide: CdkRow, useExisting: PblNgridDetailRowComponent }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\n@UnRx()\nexport class PblNgridDetailRowComponent extends PblNgridRowComponent implements OnInit, OnDestroy {\n\n  get expended(): boolean {\n    return this.opened;\n  }\n\n  @Input('detailRow') set row(value: any) { this.updateRow(); }\n\n  private get _element(): HTMLElement { return this.el.nativeElement; }\n  private opened = false;\n  private plugin: PblNgridDetailRowPluginDirective<any>;\n\n  constructor(@Optional() @Inject(EXT_API_TOKEN) extApi: PblNgridExtensionApi<any>,\n              el: ElementRef<HTMLElement>,\n              private vcRef: ViewContainerRef) {\n    super(extApi, el);\n  }\n\n  ngOnInit(): void {\n    const controller = PblNgridPluginController.find(this.extApi.grid);\n    this.plugin = controller.getPlugin(PLUGIN_KEY); // TODO: THROW IF NO PLUGIN...\n    this.plugin.addDetailRow(this);\n    const tradeEvents = controller.getPlugin('targetEvents');\n    tradeEvents.cellClick\n      .pipe(UnRx(this))\n      .subscribe( event => {\n        if (event.type === 'data' && event.row === this.context.$implicit) {\n          const { excludeToggleFrom } = this.plugin;\n          if (!excludeToggleFrom || !excludeToggleFrom.some( c => event.column.id === c )) {\n            this.toggle();\n          }\n        }\n      });\n\n    tradeEvents.rowClick\n      .pipe(UnRx(this))\n      .subscribe( event => {\n        if (!event.root && event.type === 'data' && event.row === this.context.$implicit) {\n          this.toggle();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.plugin.removeDetailRow(this);\n  }\n\n  updateRow(): void {\n    const prevIdentity = this.context && this.context.$implicit;\n    super.updateRow();\n    if (this.opened) {\n      const currIdentity = this.context && this.context.$implicit;\n      if (currIdentity !== prevIdentity && currIdentity) {\n        switch (this.plugin.whenContextChange) {\n          case 'render':\n              this.render();\n            break;\n          case 'close':\n            this.toggle(false);\n            break;\n        }\n        this.plugin.toggledRowContextChange.next(this.createEvent());\n      }\n    }\n  }\n\n  toggle(forceState?: boolean): void {\n    if (this.opened !== forceState) {\n      if ( this.opened ) {\n        this.vcRef.clear();\n        this._element.classList.remove('pbl-row-detail-opened');\n      } else {\n        this.render();\n      }\n      this.opened = this.vcRef.length > 0;\n\n      if (this.opened) {\n        this._element.classList.add('pbl-row-detail-opened');\n      }\n\n      this.plugin.detailRowToggled(this.createEvent());\n    }\n  }\n\n  /**\n   * @internal\n   */\n  handleKeydown(event: KeyboardEvent): void {\n    if ( event.target === this._element ) {\n      const keyCode = event.keyCode;\n      const isToggleKey = keyCode === ENTER || keyCode === SPACE;\n      if ( isToggleKey ) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.toggle();\n      }\n    }\n  }\n\n  private createEvent(): PblDetailsRowToggleEvent<any> {\n    const event = Object.create(this);\n    Object.defineProperty(event, 'row', { value: this.context.$implicit });\n    return event;\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.context.$implicit) {\n      const detailRowDef = this.context.grid.registry.getSingle('detailRow');\n      if ( detailRowDef ) {\n        this.vcRef.createEmbeddedView(detailRowDef.tRef, this.context);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PblNgridModule } from '@pebula/ngrid';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport { PblNgridDetailRowParentRefDirective, PblNgridDetailRowDefDirective, PblNgridDefaultDetailRowParentComponent } from './detail-row/directives';\nimport { PblNgridDetailRowPluginDirective } from './detail-row/detail-row-plugin';\nimport { PblNgridDetailRowComponent } from './detail-row/row';\n\nconst DETAIL_ROW = [\n  PblNgridDetailRowPluginDirective,\n  PblNgridDetailRowComponent,\n  PblNgridDetailRowParentRefDirective,\n  PblNgridDetailRowDefDirective,\n];\n\n@NgModule({\n  imports: [ CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule ],\n  declarations: [ DETAIL_ROW, PblNgridDefaultDetailRowParentComponent ],\n  exports: [ DETAIL_ROW ],\n  // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)\n  entryComponents: [ PblNgridDetailRowComponent, PblNgridDefaultDetailRowParentComponent ],\n})\nexport class PblNgridDetailRowModule { }\n"]}
/**
 * @fileoverview added by tsickle
 * Generated from: lib/table-drag.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DragDropModule } from '@angular/cdk/drag-drop';
import { PblNgridModule, provideCommon } from '@pebula/ngrid';
import { CdkLazyDropList, CdkLazyDrag, PblDragHandle } from './drag-and-drop/core/lazy-drag-drop';
import { PblNgridRowReorderPluginDirective, PblNgridRowDragDirective } from './drag-and-drop/row/row-reorder-plugin';
import { PblNgridColumnReorderPluginDirective, PblNgridColumnDragDirective } from './drag-and-drop/column/column-reorder-plugin';
import { PblNgridCellDraggerRefDirective } from './drag-and-drop/column/cell-dragger-ref';
import { PblNgridAggregationContainerDirective } from './drag-and-drop/column/aggregation-column';
import { PblNgridDragResizeComponent } from './column-resize/column-resize.component';
import { PblNgridCellResizerRefDirective } from './column-resize/cell-resizer-ref';
import { DragPluginDefaultTemplatesComponent } from './default-settings.component';
export class PblNgridDragModule {
    /**
     * @return {?}
     */
    static withDefaultTemplates() {
        return {
            ngModule: PblNgridDragModule,
            providers: provideCommon([{ component: DragPluginDefaultTemplatesComponent }]),
        };
    }
}
PblNgridDragModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    PblNgridModule,
                    DragDropModule
                ],
                declarations: [
                    DragPluginDefaultTemplatesComponent,
                    CdkLazyDropList, CdkLazyDrag, PblDragHandle,
                    PblNgridRowReorderPluginDirective, PblNgridRowDragDirective,
                    PblNgridColumnReorderPluginDirective, PblNgridColumnDragDirective, PblNgridCellDraggerRefDirective,
                    PblNgridAggregationContainerDirective,
                    PblNgridDragResizeComponent, PblNgridCellResizerRefDirective,
                ],
                exports: [
                    DragDropModule,
                    CdkLazyDropList, CdkLazyDrag, PblDragHandle,
                    PblNgridRowReorderPluginDirective, PblNgridRowDragDirective,
                    PblNgridColumnReorderPluginDirective, PblNgridColumnDragDirective, PblNgridCellDraggerRefDirective,
                    PblNgridAggregationContainerDirective,
                    PblNgridDragResizeComponent, PblNgridCellResizerRefDirective,
                ],
                // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)
                entryComponents: [DragPluginDefaultTemplatesComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtZHJhZy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcGVidWxhL25ncmlkL2RyYWcvIiwic291cmNlcyI6WyJsaWIvdGFibGUtZHJhZy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGNBQWMsRUFBWSxNQUFNLHdCQUF3QixDQUFDO0FBRWxFLE9BQU8sRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ2xHLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ3JILE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ2pJLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBRWxHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3RGLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRW5GLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBMkJuRixNQUFNLE9BQU8sa0JBQWtCOzs7O0lBRTdCLE1BQU0sQ0FBQyxvQkFBb0I7UUFDekIsT0FBTztZQUNMLFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsU0FBUyxFQUFFLGFBQWEsQ0FBRSxDQUFFLEVBQUUsU0FBUyxFQUFFLG1DQUFtQyxFQUFFLENBQUUsQ0FBQztTQUNsRixDQUFDO0lBQ0osQ0FBQzs7O1lBaENGLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixjQUFjO29CQUNkLGNBQWM7aUJBQ2Y7Z0JBQ0QsWUFBWSxFQUFFO29CQUNaLG1DQUFtQztvQkFDbkMsZUFBZSxFQUFFLFdBQVcsRUFBRSxhQUFhO29CQUMzQyxpQ0FBaUMsRUFBRSx3QkFBd0I7b0JBQzNELG9DQUFvQyxFQUFFLDJCQUEyQixFQUFFLCtCQUErQjtvQkFDbEcscUNBQXFDO29CQUNyQywyQkFBMkIsRUFBRSwrQkFBK0I7aUJBQzdEO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxjQUFjO29CQUNkLGVBQWUsRUFBRSxXQUFXLEVBQUUsYUFBYTtvQkFDM0MsaUNBQWlDLEVBQUUsd0JBQXdCO29CQUMzRCxvQ0FBb0MsRUFBRSwyQkFBMkIsRUFBRSwrQkFBK0I7b0JBQ2xHLHFDQUFxQztvQkFDckMsMkJBQTJCLEVBQUUsK0JBQStCO2lCQUM3RDs7Z0JBRUQsZUFBZSxFQUFFLENBQUUsbUNBQW1DLENBQUU7YUFDekQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IERyYWdEcm9wTW9kdWxlLCBEcmFnRHJvcCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9kcmFnLWRyb3AnO1xuXG5pbXBvcnQgeyBQYmxOZ3JpZE1vZHVsZSwgcHJvdmlkZUNvbW1vbiB9IGZyb20gJ0BwZWJ1bGEvbmdyaWQnO1xuXG5pbXBvcnQgeyBDZGtMYXp5RHJvcExpc3QsIENka0xhenlEcmFnLCBQYmxEcmFnSGFuZGxlIH0gZnJvbSAnLi9kcmFnLWFuZC1kcm9wL2NvcmUvbGF6eS1kcmFnLWRyb3AnO1xuaW1wb3J0IHsgUGJsTmdyaWRSb3dSZW9yZGVyUGx1Z2luRGlyZWN0aXZlLCBQYmxOZ3JpZFJvd0RyYWdEaXJlY3RpdmUgfSBmcm9tICcuL2RyYWctYW5kLWRyb3Avcm93L3Jvdy1yZW9yZGVyLXBsdWdpbic7XG5pbXBvcnQgeyBQYmxOZ3JpZENvbHVtblJlb3JkZXJQbHVnaW5EaXJlY3RpdmUsIFBibE5ncmlkQ29sdW1uRHJhZ0RpcmVjdGl2ZSB9IGZyb20gJy4vZHJhZy1hbmQtZHJvcC9jb2x1bW4vY29sdW1uLXJlb3JkZXItcGx1Z2luJztcbmltcG9ydCB7IFBibE5ncmlkQ2VsbERyYWdnZXJSZWZEaXJlY3RpdmUgfSBmcm9tICcuL2RyYWctYW5kLWRyb3AvY29sdW1uL2NlbGwtZHJhZ2dlci1yZWYnO1xuaW1wb3J0IHsgUGJsTmdyaWRBZ2dyZWdhdGlvbkNvbnRhaW5lckRpcmVjdGl2ZSB9IGZyb20gJy4vZHJhZy1hbmQtZHJvcC9jb2x1bW4vYWdncmVnYXRpb24tY29sdW1uJztcblxuaW1wb3J0IHsgUGJsTmdyaWREcmFnUmVzaXplQ29tcG9uZW50IH0gZnJvbSAnLi9jb2x1bW4tcmVzaXplL2NvbHVtbi1yZXNpemUuY29tcG9uZW50JztcbmltcG9ydCB7IFBibE5ncmlkQ2VsbFJlc2l6ZXJSZWZEaXJlY3RpdmUgfSBmcm9tICcuL2NvbHVtbi1yZXNpemUvY2VsbC1yZXNpemVyLXJlZic7XG5cbmltcG9ydCB7IERyYWdQbHVnaW5EZWZhdWx0VGVtcGxhdGVzQ29tcG9uZW50IH0gZnJvbSAnLi9kZWZhdWx0LXNldHRpbmdzLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgUGJsTmdyaWRNb2R1bGUsXG4gICAgRHJhZ0Ryb3BNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRHJhZ1BsdWdpbkRlZmF1bHRUZW1wbGF0ZXNDb21wb25lbnQsXG4gICAgQ2RrTGF6eURyb3BMaXN0LCBDZGtMYXp5RHJhZywgUGJsRHJhZ0hhbmRsZSxcbiAgICBQYmxOZ3JpZFJvd1Jlb3JkZXJQbHVnaW5EaXJlY3RpdmUsIFBibE5ncmlkUm93RHJhZ0RpcmVjdGl2ZSxcbiAgICBQYmxOZ3JpZENvbHVtblJlb3JkZXJQbHVnaW5EaXJlY3RpdmUsIFBibE5ncmlkQ29sdW1uRHJhZ0RpcmVjdGl2ZSwgUGJsTmdyaWRDZWxsRHJhZ2dlclJlZkRpcmVjdGl2ZSxcbiAgICBQYmxOZ3JpZEFnZ3JlZ2F0aW9uQ29udGFpbmVyRGlyZWN0aXZlLFxuICAgIFBibE5ncmlkRHJhZ1Jlc2l6ZUNvbXBvbmVudCwgUGJsTmdyaWRDZWxsUmVzaXplclJlZkRpcmVjdGl2ZSxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIERyYWdEcm9wTW9kdWxlLFxuICAgIENka0xhenlEcm9wTGlzdCwgQ2RrTGF6eURyYWcsIFBibERyYWdIYW5kbGUsXG4gICAgUGJsTmdyaWRSb3dSZW9yZGVyUGx1Z2luRGlyZWN0aXZlLCBQYmxOZ3JpZFJvd0RyYWdEaXJlY3RpdmUsXG4gICAgUGJsTmdyaWRDb2x1bW5SZW9yZGVyUGx1Z2luRGlyZWN0aXZlLCBQYmxOZ3JpZENvbHVtbkRyYWdEaXJlY3RpdmUsIFBibE5ncmlkQ2VsbERyYWdnZXJSZWZEaXJlY3RpdmUsXG4gICAgUGJsTmdyaWRBZ2dyZWdhdGlvbkNvbnRhaW5lckRpcmVjdGl2ZSxcbiAgICBQYmxOZ3JpZERyYWdSZXNpemVDb21wb25lbnQsIFBibE5ncmlkQ2VsbFJlc2l6ZXJSZWZEaXJlY3RpdmUsXG4gIF0sXG4gIC8vIFRPRE86IHJlbW92ZSB3aGVuIFZpZXdFbmdpbmUgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZCBieSBhbmd1bGFyIChWMTEgPz8/KVxuICBlbnRyeUNvbXBvbmVudHM6IFsgRHJhZ1BsdWdpbkRlZmF1bHRUZW1wbGF0ZXNDb21wb25lbnQgXVxufSlcbmV4cG9ydCBjbGFzcyBQYmxOZ3JpZERyYWdNb2R1bGUge1xuXG4gIHN0YXRpYyB3aXRoRGVmYXVsdFRlbXBsYXRlcygpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFBibE5ncmlkRHJhZ01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogUGJsTmdyaWREcmFnTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBwcm92aWRlQ29tbW9uKCBbIHsgY29tcG9uZW50OiBEcmFnUGx1Z2luRGVmYXVsdFRlbXBsYXRlc0NvbXBvbmVudCB9IF0pLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==
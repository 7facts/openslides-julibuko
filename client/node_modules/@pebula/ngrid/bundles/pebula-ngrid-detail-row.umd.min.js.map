{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@pebula/ngrid/detail-row/lib/detail-row/directives.ts","ng://@pebula/ngrid/detail-row/lib/detail-row/detail-row-plugin.ts","ng://@pebula/ngrid/detail-row/lib/detail-row/row.ts","ng://@pebula/ngrid/detail-row/lib/table-detail-row.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","value","done","PblNgridDetailRowDefDirective","tRef","registry","_this","_super","kind","Directive","args","selector","TemplateRef","PblNgridRegistryService","PblNgridSingleTemplateRegistry","PblNgridDetailRowParentRefDirective","template","_differs","clone","_columnsDiffer","columns","undefined","ngOnInit","setSingle","ngOnDestroy","inputs","IterableDiffers","CdkRowDef","PblNgridDefaultDetailRowParentComponent","Component","ROW_WHEN_TRUE","ROW_WHEN_FALSE","PblNgridDetailRowPluginDirective","grid","pluginCtrl","injector","whenContextChange","toggleChange","EventEmitter","toggledRowContextChange","_isSimpleRow","_isDetailRow","_detailRowRows","Map","_removePlugin","setPlugin","subscription","events","subscribe","event","unsubscribe","hasPlugin","createPlugin","changes","changes_1","changes_1_1","type","op","_cdkTable","removeRowDef","_detailRowDef","setupDetailRowParent","_detailRow","updateTable","index","rowData","coerceBooleanProperty","isInit","_forceSingle","_openedRow","expended","forEach","row","toggle","addDetailRow","detailRow","set","removeDetailRow","delete","toggleDetailRow","forceState","get","_defaultParentRef","destroy","detailRowToggled","isSelf","emit","cdkTable","getSingle","enumerable","columnApi","visibleColumnIds","ngOnChanges","isFirstChange","firstChange","currentValue","previousValue","ComponentFactoryResolver","resolveComponentFactory","changeDetectorRef","detectChanges","resetTableRowDefs","addRowDef","_tableRowDef","when","updateRowDefCache","multiTemplateDataRows","exportAs","PblNgridComponent","PblNgridPluginController","Injector","Input","Output","NgridPlugin","id","UnRx","PblNgridDetailRowComponent","extApi","el","vcRef","opened","updateRow","nativeElement","controller","find","plugin","getPlugin","tradeEvents","cellClick","pipe","context","$implicit","excludeToggleFrom","some","column","rowClick","root","prevIdentity","currIdentity","render","createEvent","clear","_element","classList","remove","add","handleKeydown","keyCode","ENTER","SPACE","preventDefault","detailRowDef","createEmbeddedView","host","class","role","[attr.tabindex]","(keydown)","CDK_ROW_TEMPLATE","providers","provide","CdkRow","useExisting","PblNgridDetailRowComponent_1","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Optional","Inject","EXT_API_TOKEN","ElementRef","ViewContainerRef","PblNgridRowComponent","DETAIL_ROW","PblNgridDetailRowModule","NgModule","imports","CommonModule","CdkTableModule","PblNgridModule","PblNgridTargetEventsModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// tslint:disable:use-host-property-decorator\nimport {\n  Component,\n  Directive,\n  IterableDiffers,\n  OnInit,\n  OnDestroy,\n  TemplateRef,\n} from '@angular/core';\nimport { CdkRowDef } from '@angular/cdk/table';\n\nimport { PblNgridRegistryService, PblNgridSingleTemplateRegistry, PblNgridRowContext } from '@pebula/ngrid';\n\ndeclare module '@pebula/ngrid/lib/grid/services/grid-registry.service' {\n  interface PblNgridSingleRegistryMap {\n    detailRowParent?: PblNgridDetailRowParentRefDirective<any>;\n    detailRow?: PblNgridDetailRowDefDirective;\n  }\n}\n\n/**\n * Marks the element as the display element for the detail row itself.\n */\n@Directive({ selector: '[pblNgridDetailRowDef]' })\nexport class PblNgridDetailRowDefDirective extends PblNgridSingleTemplateRegistry<PblNgridRowContext<any>, 'detailRow'> {\n  readonly kind: 'detailRow' = 'detailRow';\n  constructor(tRef: TemplateRef<PblNgridRowContext<any>>, registry: PblNgridRegistryService) { super(tRef, registry); }\n}\n\n@Directive({\n  selector: '[pblNgridDetailRowParentRef]',\n  inputs: ['columns: pblNgridDetailRowParentRef', 'when: pblNgridDetailRowParentRefWhen'],\n})\nexport class PblNgridDetailRowParentRefDirective<T> extends CdkRowDef<T> implements OnInit, OnDestroy {\n\n  constructor(template: TemplateRef<PblNgridRowContext<T>>, _differs: IterableDiffers, protected registry: PblNgridRegistryService) {\n    super(template, _differs);\n  }\n\n  clone(): PblNgridDetailRowParentRefDirective<T> {\n    const clone = Object.create(this);\n    this._columnsDiffer = this.columns = undefined;\n    return clone;\n  }\n\n  ngOnInit(): void {\n    this.registry.setSingle('detailRowParent', this as any);\n  }\n\n  ngOnDestroy(): void {\n    this.registry.setSingle('detailRowParent',  undefined);\n  }\n}\n\n/**\n * Use to set the a default `pblNgridDetailRowParentRef` if the user did not set one.\n * @internal\n */\n@Component({\n  selector: 'pbl-ngrid-default-detail-row-parent',\n  template: `<pbl-ngrid-row *pblNgridDetailRowParentRef=\"let row; gridInstance as gridInstance\" [grid]=\"gridInstance\" [detailRow]=\"row\"></pbl-ngrid-row>`,\n})\nexport class PblNgridDefaultDetailRowParentComponent { }\n","import { Directive, EmbeddedViewRef, EventEmitter, Injector, Input, OnDestroy, Output, ComponentFactoryResolver, ComponentRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridComponent, PblNgridPluginController, NgridPlugin, PblNgridRowContext } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowComponent } from './row';\nimport { PblNgridDetailRowParentRefDirective, PblNgridDefaultDetailRowParentComponent } from './directives';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    detailRow?: PblNgridDetailRowPluginDirective<any>;\n  }\n}\n\nexport const PLUGIN_KEY: 'detailRow' = 'detailRow';\n\nexport const ROW_WHEN_TRUE = () => true;\nexport const ROW_WHEN_FALSE = () => false;\n\nexport function toggleDetailRow<T = any>(grid: PblNgridComponent<T>, row: T, forceState?: boolean): boolean | void {\n  const controller = PblNgridPluginController.find(grid);\n  if (controller) {\n    const plugin = controller.getPlugin(PLUGIN_KEY);\n    if (plugin) {\n      return plugin.toggleDetailRow(row, forceState);\n    }\n  }\n}\n\nexport interface PblDetailsRowToggleEvent<T = any> {\n  row: T;\n  expended: boolean;\n  toggle(): void;\n}\n\n@NgridPlugin({ id: PLUGIN_KEY })\n@Directive({ selector: 'pbl-ngrid[detailRow]', exportAs: 'pblNgridDetailRow' })\n@UnRx()\nexport class PblNgridDetailRowPluginDirective<T> implements OnDestroy {\n  /**\n   * Detail row control (none / all rows / selective rows)\n   *\n   * A detail row is an additional row added below a row rendered with the context of the row above it.\n   *\n   * You can enable/disable detail row for the entire grid by setting `detailRow` to true/false respectively.\n   * To control detail row per row, provide a predicate.\n   */\n  @Input() get detailRow(): ( (index: number, rowData: T) => boolean ) | boolean { return this._detailRow; }\n  set detailRow(value: ( (index: number, rowData: T) => boolean ) | boolean ) {\n    if (this._detailRow !== value) {\n      const grid = this.grid;\n\n      if (typeof value === 'function') {\n        this._isSimpleRow = (index: number, rowData: T) => !(value as any)(index, rowData);\n        this._isDetailRow = value;\n      } else {\n        value = coerceBooleanProperty(value);\n        this._isDetailRow = value ? ROW_WHEN_TRUE : ROW_WHEN_FALSE;\n        this._isSimpleRow = value ? ROW_WHEN_FALSE : ROW_WHEN_TRUE;\n      }\n      this._detailRow = value;\n\n      if (grid.isInit) {\n        this.updateTable();\n      }\n    }\n  }\n\n  @Input() set singleDetailRow(value: boolean) {\n    value = coerceBooleanProperty(value);\n    if (this._forceSingle !== value) {\n      this._forceSingle = value;\n      if (value && this._openedRow && this._openedRow.expended) {\n        this._detailRowRows.forEach( r => {\n          if (r.row !== this._openedRow.row) {\n            r.toggle(false);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * A list of columns that will not trigger a detail row toggle when clicked.\n   */\n  @Input() excludeToggleFrom: string[];\n\n  /**\n   * Set the behavior when the row's context is changed while the detail row is opened (another row is displayed in place of the current row).\n   *\n   * - ignore: don't do anything, leave as is (for manual intervention)\n   * - close: close the detail row\n   * - render: re-render the row with the new context\n   *\n   * The default behavior is `render`\n   *\n   * This scenario will pop-up when using pagination and the user move between pages or change the page size.\n   * It might also happen when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * The `ignore` phase, when used, will not trigger an update, leaving the detail row opened and showing data from the previous row.\n   * The `ignore` is intended for use with `toggledRowContextChange`, which will emit when the row context has changed, this will allow the developer to\n   * toggle the row (mimic `close`) or update the context manually. For example, if toggling open the detail row invokes a \"fetch\" operation that retrieves data for the detail row\n   * this will allow updates on context change.\n   *\n   * > Note that `toggledRowContextChange` fires regardless of the value set in `whenContextChange`\n   */\n  @Input() whenContextChange: 'ignore' | 'close' | 'render' = 'render';\n\n  /**\n   * Emits whenever a detail row instance is toggled on/off\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggleChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n  /**\n   * Emits whenever the row context has changed while the row is toggled open.\n   * This scenario is unique and will occur only when a detail row is opened AND the parent row has changed.\n   *\n   * For example, when using pagination and the user navigates to the next/previous set or when the rows per page size is changed.\n   * It might also occur when the data is updated due to custom refresh calls on the datasource or any other scenario that might invoke a datasource update.\n   *\n   * Emits an event handler with the row, the toggle state and a toggle operation method.\n   */\n  @Output() toggledRowContextChange = new EventEmitter<PblDetailsRowToggleEvent<T>>();\n\n  private _openedRow?: PblDetailsRowToggleEvent<T>;\n  private _forceSingle: boolean;\n  private _isSimpleRow: (index: number, rowData: T) => boolean = ROW_WHEN_TRUE;\n  private _isDetailRow: (index: number, rowData: T) => boolean = ROW_WHEN_FALSE;\n  private _detailRowRows = new Map<any, PblNgridDetailRowComponent>();\n  private _detailRow: ( (index: number, rowData: T) => boolean ) | boolean;\n  private _detailRowDef: PblNgridDetailRowParentRefDirective<T>;\n  private _defaultParentRef: ComponentRef<PblNgridDefaultDetailRowParentComponent>;\n  private _removePlugin: (grid: PblNgridComponent<any>) => void;\n\n  constructor(private grid: PblNgridComponent<any>, pluginCtrl: PblNgridPluginController<T>, private injector: Injector) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n\n    let subscription = pluginCtrl.events.subscribe( event => {\n      if (event.kind === 'onInit') {\n        subscription.unsubscribe();\n        subscription = undefined;\n\n        // Depends on target-events plugin\n        // if it's not set, create it.\n        if (!pluginCtrl.hasPlugin('targetEvents')) {\n          pluginCtrl.createPlugin('targetEvents');\n        }\n\n        grid.registry.changes\n          .subscribe( changes => {\n            for (const c of changes) {\n              switch (c.type) {\n                case 'detailRowParent':\n                  if (c.op === 'remove') {\n                    grid._cdkTable.removeRowDef(c.value);\n                    this._detailRowDef = undefined;\n                  }\n                  this.setupDetailRowParent();\n                  // grid._cdkTable.syncRows('data');\n                  break;\n              }\n            }\n          });\n\n        // if we start with an initial value, then update the grid cause we didn't do that\n        // when it was set (we cant cause we're not init)\n        // otherwise just setup the parent.\n        if (this._detailRow) {\n          this.updateTable();\n        } else {\n          this.setupDetailRowParent();\n        }\n      }\n    });\n  }\n\n  addDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.set(detailRow.row, detailRow);\n  }\n\n  removeDetailRow(detailRow: PblNgridDetailRowComponent): void {\n    this._detailRowRows.delete(detailRow.row);\n  }\n\n  toggleDetailRow(row: any, forceState?: boolean): boolean | void {\n    const detailRow = this._detailRowRows.get(row);\n    if (detailRow) {\n      detailRow.toggle(forceState);\n      return detailRow.expended;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._defaultParentRef) {\n      this._defaultParentRef.destroy();\n    }\n    this._removePlugin(this.grid);\n  }\n\n  /** @internal */\n  detailRowToggled(event: PblDetailsRowToggleEvent<T>): void {\n    // logic for closing previous row\n    const isSelf = this._openedRow && this._openedRow.row === event.row;\n    if (event.expended) {\n      if (this._forceSingle && this._openedRow && this._openedRow.expended && !isSelf) {\n        this._openedRow.toggle();\n      }\n      this._openedRow = event;\n    } else if (isSelf) {\n      this._openedRow = undefined;\n    }\n    this.toggleChange.emit(event);\n  }\n\n  private setupDetailRowParent(): void {\n    const grid = this.grid;\n    const cdkTable = grid._cdkTable;\n    if (this._detailRowDef) {\n      cdkTable.removeRowDef(this._detailRowDef);\n      this._detailRowDef = undefined;\n    }\n    if (this.detailRow) {\n      let detailRow = grid.registry.getSingle('detailRowParent');\n      if (detailRow) {\n        this._detailRowDef = detailRow = detailRow.clone();\n        Object.defineProperty(detailRow, 'columns', { enumerable: true,  get: () => grid.columnApi.visibleColumnIds });\n        Object.defineProperty(detailRow, 'when', { enumerable: true,  get: () => this._isDetailRow });\n        detailRow.ngOnChanges({ columns: { isFirstChange: () => true, firstChange: true, currentValue: detailRow.columns, previousValue: null }});\n      } else if (!this._defaultParentRef) {\n        // TODO: move to module? set in root registry? put elsewhere to avoid grid sync (see event of registry change)...\n        this._defaultParentRef = this.injector.get(ComponentFactoryResolver)\n          .resolveComponentFactory(PblNgridDefaultDetailRowParentComponent)\n          .create(this.injector);\n        this._defaultParentRef.changeDetectorRef.detectChanges();\n        return;\n      }\n    }\n    this.resetTableRowDefs();\n  }\n\n  private resetTableRowDefs(): void {\n    const grid = this.grid;\n    if (this._detailRowDef) {\n      this._detailRow === false\n        ? grid._cdkTable.removeRowDef(this._detailRowDef)\n        : grid._cdkTable.addRowDef(this._detailRowDef)\n      ;\n    }\n  }\n\n  /**\n   * Update the grid with detail row infor.\n   * Instead of calling for a change detection cycle we can assign the new predicates directly to the cdkRowDef instances.\n   */\n  private updateTable(): void {\n    this.grid._tableRowDef.when = this._isSimpleRow;\n    this.setupDetailRowParent();\n    // Once we changed the `when` predicate on the `CdkRowDef` we must:\n    //   1. Update the row cache (property `rowDefs`) to reflect the new change\n    this.grid._cdkTable.updateRowDefCache();\n\n    //   2. re-render all rows.\n    // The logic for re-rendering all rows is handled in `CdkTable._forceRenderDataRows()` which is a private method.\n    // This is a workaround, assigning to `multiTemplateDataRows` will invoke the setter which\n    // also calls `CdkTable._forceRenderDataRows()`\n    // TODO: This is risky, the setter logic might change.\n    // for example, if material will chack for change in `multiTemplateDataRows` setter from previous value...\n    this.grid._cdkTable.multiTemplateDataRows = !!this._detailRow;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  Inject,\n  ElementRef,\n  OnInit,\n  OnDestroy, Optional,\n  ViewEncapsulation,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CDK_ROW_TEMPLATE, CdkRow } from '@angular/cdk/table';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridPluginController, PblNgridRowComponent, PblNgridExtensionApi, EXT_API_TOKEN } from '@pebula/ngrid';\n\nimport { PblNgridDetailRowPluginDirective, PblDetailsRowToggleEvent, PLUGIN_KEY } from './detail-row-plugin';\n\n@Component({\n  selector: 'pbl-ngrid-row[detailRow]',\n  exportAs: 'pblNgridDetailRow',\n  host: { // tslint:disable-line:use-host-property-decorator\n    class: 'pbl-ngrid-row pbl-row-detail-parent',\n    role: 'row',\n    '[attr.tabindex]': 'grid?.rowFocus',\n    '(keydown)': 'handleKeydown($event)'\n  },\n  template: CDK_ROW_TEMPLATE,\n  styles: [ `.pbl-row-detail-parent { position: relative; cursor: pointer; }` ],\n  providers: [\n    { provide: CdkRow, useExisting: PblNgridDetailRowComponent }\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\n@UnRx()\nexport class PblNgridDetailRowComponent extends PblNgridRowComponent implements OnInit, OnDestroy {\n\n  get expended(): boolean {\n    return this.opened;\n  }\n\n  @Input('detailRow') set row(value: any) { this.updateRow(); }\n\n  private get _element(): HTMLElement { return this.el.nativeElement; }\n  private opened = false;\n  private plugin: PblNgridDetailRowPluginDirective<any>;\n\n  constructor(@Optional() @Inject(EXT_API_TOKEN) extApi: PblNgridExtensionApi<any>,\n              el: ElementRef<HTMLElement>,\n              private vcRef: ViewContainerRef) {\n    super(extApi, el);\n  }\n\n  ngOnInit(): void {\n    const controller = PblNgridPluginController.find(this.extApi.grid);\n    this.plugin = controller.getPlugin(PLUGIN_KEY); // TODO: THROW IF NO PLUGIN...\n    this.plugin.addDetailRow(this);\n    const tradeEvents = controller.getPlugin('targetEvents');\n    tradeEvents.cellClick\n      .pipe(UnRx(this))\n      .subscribe( event => {\n        if (event.type === 'data' && event.row === this.context.$implicit) {\n          const { excludeToggleFrom } = this.plugin;\n          if (!excludeToggleFrom || !excludeToggleFrom.some( c => event.column.id === c )) {\n            this.toggle();\n          }\n        }\n      });\n\n    tradeEvents.rowClick\n      .pipe(UnRx(this))\n      .subscribe( event => {\n        if (!event.root && event.type === 'data' && event.row === this.context.$implicit) {\n          this.toggle();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.plugin.removeDetailRow(this);\n  }\n\n  updateRow(): void {\n    const prevIdentity = this.context && this.context.$implicit;\n    super.updateRow();\n    if (this.opened) {\n      const currIdentity = this.context && this.context.$implicit;\n      if (currIdentity !== prevIdentity && currIdentity) {\n        switch (this.plugin.whenContextChange) {\n          case 'render':\n              this.render();\n            break;\n          case 'close':\n            this.toggle(false);\n            break;\n        }\n        this.plugin.toggledRowContextChange.next(this.createEvent());\n      }\n    }\n  }\n\n  toggle(forceState?: boolean): void {\n    if (this.opened !== forceState) {\n      if ( this.opened ) {\n        this.vcRef.clear();\n        this._element.classList.remove('pbl-row-detail-opened');\n      } else {\n        this.render();\n      }\n      this.opened = this.vcRef.length > 0;\n\n      if (this.opened) {\n        this._element.classList.add('pbl-row-detail-opened');\n      }\n\n      this.plugin.detailRowToggled(this.createEvent());\n    }\n  }\n\n  /**\n   * @internal\n   */\n  handleKeydown(event: KeyboardEvent): void {\n    if ( event.target === this._element ) {\n      const keyCode = event.keyCode;\n      const isToggleKey = keyCode === ENTER || keyCode === SPACE;\n      if ( isToggleKey ) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.toggle();\n      }\n    }\n  }\n\n  private createEvent(): PblDetailsRowToggleEvent<any> {\n    const event = Object.create(this);\n    Object.defineProperty(event, 'row', { value: this.context.$implicit });\n    return event;\n  }\n\n  private render(): void {\n    this.vcRef.clear();\n    if (this.context.$implicit) {\n      const detailRowDef = this.context.grid.registry.getSingle('detailRow');\n      if ( detailRowDef ) {\n        this.vcRef.createEmbeddedView(detailRowDef.tRef, this.context);\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PblNgridModule } from '@pebula/ngrid';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport { PblNgridDetailRowParentRefDirective, PblNgridDetailRowDefDirective, PblNgridDefaultDetailRowParentComponent } from './detail-row/directives';\nimport { PblNgridDetailRowPluginDirective } from './detail-row/detail-row-plugin';\nimport { PblNgridDetailRowComponent } from './detail-row/row';\n\nconst DETAIL_ROW = [\n  PblNgridDetailRowPluginDirective,\n  PblNgridDetailRowComponent,\n  PblNgridDetailRowParentRefDirective,\n  PblNgridDetailRowDefDirective,\n];\n\n@NgModule({\n  imports: [ CommonModule, CdkTableModule, PblNgridModule, PblNgridTargetEventsModule ],\n  declarations: [ DETAIL_ROW, PblNgridDefaultDetailRowParentComponent ],\n  exports: [ DETAIL_ROW ],\n  // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)\n  entryComponents: [ PblNgridDetailRowComponent, PblNgridDefaultDetailRowParentComponent ],\n})\nexport class PblNgridDetailRowModule { }\n"]}
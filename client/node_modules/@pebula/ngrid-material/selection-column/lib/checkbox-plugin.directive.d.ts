import { Injector, OnDestroy, ComponentFactoryResolver } from '@angular/core';
import { ThemePalette } from '@angular/material/core';
import { PblNgridComponent, PblNgridPluginController } from '@pebula/ngrid';
import * as ɵngcc0 from '@angular/core';
declare module '@pebula/ngrid/lib/ext/types' {
    interface PblNgridPluginExtension {
        matCheckboxSelection?: PblNgridMatCheckboxSelectionDirective;
    }
}
export declare class PblNgridMatCheckboxSelectionDirective implements OnDestroy {
    private table;
    private cfr;
    private injector;
    get isCheckboxDisabled(): (row: any) => boolean;
    set isCheckboxDisabled(value: (row: any) => boolean);
    /**
     * Add's a selection column using material's `mat-checkbox` in the column specified.
     */
    get matCheckboxSelection(): string;
    set matCheckboxSelection(value: string);
    /**
     * Defines the behavior when clicking on the bulk select checkbox (header).
     * There are 2 options:
     *
     * - all: Will select all items in the current collection
     * - view: Will select only the rendered items in the view
     *
     * The default value is `all`
     */
    get bulkSelectMode(): 'all' | 'view' | 'none';
    set bulkSelectMode(value: 'all' | 'view' | 'none');
    get matCheckboxSelectionColor(): ThemePalette;
    set matCheckboxSelectionColor(value: ThemePalette);
    private _name;
    private _bulkSelectMode;
    private _color;
    private cmpRef;
    private _removePlugin;
    private _isCheckboxDisabled;
    constructor(table: PblNgridComponent<any>, cfr: ComponentFactoryResolver, injector: Injector, pluginCtrl: PblNgridPluginController);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PblNgridMatCheckboxSelectionDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PblNgridMatCheckboxSelectionDirective, "pbl-ngrid[matCheckboxSelection]", never, { "isCheckboxDisabled": "isCheckboxDisabled"; "matCheckboxSelection": "matCheckboxSelection"; "bulkSelectMode": "bulkSelectMode"; "matCheckboxSelectionColor": "matCheckboxSelectionColor"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtcGx1Z2luLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJjaGVja2JveC1wbHVnaW4uZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdG9yLCBPbkRlc3Ryb3ksIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XG5pbXBvcnQgeyBQYmxOZ3JpZENvbXBvbmVudCwgUGJsTmdyaWRQbHVnaW5Db250cm9sbGVyIH0gZnJvbSAnQHBlYnVsYS9uZ3JpZCc7XG5kZWNsYXJlIG1vZHVsZSAnQHBlYnVsYS9uZ3JpZC9saWIvZXh0L3R5cGVzJyB7XG4gICAgaW50ZXJmYWNlIFBibE5ncmlkUGx1Z2luRXh0ZW5zaW9uIHtcbiAgICAgICAgbWF0Q2hlY2tib3hTZWxlY3Rpb24/OiBQYmxOZ3JpZE1hdENoZWNrYm94U2VsZWN0aW9uRGlyZWN0aXZlO1xuICAgIH1cbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBibE5ncmlkTWF0Q2hlY2tib3hTZWxlY3Rpb25EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgdGFibGU7XG4gICAgcHJpdmF0ZSBjZnI7XG4gICAgcHJpdmF0ZSBpbmplY3RvcjtcbiAgICBnZXQgaXNDaGVja2JveERpc2FibGVkKCk6IChyb3c6IGFueSkgPT4gYm9vbGVhbjtcbiAgICBzZXQgaXNDaGVja2JveERpc2FibGVkKHZhbHVlOiAocm93OiBhbnkpID0+IGJvb2xlYW4pO1xuICAgIC8qKlxuICAgICAqIEFkZCdzIGEgc2VsZWN0aW9uIGNvbHVtbiB1c2luZyBtYXRlcmlhbCdzIGBtYXQtY2hlY2tib3hgIGluIHRoZSBjb2x1bW4gc3BlY2lmaWVkLlxuICAgICAqL1xuICAgIGdldCBtYXRDaGVja2JveFNlbGVjdGlvbigpOiBzdHJpbmc7XG4gICAgc2V0IG1hdENoZWNrYm94U2VsZWN0aW9uKHZhbHVlOiBzdHJpbmcpO1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIGJlaGF2aW9yIHdoZW4gY2xpY2tpbmcgb24gdGhlIGJ1bGsgc2VsZWN0IGNoZWNrYm94IChoZWFkZXIpLlxuICAgICAqIFRoZXJlIGFyZSAyIG9wdGlvbnM6XG4gICAgICpcbiAgICAgKiAtIGFsbDogV2lsbCBzZWxlY3QgYWxsIGl0ZW1zIGluIHRoZSBjdXJyZW50IGNvbGxlY3Rpb25cbiAgICAgKiAtIHZpZXc6IFdpbGwgc2VsZWN0IG9ubHkgdGhlIHJlbmRlcmVkIGl0ZW1zIGluIHRoZSB2aWV3XG4gICAgICpcbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgYWxsYFxuICAgICAqL1xuICAgIGdldCBidWxrU2VsZWN0TW9kZSgpOiAnYWxsJyB8ICd2aWV3JyB8ICdub25lJztcbiAgICBzZXQgYnVsa1NlbGVjdE1vZGUodmFsdWU6ICdhbGwnIHwgJ3ZpZXcnIHwgJ25vbmUnKTtcbiAgICBnZXQgbWF0Q2hlY2tib3hTZWxlY3Rpb25Db2xvcigpOiBUaGVtZVBhbGV0dGU7XG4gICAgc2V0IG1hdENoZWNrYm94U2VsZWN0aW9uQ29sb3IodmFsdWU6IFRoZW1lUGFsZXR0ZSk7XG4gICAgcHJpdmF0ZSBfbmFtZTtcbiAgICBwcml2YXRlIF9idWxrU2VsZWN0TW9kZTtcbiAgICBwcml2YXRlIF9jb2xvcjtcbiAgICBwcml2YXRlIGNtcFJlZjtcbiAgICBwcml2YXRlIF9yZW1vdmVQbHVnaW47XG4gICAgcHJpdmF0ZSBfaXNDaGVja2JveERpc2FibGVkO1xuICAgIGNvbnN0cnVjdG9yKHRhYmxlOiBQYmxOZ3JpZENvbXBvbmVudDxhbnk+LCBjZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgaW5qZWN0b3I6IEluamVjdG9yLCBwbHVnaW5DdHJsOiBQYmxOZ3JpZFBsdWdpbkNvbnRyb2xsZXIpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=
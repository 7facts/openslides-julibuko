{"version":3,"file":"pebula-ngrid-material-selection-column.js","sources":["ng:/@pebula/ngrid-material/selection-column/lib/table-checkbox.component.ts","ng:/@pebula/ngrid-material/selection-column/lib/checkbox-plugin.directive.ts","ng:/@pebula/ngrid-material/selection-column/lib/table-checkbox.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAaM,eAAe;AAAQ;AAEvB;AAFkB,MAAM,KAAK,CAAA;AACnC;AAEc,IAOD,yBAAyB,SAAzB,yBAAyB;AAAG;AAAQ;AAEhD;AAAsB;AAAQ,IAsE7B,YAAmB,KAA6B,EAAU,GAAsB;AAClF,QADqB,UAAK,GAAL,KAAK,CAAwB;AAAC,QAAS,QAAG,GAAH,GAAG,CAAmB;AAAC,QARjF,gBAAW,GAAG,KAAK,CAAC;AACtB,QAIU,wBAAmB,GAA0B,eAAe,CAAC;AACvE;AAAyB,cAGf,UAAU,GAAG,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC;AAC3D,QAAI,UAAU,CAAC,MAAM;AACrB,aAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,aAAO,SAAS;AAAM;AACD;AAClB;AAAY,QAFG,CAAC;AACnB,YAAQ,IAAI,CAAC,CAAC,IAAI,KAAK,cAAc,EAAE;AACvC,gBAAU,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;AAC5C,aAAS;AACT,SAAO,EAAC,CAAC;AACT,KAAG;AACH;AACO;AAEQ;AAA4B;AACzC;AAGa;AACU;AAAO;AAChB;AAAmB;AAAQ,IA1EzC,IAAa,cAAc,KAA8B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AACzF;AAAQ;AAAwB;AAAmB;AAC/C,IADF,IAAI,cAAc,CAAC,KAA8B;AACnD,QAAI,IAAI,KAAK,KAAK,IAAI,CAAC,eAAe,EAAE;AACxC,YAAM,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACnC,YAAM,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC9B,YAAM,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AACE;AACE;AAEJ;AAAmB;AAAQ,IAAzB,IAAa,SAAS;AAAK,QACzB,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,KAAG;AACH;AAAQ;AAAwB;AAC3B;AAAQ,IADX,IAAI,SAAS,CAAC,KAA0B;AAC1C,QAAI,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;AACnC,YAAM,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC9B,YAAM,IAAI,CAAC,cAAc,EAAE,CAAC;AAC5B,SAAK;AACL,KAAG;AACH;AACO;AAAmB;AAAQ,IAAhC,IAAa,kBAAkB,KAAK,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAE;AACxE;AAAQ;AAAwB;AAAmB;AACjD,IADA,IAAI,kBAAkB,CAAC,KAA4B;AACrD,QAAI,IAAI,KAAK,KAAK,IAAI,CAAC,mBAAmB,EAAE;AAC5C,YAAM,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;AACvC,YAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,OAAO,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;AACvF,gBAAQ,IAAI,CAAC,mBAAmB,GAAG,eAAe,CAAC;AACnD,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AAAmB;AAAQ,IAAhC,IAAa,KAAK,KAAmB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;AAC5D;AAAQ;AAAwB;AAChB;AAAQ,IADtB,IAAI,KAAK,CAAC,KAAmB;AAC/B,QAAI,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;AAC/B,YAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1B,YAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC7B,gBAAQ,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAChC,gBAAQ,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AACjC,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AAAmB;AAAQ,IAuBhC,eAAe;AAAK,QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;AAC1C,YAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC;AAC/C,SAAK;AACL;AACwB,cAAd,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;AACxC,QAAI,QAAQ,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACpD,QAAI,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACjD,QAAI,QAAQ,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACpD,KAAG;AACH;AACO;AACN;AAAQ,IADP,YAAY;AAAK,QACf,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B,YAAM,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AAC7B,SAAK;AAAC,aAAK;AACX;AAA6B,kBAAjB,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM;AAAM;AAA+B;AAClE;AAAgB,YADc,IAAI,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAC;AAC3F,YAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC;AACzC,SAAK;AACL,KAAG;AACH;AACO;AAAsB;AACf;AAAQ,IADpB,aAAa,CAAC,GAAQ;AAAI,QACxB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC/B,QAAI,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAC5B,QAAI,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC7B,KAAG;AACH;AACO;AAAgB;AACT;AAAQ,IADZ,aAAa;AACvB,cAAU,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK;AAC7B,QAAI,OAAO,IAAI,CAAC,cAAc,KAAK,MAAM,GAAG,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,MAAM,CAAC;AACxE,KAAG;AACH;AACO;AAAgB;AAChB;AAAQ,IADL,cAAc;AAAK,QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,QAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,YAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;AACnD,YAAM,IAAI,CAAC,SAAS,CAAC,OAAO;AAC5B,iBAAS,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,iBAAS,SAAS;AAAM;AACD;AAAgB,YADnB;AACpB,sBAAgB,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM;AAAM;AAAmC;AACpE;AAAoB,gBADQ,IAAI,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAC;AACjG,gBAAU,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC;AACpG,gBAAU,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;AACvD,gBAAU,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAClC,gBAAU,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AACnC,aAAS,EAAC,CAAC;AACX,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACtB,SAAK;AACL,KAAG;AACH,EAAC;qDA3IA,SAAS,SAAC,kBACT,QAAQ,EAAE,oBAAoB,kBAC9B;;;;;;;;;;4FAA8C,kBAE9C,eAAe,EAAE,uBAAuB,CAAC,MAAM,kBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI,mKACtC;;;;;;;;;;oVACG;AAAC;AACW;AACf,YAlBC,iBAAiB;AACjB,YAP+F,iBAAiB;AAAG;AAAG;AAC9F,mBA4BvB,KAAK;AAAK,6BAWV,KAAK;AAAK,wBAYV,KAAK;AAAK,iCAUV,KAAK;AAAK,oBAUV,KAAK;AAAK,wBAWV,SAAS,SAAC,8BAA8B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAAO,sBACjE,SAAS,SAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAAO,wBAC3D,SAAS,SAAC,8BAA8B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAAM;AA9DtD,yBAAyB;AAAgB,IADrD,IAAI,EAAE;AACN,qCAwE2B,iBAAiB,EAAoB,iBAAiB;AAAG,GAxExE,yBAAyB,CAmIrC;AACA;AAAa;AAAQ;AAA4C;AAAkD;AAAO;AAAO;AAAiB;AAAQ,IA9HzJ,yCAAsB;AACxB;AAEc,IAmDZ,8CAA4G;AAC9G;AAAqB,IAAnB,4CAA8F;AAChG;AAAqB,IAAnB,8CAA4G;AAC9G;AACoB,IAAlB,gDAAoB;AACtB;AAEE,IAFA,2CAAe;AACjB;AACO;AAAiB;AAAgB;AACnC,IADH,+CAAwC;AAC1C;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,oDAAiD;AACnD;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,wDAAqE;AACvE;AAAQ;AAAiB;AAEjB;AAAQ,IAFd,2CAA6B;AAC/B;AACoB,IAAN,0CAAoC;AAAC;AAAQ;AAAiB;AACtE;AAAQ,IADsC,wCAA8B;AAAC;AAAE;AACrF;AAAI;AAAkC;AAE/B;AAID;AACN;AAGE,MC5FI,UAAU,GAA2B,sBAAsB;AACjE,IAIa,qCAAqC,SAArC,qCAAqC;AAAG;AAAQ;AAEnD;AAAsB;AAA2B;AAC5C;AAAQ,IA4ErB,YAAoB,KAA6B,EAC7B,GAA6B,EAC7B,QAAkB,EAC1B,UAAoC;AAClD,QAJsB,UAAK,GAAL,KAAK,CAAwB;AAAC,QAC9B,QAAG,GAAH,GAAG,CAA0B;AAAC,QAC9B,aAAQ,GAAR,QAAQ,CAAU;AAAC,QAP/B,WAAM,GAAiB,SAAS,CAAC;AAC3C,QAQI,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAChE,KAAG;AACH;AACO;AACC;AAAQ,IArFd,IAAa,kBAAkB,KAAK,OAAO,IAAI,CAAC,mBAAmB,CAAC,EAAE;AACxE;AAAQ;AAAwB;AAAmB;AAClD,IADC,IAAI,kBAAkB,CAAC,KAA4B;AAAI,QACrD,IAAI,KAAK,KAAK,IAAI,CAAC,mBAAmB,EAAE;AAC5C,YAAM,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;AACvC,YAAM,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;AAChC,gBAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACxD,gBAAQ,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;AACtD,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AACa;AAAQ,IAAtB,IAAa,oBAAoB,KAAa,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AACpE;AAAQ;AAAwB;AAC1B;AAAQ,IADZ,IAAI,oBAAoB,CAAC,KAAa;AAAI,QACxC,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;AAC9B,YAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACzB,YAAM,IAAI,CAAC,KAAK,EAAE;AAClB,gBAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;AACzB,oBAAU,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AAChC,oBAAU,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;AAClC,iBAAS;AACT,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,oBAAU,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,yBAAyB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1G,oBAAU,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAClD,oBAAU,IAAI,IAAI,CAAC,eAAe,EAAE;AACpC,wBAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;AACvE,qBAAW;AACX,oBAAU,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AACnD,iBAAS;AACT,gBAAQ,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACrC,oBAAU,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC5E,iBAAS;AACT,gBAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1C,gBAAQ,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;AACtD,aAAO;AACP,SAAK;AACL,KAAG;AACH;AAEC;AACE;AAEH;AAAO;AACE;AAEH;AAAO;AAEJ;AAAmB;AAAQ,IAAlC,IAAa,cAAc,KAA8B,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AACzF;AAAQ;AAAwB;AAAmB;AAC/C,IADF,IAAI,cAAc,CAAC,KAA8B;AACnD,QAAI,IAAI,KAAK,KAAK,IAAI,CAAC,eAAe,EAAE;AACxC,YAAM,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACnC,YAAM,IAAI,IAAI,CAAC,MAAM,EAAE;AACvB,gBAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,GAAG,KAAK,CAAC;AACpD,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AAAmB;AAAQ,IAAhC,IAAa,yBAAyB,KAAmB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;AAChF;AAAQ;AAAwB;AAAmB;AAC/C,IADF,IAAI,yBAAyB,CAAC,KAAmB;AACnD,QAAI,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;AAC/B,YAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1B,YAAM,IAAI,IAAI,CAAC,MAAM,EAAE;AACvB,gBAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3C,aAAO;AACP,SAAK;AACL,KAAG;AACH;AACO;AACN;AAAQ,IAaP,WAAW;AACb,QAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;AAC5B,SAAK;AACL,QAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,KAAG;AACH,CAAC,CAAA;iEA9FA,SAAS,SAAC,EAAE,QAAQ,EAAE,iCAAiC,EAAE;6WACrD;AAAC;AACW;AAEZ,YAjBI,iBAAiB;AAAI,YAJkB,wBAAwB;AAAI,YAAxD,QAAQ;AAAI,YAIJ,wBAAwB;AAAG;AAAG;AAElC,iCAerB,KAAK;AAAK,mCAcV,KAAK;AAAK,6BAoCV,KAAK;AAAK,wCAUV,KAAK;AAAI;AA9DC,qCAAqC;AAAgB,IAHjE,WAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC;AAC/B,IACA,IAAI,EAAE;AACN,qCA+E4B,iBAAiB;AAAE,QACrB,wBAAwB;AACnD,QAAgC,QAAQ;AACxC,QAA0B,wBAAwB;AAAG,GAlFxC,qCAAqC,CA4FjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACD;AAAC;AAAa;AAAQ;AAAiB;AAAgB;AAAQ,IArB7D,sDAAsB;AACxB;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,gEAAiD;AACnD;AAAQ;AAAiB;AAAgB;AACpC,IADH,uDAAyC;AAC3C;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,uDAAwD;AAC1D;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,8DAA+D;AACjE;AAAQ;AAAiB;AAAgB;AAAQ,IAA/C,oEAAmD;AACrD;AACO;AAAiB;AAAgB;AAAQ,IAAlC,sDAAqC;AAAC;AAC7C;AAAiB;AAAgB;AAAQ,IAAlC,oDAAqC;AAAC;AAC7C;AAAiB;AAAgB;AAClC,IADQ,yDAA0B;AAAC;AACxC;AAAC;AAAI;AAAkC;AACN;AAOZ;AC7GtB,MAea,sBAAsB;AAAG;kDAPrC,QAAQ,SAAC,kBACR;GAAO,EAAE,CAAE,YAAY,EAAE,iBAAiB,EAAE,cAAc,CAAE,kBAC5D,YAAY,EAAE,CAAE,qCAAqC,EAAE,yBAAyB,CAAE,kBAClF,OAAO,EAAE,CAAE,qCAAqC,EAAE;sBAAyB,CAAE,8GAE7E,eAAe,EAAE,CAAE,yBAAyB,CAAE,cAC/C;;;;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACN;AAA4B;AAAsI;AAAI;AAAC;AAAI;AAAkC;AAA6D;AAAsI;AAAI;AAAC;AAAiH","sourcesContent":["import { Component, Input, ViewChild, ViewEncapsulation, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { UnRx } from '@pebula/utils';\nimport {\n  PblNgridComponent,\n  PblNgridHeaderCellDefDirective,\n  PblNgridCellDefDirective,\n  PblNgridFooterCellDefDirective,\n  PblNgridPluginController,\n} from '@pebula/ngrid';\n\nconst ALWAYS_FALSE_FN = () => false;\n\n@Component({\n  selector: 'pbl-ngrid-checkbox',\n  templateUrl: './table-checkbox.component.html',\n  styleUrls: ['./table-checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\n@UnRx()\nexport class PblNgridCheckboxComponent implements AfterViewInit {\n  /**\n   * Unique name for the checkbox column.\n   * When not set, the name 'checkbox' is used.\n   *\n   **/\n  @Input() name: string;\n\n  /**\n   * Defines the behavior when clicking on the bulk select checkbox (header).\n   * There are 2 options:\n   *\n   * - all: Will select all items in the current collection\n   * - view: Will select only the rendered items in the view\n   *\n   * The default value is `all`\n   */\n  @Input() get bulkSelectMode(): 'all' | 'view' | 'none' { return this._bulkSelectMode; }\n  set bulkSelectMode(value: 'all' | 'view' | 'none') {\n    if (value !== this._bulkSelectMode) {\n      this._bulkSelectMode = value;\n      this.cdr.markForCheck();\n      this.cdr.detectChanges();\n    }\n  }\n  /**\n   * A Custom selection model, optional.\n   * If not set, the selection model from the DataSource is used.\n   */\n  @Input() get selection(): SelectionModel<any> {\n    return this._selection;\n  }\n  set selection(value: SelectionModel<any>) {\n    if (value !== this._selection) {\n      this._selection = value;\n      this.setupSelection();\n    }\n  }\n\n  @Input() get isCheckboxDisabled() { return this._isCheckboxDisabled; }\n  set isCheckboxDisabled(value: (row: any) => boolean) {\n    if (value !== this._isCheckboxDisabled) {\n      this._isCheckboxDisabled = value;\n      if (!this._isCheckboxDisabled || typeof this._isCheckboxDisabled !== 'function') {\n        this._isCheckboxDisabled = ALWAYS_FALSE_FN;\n      }\n    }\n  }\n\n  @Input() get color(): ThemePalette { return this._color; }\n  set color(value: ThemePalette) {\n    if (value !== this._color) {\n      this._color = value;\n      if (this.table.isInit) {\n        this.cdr.markForCheck();\n        this.cdr.detectChanges();\n      }\n    }\n  }\n\n  @ViewChild(PblNgridHeaderCellDefDirective, { static: true }) headerDef: PblNgridHeaderCellDefDirective<any>;\n  @ViewChild(PblNgridCellDefDirective, { static: true }) cellDef: PblNgridCellDefDirective<any>;\n  @ViewChild(PblNgridFooterCellDefDirective, { static: true }) footerDef: PblNgridFooterCellDefDirective<any>;\n\n  allSelected = false;\n  length: number;\n\n  private _selection: SelectionModel<any>;\n  private _bulkSelectMode: 'all' | 'view' | 'none';\n  private _isCheckboxDisabled: (row: any) => boolean = ALWAYS_FALSE_FN;\n  private _color: ThemePalette;\n\n  constructor(public table: PblNgridComponent<any>, private cdr: ChangeDetectorRef) {\n    const pluginCtrl = PblNgridPluginController.find(table);\n    pluginCtrl.events\n      .pipe(UnRx(this))\n      .subscribe( e => {\n        if (e.kind === 'onDataSource') {\n          this.selection = e.curr.selection;\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.selection && this.table.ds) {\n      this.selection = this.table.ds.selection;\n    }\n\n    const registry = this.table.registry;\n    registry.addMulti('headerCell', this.headerDef);\n    registry.addMulti('tableCell', this.cellDef);\n    registry.addMulti('footerCell', this.footerDef);\n  }\n\n  masterToggle(): void {\n    if (this.allSelected) {\n      this.selection.clear();\n    } else {\n      const selected = this.getCollection().filter(data => !this._isCheckboxDisabled(data));\n      this.selection.select(...selected);\n    }\n  }\n\n  rowItemChange(row: any): void {\n    this.selection.toggle(row);\n    this.cdr.markForCheck();\n    this.cdr.detectChanges();\n  }\n\n  private getCollection() {\n    const { ds } = this.table;\n    return this.bulkSelectMode === 'view' ? ds.renderedData : ds.source;\n  }\n\n  private setupSelection(): void {\n    UnRx.kill(this, this.table);\n    if (this._selection) {\n      this.length = this.selection.selected.length;\n      this.selection.changed\n        .pipe(UnRx(this, this.table))\n        .subscribe( () => {\n          const { length } = this.getCollection().filter(data => !this._isCheckboxDisabled(data));\n          this.allSelected = !this.selection.isEmpty() && this.selection.selected.length === length;\n          this.length = this.selection.selected.length;\n          this.cdr.markForCheck();\n          this.cdr.detectChanges();\n        });\n    } else {\n      this.length = 0;\n    }\n  }\n}\n","import { Directive, Injector, Input, OnDestroy, ComponentFactoryResolver, ComponentRef } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\nimport { UnRx } from '@pebula/utils';\nimport { PblNgridComponent, PblNgridPluginController, NgridPlugin } from '@pebula/ngrid';\n\nimport { PblNgridCheckboxComponent } from './table-checkbox.component';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    matCheckboxSelection?: PblNgridMatCheckboxSelectionDirective;\n  }\n}\n\nconst PLUGIN_KEY: 'matCheckboxSelection' = 'matCheckboxSelection';\n\n@NgridPlugin({ id: PLUGIN_KEY })\n@Directive({ selector: 'pbl-ngrid[matCheckboxSelection]' })\n@UnRx()\nexport class PblNgridMatCheckboxSelectionDirective implements OnDestroy {\n\n  @Input() get isCheckboxDisabled() { return this._isCheckboxDisabled; }\n  set isCheckboxDisabled(value: (row: any) => boolean ) {\n    if (value !== this._isCheckboxDisabled) {\n      this._isCheckboxDisabled = value;\n      if (this.cmpRef && value) {\n        this.cmpRef.instance.isCheckboxDisabled = value;\n        this.cmpRef.changeDetectorRef.detectChanges();\n      }\n    }\n  }\n\n  /**\n   * Add's a selection column using material's `mat-checkbox` in the column specified.\n   */\n  @Input() get matCheckboxSelection(): string { return this._name; }\n  set matCheckboxSelection(value: string ) {\n    if (value !== this._name) {\n      this._name = value;\n      if (!value) {\n        if (this.cmpRef) {\n          this.cmpRef.destroy();\n          this.cmpRef = undefined;\n        }\n      } else {\n        if (!this.cmpRef) {\n          this.cmpRef = this.cfr.resolveComponentFactory(PblNgridCheckboxComponent).create(this.injector);\n          this.cmpRef.instance.table = this.table;\n          if (this._bulkSelectMode) {\n            this.cmpRef.instance.bulkSelectMode = this._bulkSelectMode;\n          }\n          this.cmpRef.instance.color = this._color;\n        }\n        if (this.isCheckboxDisabled) {\n          this.cmpRef.instance.isCheckboxDisabled = this.isCheckboxDisabled;\n        }\n        this.cmpRef.instance.name = value;\n        this.cmpRef.changeDetectorRef.detectChanges();\n      }\n    }\n  }\n\n  /**\n   * Defines the behavior when clicking on the bulk select checkbox (header).\n   * There are 2 options:\n   *\n   * - all: Will select all items in the current collection\n   * - view: Will select only the rendered items in the view\n   *\n   * The default value is `all`\n   */\n  @Input() get bulkSelectMode(): 'all' | 'view' | 'none' { return this._bulkSelectMode; }\n  set bulkSelectMode(value: 'all' | 'view' | 'none') {\n    if (value !== this._bulkSelectMode) {\n      this._bulkSelectMode = value;\n      if (this.cmpRef) {\n        this.cmpRef.instance.bulkSelectMode = value;\n      }\n    }\n  }\n\n  @Input() get matCheckboxSelectionColor(): ThemePalette { return this._color; }\n  set matCheckboxSelectionColor(value: ThemePalette) {\n    if (value !== this._color) {\n      this._color = value;\n      if (this.cmpRef) {\n        this.cmpRef.instance.color = value;\n      }\n    }\n  }\n\n  private _name: string;\n  private _bulkSelectMode: 'all' | 'view' | 'none';\n  private _color: ThemePalette = 'primary';\n  private cmpRef: ComponentRef<PblNgridCheckboxComponent>;\n  private _removePlugin: (table: PblNgridComponent<any>) => void;\n  private _isCheckboxDisabled: (row: any) => boolean;\n\n  constructor(private table: PblNgridComponent<any>,\n              private cfr: ComponentFactoryResolver,\n              private injector: Injector,\n              pluginCtrl: PblNgridPluginController) {\n    this._removePlugin = pluginCtrl.setPlugin(PLUGIN_KEY, this);\n  }\n\n  ngOnDestroy() {\n    if (this.cmpRef) {\n      this.cmpRef.destroy();\n    }\n    this._removePlugin(this.table);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { PblNgridModule } from '@pebula/ngrid';\nimport { PblNgridMatCheckboxSelectionDirective } from './checkbox-plugin.directive';\nimport { PblNgridCheckboxComponent } from './table-checkbox.component';\n\n@NgModule({\n  imports: [ CommonModule, MatCheckboxModule, PblNgridModule ],\n  declarations: [ PblNgridMatCheckboxSelectionDirective, PblNgridCheckboxComponent ],\n  exports: [ PblNgridMatCheckboxSelectionDirective, PblNgridCheckboxComponent ],\n  // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)\n  entryComponents: [ PblNgridCheckboxComponent ]\n})\nexport class PblNgridCheckboxModule { }\n"]}
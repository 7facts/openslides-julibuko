{"version":3,"file":"pebula-ngrid-material-context-menu.js","sources":["ng:/@pebula/ngrid-material/context-menu/lib/header-context/header-context-menu.directive.ts","ng:/@pebula/ngrid-material/context-menu/lib/header-context/header-context-menu-trigger.ts","ng:/@pebula/ngrid-material/context-menu/lib/header-context/header-context-menu-extension.ts","ng:/@pebula/ngrid-material/context-menu/lib/header-context/styles/excel-style-header-menu.ts","ng:/@pebula/ngrid-material/context-menu/lib/context-menu.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, Input } from '@angular/core';\nimport { PblNgridPluginController, NgridPlugin } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelFactory, PblNgridOverlayPanel, PblNgridOverlayPanelConfig } from '@pebula/ngrid/overlay-panel';\n\ndeclare module '@pebula/ngrid/lib/ext/types' {\n  interface PblNgridPluginExtension {\n    matHeaderContextMenu?: PblNgridMatHeaderContextMenuPlugin;\n  }\n}\n\nconst PLUGIN_KEY: 'matHeaderContextMenu' = 'matHeaderContextMenu';\n\n@NgridPlugin({ id: PLUGIN_KEY })\n@Directive({ selector: 'pbl-ngrid[matHeaderContextMenu]', providers: [ PblNgridOverlayPanelFactory ] })\nexport class PblNgridMatHeaderContextMenuPlugin {\n\n  @Input('matHeaderContextMenu') style: any;\n  @Input() config: PblNgridOverlayPanelConfig;\n\n  readonly overlayPanel: PblNgridOverlayPanel;\n\n  constructor(overlayPanelFactory: PblNgridOverlayPanelFactory,\n              public readonly pluginCtrl: PblNgridPluginController) {\n    this.overlayPanel = overlayPanelFactory.create(pluginCtrl.extApi.grid);\n  }\n\n}\n","import { Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { PblNgridDataHeaderExtensionContext } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelConfig } from '@pebula/ngrid/overlay-panel';\n\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context-menu.directive';\n\nconst DEFAULT_CONFIG: PblNgridOverlayPanelConfig = { hasBackdrop: true, xPos: 'after', yPos: 'below' };\n\n@Component({\n  selector: 'div[mat-header-context-menu-trigger]',\n  host: {\n    class: 'mat-header-context-menu-trigger',\n    '(click)': 'openOverlayPanel()',\n  },\n  templateUrl: `./header-context-menu-trigger.html`,\n  styleUrls: [ `./header-context-menu-trigger.scss` ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatHeaderContextMenuTrigger {\n\n  context: PblNgridDataHeaderExtensionContext;\n\n  constructor(private plugin: PblNgridMatHeaderContextMenuPlugin, private elRef: ElementRef<HTMLElement>) { }\n\n  openOverlayPanel() {\n    const config = this.plugin.config || DEFAULT_CONFIG;\n    this.plugin.overlayPanel.open(this.plugin.style, this.elRef, config, this.context);\n  }\n}\n","import { ComponentFactory, ComponentRef, ComponentFactoryResolver } from '@angular/core';\nimport { PblNgridMultiComponentRegistry, PblNgridDataHeaderExtensionContext } from '@pebula/ngrid';\n\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context-menu.directive';\nimport { MatHeaderContextMenuTrigger } from './header-context-menu-trigger';\n\nexport class MatHeaderContextMenuExtension extends PblNgridMultiComponentRegistry<MatHeaderContextMenuTrigger, 'dataHeaderExtensions'> {\n  readonly name: 'matHeaderContextMenuTrigger' = 'matHeaderContextMenuTrigger';\n  readonly kind: 'dataHeaderExtensions' = 'dataHeaderExtensions';\n  readonly projectContent = false;\n\n  constructor(private cfr: ComponentFactoryResolver) { super(); }\n\n  shouldRender(context: PblNgridDataHeaderExtensionContext): boolean {\n    return !!context.injector.get(PblNgridMatHeaderContextMenuPlugin, false);\n  }\n\n  getFactory(context: PblNgridDataHeaderExtensionContext): ComponentFactory<MatHeaderContextMenuTrigger> {\n    return this.cfr.resolveComponentFactory(MatHeaderContextMenuTrigger);\n  }\n\n  onCreated(context: PblNgridDataHeaderExtensionContext, cmpRef: ComponentRef<MatHeaderContextMenuTrigger>): void {\n    cmpRef.instance.context = context;\n    cmpRef.changeDetectorRef.markForCheck();\n  }\n}\n","import { Component, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\n\nimport { PblNgridComponent, PblColumn, PblNgridDataHeaderExtensionContext } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelRef } from '@pebula/ngrid/overlay-panel';\n\n@Component({\n  selector: 'mat-excel-style-header-menu',\n  templateUrl: `./excel-style-header-menu.html`,\n  styleUrls: [ `./excel-style-header-menu.scss` ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatExcelStyleHeaderMenu {\n  column: PblColumn;\n  grid: PblNgridComponent\n\n  @ViewChild('columnMenu', { read: MatMenu, static: true }) matMenu: MatMenu;\n  @ViewChild('menuViewLocation', { read: ViewContainerRef, static: true }) menuViewLocation: ViewContainerRef;\n\n  currentSort: 'asc' | 'desc' | undefined;\n  currentPin: 'start' | 'end' | undefined;\n  currentFilter: any = '';\n\n  constructor(private ref: PblNgridOverlayPanelRef<PblNgridDataHeaderExtensionContext>) {\n    this.column = ref.data.col;\n    this.grid = ref.data.grid;\n\n    if (this.grid.ds.sort.column === this.column) {\n      this.currentSort = this.grid.ds.sort.sort.order;\n    }\n    this.currentPin = this.column.columnDef.sticky ? 'start' : this.column.columnDef.stickyEnd ? 'end' : undefined;\n    const dsFilter = this.grid.ds.filter;\n    if (dsFilter && dsFilter.type === 'value' && dsFilter.columns && dsFilter.columns.indexOf(this.column) >= 0) {\n      this.currentFilter = dsFilter.filter;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.matMenu.closed.subscribe( reason => {\n      this.ref.close();\n    });\n\n    const view = this.menuViewLocation.createEmbeddedView(this.matMenu.templateRef);\n    this.matMenu.setElevation(0);\n    this.matMenu.focusFirstItem('program');\n    this.matMenu._resetAnimation();\n    view.markForCheck();\n    view.detectChanges();\n    this.matMenu._startAnimation();\n  }\n\n  hide(): void {\n    const hidden: string[] = [this.column.id];\n\n    for (const col of this.grid.columnApi.columns) {\n      if (col.hidden) {\n        hidden.push(col.id);\n      }\n    }\n\n    this.grid.hideColumns = hidden;\n  }\n\n  onSortToggle(sort: 'asc' | 'desc'): void {\n    if (this.currentSort === sort) {\n      this.grid.ds.setSort();\n    } else {\n      this.grid.ds.setSort(this.column, { order: sort });\n    }\n  }\n\n  onPinToggle(pin: 'start' | 'end'): void {\n    if (this.currentPin === pin) {\n      this.column.columnDef.updatePin()\n    } else {\n      this.column.columnDef.updatePin(pin)\n    }\n  }\n\n\n  filterColumn(filterValue: string) {\n    this.currentFilter = filterValue;\n    if (!filterValue) {\n      this.grid.setFilter();\n    } else {\n      this.grid.setFilter(filterValue.trim(), [ this.column ]);\n    }\n  }\n\n  clickTrap(event: MouseEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { NgModule, Optional, SkipSelf, ComponentFactoryResolver } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { PblNgridModule, PblNgridConfigService, PblNgridRegistryService } from '@pebula/ngrid';\nimport { PblNgridOverlayPanelModule, PblNgridOverlayPanelComponentExtension } from '@pebula/ngrid/overlay-panel';\nimport { PblNgridTargetEventsModule } from '@pebula/ngrid/target-events';\n\nimport { MatHeaderContextMenuTrigger } from './header-context/header-context-menu-trigger';\nimport { MatHeaderContextMenuExtension } from './header-context/header-context-menu-extension';\nimport { PblNgridMatHeaderContextMenuPlugin } from './header-context/header-context-menu.directive';\nimport { MatExcelStyleHeaderMenu } from './header-context/styles/excel-style-header-menu';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    PblNgridModule,\n    PblNgridOverlayPanelModule,\n  ],\n  declarations: [\n    MatHeaderContextMenuTrigger,\n    PblNgridMatHeaderContextMenuPlugin,\n    MatExcelStyleHeaderMenu,\n  ],\n  exports: [\n    PblNgridMatHeaderContextMenuPlugin,\n  ],\n  entryComponents: [\n    // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)\n    MatHeaderContextMenuTrigger,\n    MatExcelStyleHeaderMenu,\n  ],\n})\nexport class PblNgridContextMenuModule {\n  constructor(@Optional() @SkipSelf() parentModule: PblNgridContextMenuModule,\n              registry: PblNgridRegistryService,\n              cfr: ComponentFactoryResolver,\n              configService: PblNgridConfigService) {\n    if (parentModule) {\n      return;\n    }\n    registry.addMulti('dataHeaderExtensions', new MatHeaderContextMenuExtension(cfr));\n    registry.addMulti('overlayPanels', new PblNgridOverlayPanelComponentExtension('excelMenu', MatExcelStyleHeaderMenu, cfr));\n  }\n}\n"]}
/**
 * @fileoverview added by tsickle
 * Generated from: lib/mat-sort.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, ComponentFactoryResolver } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatSortModule, MatSortHeader } from '@angular/material/sort';
import { MatButtonModule } from '@angular/material/button';
import { PblNgridModule, PblNgridRegistryService } from '@pebula/ngrid';
import { PblNgridMatSortDirective } from './mat-sort.directive';
import { MatSortExtension } from './mat-sort-component-extension';
var PblNgridMatSortModule = /** @class */ (function () {
    function PblNgridMatSortModule(registry, cfr) {
        this.registry = registry;
        registry.addMulti('dataHeaderExtensions', new MatSortExtension(cfr));
    }
    PblNgridMatSortModule.decorators = [
        { type: NgModule, args: [{
                    imports: [CommonModule, MatButtonModule, MatSortModule, PblNgridModule],
                    declarations: [PblNgridMatSortDirective],
                    exports: [PblNgridMatSortDirective, MatSortModule],
                    // TODO: remove when ViewEngine is no longer supported by angular (V11 ???)
                    entryComponents: [MatSortHeader],
                },] }
    ];
    /** @nocollapse */
    PblNgridMatSortModule.ctorParameters = function () { return [
        { type: PblNgridRegistryService },
        { type: ComponentFactoryResolver }
    ]; };
    return PblNgridMatSortModule;
}());
export { PblNgridMatSortModule };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PblNgridMatSortModule.prototype.registry;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXNvcnQubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBlYnVsYS9uZ3JpZC1tYXRlcmlhbC9zb3J0LyIsInNvdXJjZXMiOlsibGliL21hdC1zb3J0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTNELE9BQU8sRUFBRSxjQUFjLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFbEU7SUFRRSwrQkFBb0IsUUFBaUMsRUFBRSxHQUE2QjtRQUFoRSxhQUFRLEdBQVIsUUFBUSxDQUF5QjtRQUNuRCxRQUFRLENBQUMsUUFBUSxDQUFDLHNCQUFzQixFQUFFLElBQUksZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDOztnQkFWRixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxhQUFhLEVBQUUsY0FBYyxDQUFFO29CQUN6RSxZQUFZLEVBQUUsQ0FBRSx3QkFBd0IsQ0FBRTtvQkFDMUMsT0FBTyxFQUFFLENBQUUsd0JBQXdCLEVBQUUsYUFBYSxDQUFFOztvQkFFcEQsZUFBZSxFQUFFLENBQUUsYUFBYSxDQUFFO2lCQUNuQzs7OztnQkFWd0IsdUJBQXVCO2dCQUw3Qix3QkFBd0I7O0lBb0IzQyw0QkFBQztDQUFBLEFBWEQsSUFXQztTQUpZLHFCQUFxQjs7Ozs7O0lBQ3BCLHlDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBNYXRTb3J0TW9kdWxlLCBNYXRTb3J0SGVhZGVyIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc29ydCc7XG5pbXBvcnQgeyBNYXRCdXR0b25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xuXG5pbXBvcnQgeyBQYmxOZ3JpZE1vZHVsZSwgUGJsTmdyaWRSZWdpc3RyeVNlcnZpY2UgfSBmcm9tICdAcGVidWxhL25ncmlkJztcbmltcG9ydCB7IFBibE5ncmlkTWF0U29ydERpcmVjdGl2ZSB9IGZyb20gJy4vbWF0LXNvcnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE1hdFNvcnRFeHRlbnNpb24gfSBmcm9tICcuL21hdC1zb3J0LWNvbXBvbmVudC1leHRlbnNpb24nO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbIENvbW1vbk1vZHVsZSwgTWF0QnV0dG9uTW9kdWxlLCBNYXRTb3J0TW9kdWxlLCBQYmxOZ3JpZE1vZHVsZSBdLFxuICBkZWNsYXJhdGlvbnM6IFsgUGJsTmdyaWRNYXRTb3J0RGlyZWN0aXZlIF0sXG4gIGV4cG9ydHM6IFsgUGJsTmdyaWRNYXRTb3J0RGlyZWN0aXZlLCBNYXRTb3J0TW9kdWxlIF0sXG4gIC8vIFRPRE86IHJlbW92ZSB3aGVuIFZpZXdFbmdpbmUgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZCBieSBhbmd1bGFyIChWMTEgPz8/KVxuICBlbnRyeUNvbXBvbmVudHM6IFsgTWF0U29ydEhlYWRlciBdLFxufSlcbmV4cG9ydCBjbGFzcyBQYmxOZ3JpZE1hdFNvcnRNb2R1bGUge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlZ2lzdHJ5OiBQYmxOZ3JpZFJlZ2lzdHJ5U2VydmljZSwgY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIpIHtcbiAgICByZWdpc3RyeS5hZGRNdWx0aSgnZGF0YUhlYWRlckV4dGVuc2lvbnMnLCBuZXcgTWF0U29ydEV4dGVuc2lvbihjZnIpKTtcbiAgfVxufVxuIl19